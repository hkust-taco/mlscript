:NewDefs
:mono
if true then 1 else 0
if 1+1 > 1 then 1 - 1 else 1*1
//│ Lifted:
//│ TypingUnit {
//│   Code(List(if (true) then 1 else 0))
//│   Code(List(if (>(+(1, 1,), 1,)) then -(1, 1,) else *(1, 1,)))
//│ }
//│ Mono:
//│ TypingUnit {
//│   fun main$$0 = () => if (true) then 1 else 0
//│   fun main$$1 = () => if (>(+(1, 1,), 1,)) then -(1, 1,) else *(1, 1,)
//│   Code(List(main$$0()))
//│   Code(List(main$$1()))
//│ }
//│ fun main$$0: () -> (0 | 1)
//│ fun main$$1: () -> Int
//│ Int
//│ res
//│     = 1
//│ res
//│     = 0

:mono
let b = true
if(b) then 1 else 2
//│ Lifted:
//│ TypingUnit {
//│   let b$1 = true
//│   Code(List(if ('(' b$1 ')') then 1 else 2))
//│ }
//│ Mono:
//│ TypingUnit {
//│   let b$1 = true
//│   fun main$$1 = () => if ('(' b$1 ')') then 1 else 2
//│   Code(List(main$$1()))
//│ }
//│ let b$1: true
//│ fun main$$1: () -> (1 | 2)
//│ 1 | 2
//│ b$1
//│     = true
//│ res
//│     = 1
