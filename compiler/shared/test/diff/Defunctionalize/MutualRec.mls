:NewDefs
:AllowRuntimeErrors

:mono
val any = -20
fun f(x) = 
  if x > any then 0
  else g(x - 1)
fun g(x) = 
  if x > any then g(x - 1)
  else f(x - 2)
g(1)
//│ Lifted:
//│ TypingUnit {
//│   let any$3 = -20
//│   fun f$1 = (x,) => {if (>(x, any$3,)) then 0 else g$2(-(x, 1,),)}
//│   fun g$2 = (x,) => {if (>(x, any$3,)) then g$2(-(x, 1,),) else f$1(-(x, 2,),)}
//│   Code(List(g$2(1,)))
//│ }
//│ Mono:
//│ TypingUnit {
//│   let any$3 = -20
//│   fun f$1 = (x,) => {if (>(x, any$3,)) then 0 else g$2(-(x, 1,),)}
//│   fun g$2 = (x,) => {if (>(x, any$3,)) then g$2(-(x, 1,),) else f$1(-(x, 2,),)}
//│   fun main$$3 = () => g$2(1,)
//│   Code(List(main$$3()))
//│ }
//│ let any$3: -20
//│ fun f$1: Int -> 0
//│ fun g$2: Int -> 0
//│ fun main$$3: () -> 0
//│ 0
//│ any$3
//│       = -20
//│ res
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded
