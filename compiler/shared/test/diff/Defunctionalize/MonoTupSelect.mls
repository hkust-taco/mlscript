:NewDefs

:mono
class Foo() {fun f() = 0}
class Bar() {fun f = 0}
[Foo(), Bar()].0.f()
[Foo(), Bar()].1.f
//│ Lifted:
//│ TypingUnit {
//│   class Foo$1([]) {fun f = () => 0}
//│   class Bar$2([]) {fun f = 0}
//│   Code(List((([Foo$1(), Bar$2(),]).0).f()))
//│   Code(List((([Foo$1(), Bar$2(),]).1).f))
//│ }
//│ Mono:
//│ TypingUnit {
//│   class Foo$1([]) {}
//│   class Bar$2([]) {}
//│   fun f$Bar$2 = (this,) => 0
//│   fun main$$3 = () => let obj = ([Foo$1(), Bar$2(),]).1 in if obj is ‹(Bar$2) then f$Bar$2(obj,); else error›
//│   fun f$Foo$1 = (this,) => 0
//│   fun main$$2 = () => let obj = ([Foo$1(), Bar$2(),]).0 in if obj is ‹(Foo$1) then f$Foo$1(obj,); else error›
//│   Code(List(main$$2()))
//│   Code(List(main$$3()))
//│ }
//│ class Foo$1()
//│ class Bar$2()
//│ fun f$Bar$2: anything -> 0
//│ fun main$$3: () -> 0
//│ fun f$Foo$1: anything -> 0
//│ fun main$$2: () -> 0
//│ 0
//│ res
//│     = 0
//│ res
//│     = 0
