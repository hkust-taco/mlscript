:NewDefs

:mono
fun f(x: Bool) = if x then 42 else 1337
//│ Lifted:
//│ TypingUnit {
//│   fun f$1 = (x: Bool,) => if (x) then 42 else 1337
//│ }
//│ Mono:
//│ TypingUnit {
//│   fun f$1 = (x: Bool,) => if (x) then 42 else 1337
//│ }
//│ fun f$1: (x: Bool) -> (1337 | 42)

:mono
fun foo() = 42
//│ Lifted:
//│ TypingUnit {fun foo$1 = () => 42}
//│ Mono:
//│ TypingUnit {fun foo$1 = () => 42}
//│ fun foo$1: () -> 42

:mono
fun f(x) =
  if(x > 0) then x+1 else x - 1
f(2)+3
//│ Lifted:
//│ TypingUnit {
//│   fun f$1 = (x,) => {if ('(' >(x, 0,) ')') then +(x, 1,) else -(x, 1,)}
//│   Code(List(+(f$1(2,), 3,)))
//│ }
//│ Mono:
//│ TypingUnit {
//│   fun f$1 = (x,) => {if ('(' >(x, 0,) ')') then +(x, 1,) else -(x, 1,)}
//│   fun main$$1 = () => +(f$1(2,), 3,)
//│   Code(List(main$$1()))
//│ }
//│ fun f$1: Int -> Int
//│ fun main$$1: () -> Int
//│ Int
//│ res
//│     = 6

// TODO: Evaluate unused terms
:mono 
fun foo(x, #b) = if b then x else 1337
let a = foo(42, true)
let b = foo(23, false)
//│ Lifted:
//│ TypingUnit {
//│   fun foo$3 = (x, #b$2,) => if (b$2) then x else 1337
//│   let a$1 = foo$3(42, true,)
//│   let b$2 = foo$3(23, false,)
//│ }
//│ Mono:
//│ ╔══[COMPILATION ERROR] Post-process failed to produce AST.
//│ ╙──
//│ 
