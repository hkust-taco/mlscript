:NewDefs

let b = true
class OneInt(val a: Int){
  fun get = () -> a
}
class OneBool(val b: Bool){
  fun get = () -> b
}
(if b then OneInt(1) else OneBool(true)).get()
//│ let b: true
//│ class OneInt(a: Int) {
//│   fun get: () -> Int
//│ }
//│ class OneBool(b: Bool) {
//│   fun get: () -> Bool
//│ }
//│ Int | false | true
//│ 
//│ Simpledef:
//│ {let b = true
//│  class OneInt(val a: Int,) {fun get = () => a}
//│  class OneBool(val b: Bool,) {fun get = () => b}
//│  let selRes$20 = '(' if (b) then OneInt(1,) else OneBool(true,) ')' in case selRes$20 of { OneInt => (selRes$20).get()
//│  OneBool => (selRes$20).get() }}
//│ End simpledef
//│ 
//│ b
//│   = true
//│ res
//│     = 1
