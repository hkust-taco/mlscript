:NewParser
:dp
:ng
code"a + b"
//│ |code"|a| |+| |b|"|
//│ ? block		inspects |code"|a| |+| |b|"|    [at l.238]
//│ @ exprOrIf(0,false)    [at l.358]
//│ │ ? exprOrIf		inspects |code"|a| |+| |b|"|    [at l.403]
//│ │ ! exprOrIf		consumes |code"|a| |+| |b|"|    [at l.436]
//│ │ > @ expr(0,true)    [at l.437]
//│ │ > │ @ exprOrIf(0,true)    [at l.391]
//│ │ > │ │ ? exprOrIf		inspects |a| |+| |b|    [at l.403]
//│ │ > │ │ ! exprOrIf		consumes |a|    [at l.419]
//│ │ > │ │ @ exprCont(0,`a`,false)    [at l.420]
//│ │ > │ │ │ ? exprCont		inspects | |+| |b|    [at l.571]
//│ │ > │ │ │ ! exprCont		consumes | |    [at l.596]
//│ │ > │ │ │ @ exprCont(0,`a`,false)    [at l.597]
//│ │ > │ │ │ │ ? exprCont		inspects |+| |b|    [at l.571]
//│ │ > │ │ │ │ ! exprCont		consumes |+|    [at l.573]
//│ │ > │ │ │ │ @ exprOrIf(18,true)    [at l.576]
//│ │ > │ │ │ │ │ ? exprOrIf		inspects | |b|    [at l.403]
//│ │ > │ │ │ │ │ ! exprOrIf		consumes | |    [at l.405]
//│ │ > │ │ │ │ │ @ exprOrIf(18,true)    [at l.406]
//│ │ > │ │ │ │ │ │ ? exprOrIf		inspects |b|    [at l.403]
//│ │ > │ │ │ │ │ │ ! exprOrIf		consumes |b|    [at l.419]
//│ │ > │ │ │ │ │ │ @ exprCont(18,`b`,false)    [at l.420]
//│ │ > │ │ │ │ │ │ │ ? exprCont		inspects ||    [at l.571]
//│ │ > │ │ │ │ │ │ = Right(b)
//│ │ > │ │ │ │ │ = Right(b)
//│ │ > │ │ │ │ = Right(b)
//│ │ > │ │ │ │ @ exprCont(0,`+ (a,) (b,)`,false)    [at l.588]
//│ │ > │ │ │ │ │ ? exprCont		inspects ||    [at l.571]
//│ │ > │ │ │ │ = Right(+ (a,) (b,))
//│ │ > │ │ │ = Right(+ (a,) (b,))
//│ │ > │ │ = Right(+ (a,) (b,))
//│ │ > │ = Right(+ (a,) (b,))
//│ │ > = + (a,) (b,)
//│ │ > ? concludeWith		inspects ||    [at l.71]
//│ │ > Concluded with + (a,) (b,)
//│ = Right(Quoted' + (a,) (b,) ')
//│ ? block		inspects ||    [at l.360]
//│ ? parseAll		inspects ||    [at l.60]
//│ Parsed: Quoted' + (a,) (b,) ';
//│ /!!!\ Uncaught error: java.lang.AssertionError: assertion failed
//│ 	at: scala.Predef$.assert(Predef.scala:264)
//│ 	at: mlscript.TyperDatatypes$TypeRef.$anonfun$mapTargs$3(TyperDatatypes.scala:256)
//│ 	at: scala.Option.fold(Option.scala:263)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mapTargs(TyperDatatypes.scala:255)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.childrenPol(TyperHelpers.scala:611)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.childrenPol$(TyperHelpers.scala:594)
//│ 	at: mlscript.TyperDatatypes$SimpleType.childrenPol(TyperDatatypes.scala:81)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.rec$1(TyperHelpers.scala:636)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.getVarsPol(TyperHelpers.scala:640)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.getVarsPol$(TyperHelpers.scala:616)

:NewParser
:d
:ne
:NoJS
code"let a = 1; ${a}"
//│ 0. Typing term Quoted' let a = 1 in Unquote' a ' '
//│ | 0. Typing term let a = 1 in Unquote' a '
//│ | | 1. Typing term 1
//│ | | 1. : 1<int,number>
//│ | | 0. Typing term Unquote' a '
//│ | | | 0. Typing term a
//│ | | | 0. : 1<int,number>
//│ | | 0. : 1<int,number>
//│ | 0. : 1<int,number>
//│ 0. : Code[1<int,number>]
//│ ⬤ Typed as: Code[1<int,number>]
//│  where: 
//│ res: code & {Code#T <: 1}


:NewParser
:d
:ne
:NoJS
code"let a = 1; ${a + b + b} + 10"
//│ 0. Typing term Quoted' let a = 1 in + (Unquote' + (+ (a,) (b,),) (b,) ',) (10,) '
//│ | 0. Typing term let a = 1 in + (Unquote' + (+ (a,) (b,),) (b,) ',) (10,)
//│ | | 1. Typing term 1
//│ | | 1. : 1<int,number>
//│ | | 0. Typing term + (Unquote' + (+ (a,) (b,),) (b,) ',) (10,)
//│ | | | 0. Typing term + (Unquote' + (+ (a,) (b,),) (b,) ',)
//│ | | | | 0. Typing term +
//│ | | | | 0. : (int<number> -> (int<number> -> int<number>))
//│ | | | | 0. Typing term Unquote' + (+ (a,) (b,),) (b,) ',
//│ | | | | | 0. Typing term Unquote' + (+ (a,) (b,),) (b,) '
//│ | | | | | | 0. Typing term + (+ (a,) (b,),) (b,)
//│ | | | | | | | 0. Typing term + (+ (a,) (b,),)
//│ | | | | | | | | 0. Typing term +
//│ | | | | | | | | 0. : (int<number> -> (int<number> -> int<number>))
//│ | | | | | | | | 0. Typing term + (a,) (b,),
//│ | | | | | | | | | 0. Typing term + (a,) (b,)
//│ | | | | | | | | | | 0. Typing term + (a,)
//│ | | | | | | | | | | | 0. Typing term +
//│ | | | | | | | | | | | 0. : (int<number> -> (int<number> -> int<number>))
//│ | | | | | | | | | | | 0. Typing term a,
//│ | | | | | | | | | | | | 0. Typing term a
//│ | | | | | | | | | | | | 0. : 1<int,number>
//│ | | | | | | | | | | | 0. : (1<int,number>,)
//│ | | | | | | | | | | | CONSTRAIN (int<number> -> (int<number> -> int<number>)) <! (1<int,number> -> α28)
//│ | | | | | | | | | | |   where 
//│ | | | | | | | | | | | C (int<number> -> (int<number> -> int<number>)) <! (1<int,number> -> α28)    (0)
//│ | | | | | | | | | | | | C (1<int,number>,) <! (int<number>,)    (1)
//│ | | | | | | | | | | | | C (int<number> -> int<number>) <! α28    (1)
//│ | | | | | | | | | | 0. : α28
//│ | | | | | | | | | | 0. Typing term b,
//│ | | | | | | | | | | | 0. Typing term b
//│ | | | | | | | | | | | | free: b
//│ | | | | | | | | | | | 0. : b.type29
//│ | | | | | | | | | | 0. : (b.type29,)
//│ | | | | | | | | | | CONSTRAIN α28 <! (b.type29 -> α30)
//│ | | | | | | | | | |   where 
//│ 		α28 :> (int<number> -> int<number>)
//│ | | | | | | | | | | C α28 <! (b.type29 -> α30)    (0)
//│ | | | | | | | | | | | C (int<number> -> int<number>) <! (b.type29 -> α30)    (1)
//│ | | | | | | | | | | | | C (b.type29,) <! (int<number>,)    (2)
//│ | | | | | | | | | | | | | C b.type29 <! int<number>    (3)
//│ | | | | | | | | | | | | C int<number> <! α30    (4)
//│ | | | | | | | | | 0. : α30
//│ | | | | | | | | 0. : (α30,)
//│ | | | | | | | | CONSTRAIN (int<number> -> (int<number> -> int<number>)) <! (α30 -> α31)
//│ | | | | | | | |   where 
//│ 		α30 :> int<number>
//│ | | | | | | | | C (int<number> -> (int<number> -> int<number>)) <! (α30 -> α31)    (0)
//│ | | | | | | | | | C (α30,) <! (int<number>,)    (1)
//│ | | | | | | | | | | C α30 <! int<number>    (2)
//│ | | | | | | | | | | | C int<number> <! int<number>    (3)
//│ | | | | | | | | | C (int<number> -> int<number>) <! α31    (3)
//│ | | | | | | | 0. : α31
//│ | | | | | | | 0. Typing term b,
//│ | | | | | | | | 0. Typing term b
//│ | | | | | | | | 0. : b.type29
//│ | | | | | | | 0. : (b.type29,)
//│ | | | | | | | CONSTRAIN α31 <! (b.type29 -> α32)
//│ | | | | | | |   where 
//│ 		b.type29 <: int<number>
//│ 		α31 :> (int<number> -> int<number>)
//│ | | | | | | | C α31 <! (b.type29 -> α32)    (0)
//│ | | | | | | | | C (int<number> -> int<number>) <! (b.type29 -> α32)    (1)
//│ | | | | | | | | | C (b.type29,) <! (int<number>,)    (2)
//│ | | | | | | | | | C int<number> <! α32    (2)
//│ | | | | | | 0. : α32
//│ | | | | | 0. : α32
//│ | | | | 0. : (α32,)
//│ | | | | CONSTRAIN (int<number> -> (int<number> -> int<number>)) <! (α32 -> α33)
//│ | | | |   where 
//│ 		α32 :> int<number>
//│ | | | | C (int<number> -> (int<number> -> int<number>)) <! (α32 -> α33)    (0)
//│ | | | | | C (α32,) <! (int<number>,)    (1)
//│ | | | | | | C α32 <! int<number>    (2)
//│ | | | | | | | C int<number> <! int<number>    (3)
//│ | | | | | C (int<number> -> int<number>) <! α33    (3)
//│ | | | 0. : α33
//│ | | | 0. Typing term 10,
//│ | | | | 0. Typing term 10
//│ | | | | 0. : 10<int,number>
//│ | | | 0. : (10<int,number>,)
//│ | | | CONSTRAIN α33 <! (10<int,number> -> α34)
//│ | | |   where 
//│ 		α33 :> (int<number> -> int<number>)
//│ | | | C α33 <! (10<int,number> -> α34)    (0)
//│ | | | | C (int<number> -> int<number>) <! (10<int,number> -> α34)    (1)
//│ | | | | | C (10<int,number>,) <! (int<number>,)    (2)
//│ | | | | | C int<number> <! α34    (2)
//│ | | 0. : α34
//│ | 0. : α34
//│ 0. : Code[α34,b.type29]
//│ ⬤ Typed as: Code[α34,b.type29]
//│  where: 
//│ 		b.type29 <: int<number>
//│ 		α34 :> int<number>
//│ /!!!\ Uncaught error: java.lang.AssertionError: assertion failed
//│ 	at: scala.Predef$.assert(Predef.scala:264)
//│ 	at: mlscript.TyperDatatypes$TypeRef.$anonfun$mapTargs$3(TyperDatatypes.scala:256)
//│ 	at: scala.Option.fold(Option.scala:263)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mapTargs(TyperDatatypes.scala:255)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.childrenPol(TyperHelpers.scala:611)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.childrenPol$(TyperHelpers.scala:594)
//│ 	at: mlscript.TyperDatatypes$SimpleType.childrenPol(TyperDatatypes.scala:81)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.rec$1(TyperHelpers.scala:636)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.getVarsPol(TyperHelpers.scala:640)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.getVarsPol$(TyperHelpers.scala:616)
