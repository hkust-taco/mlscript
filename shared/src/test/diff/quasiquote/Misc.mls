:NewParser

code"2 + 2"
// in JS: ["+", 2, 2]
//│ res: code & {Code#T <: int}
//│ Code generation crashed:
//│   scala.MatchError: Quoted' + (2,) (2,) ' (of class mlscript.Quoted)

code"x => x + 2"
// in JS (bad): ["lambda", ["x"], ["+", ["ref", "x"]], 2]]
// in JS (hygienic): const x_sym = Symbol("x"); ["lambda", [x_sym], ["+", x_sym], 2]]
//│ res: code & {Code#T <: int -> int}
//│ Code generation crashed:
//│   scala.MatchError: Quoted' x, => + (x,) (2,) ' (of class mlscript.Quoted)

fun foo(x) =
  code"10 + x"
//│ foo: int -> (code & {Code#T <: int})
//│ Code generation crashed:
//│   scala.MatchError: Quoted' + (10,) (x,) ' (of class mlscript.Quoted)

code"foo(123) + 1"
//│ ╔══[ERROR] Type mismatch in operator application:
//│ ║  l.22: 	code"foo(123) + 1"
//│ ║        	     ^^^^^^^^^^
//│ ╟── application of type `code & {Code#T <: ?a}` is not an instance of type `int`
//│ ║  l.22: 	code"foo(123) + 1"
//│ ╙──      	     ^^^^^^^^
//│ res: code & {Code#T <: error | int}
//│ Code generation crashed:
//│   scala.MatchError: Quoted' + (foo (123,),) (1,) ' (of class mlscript.Quoted)

code"10 + ${qq_int}"
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: $
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:635)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less(TyperHelpers.scala:460)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less$(TyperHelpers.scala:396)
//│ 	at: mlscript.TyperDatatypes$SimpleType.$less$colon$less(TyperDatatypes.scala:81)
//│ 	at: mlscript.TyperDatatypes$FieldType.$less$colon$less(TyperDatatypes.scala:322)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$anonfun$$less$colon$less$2(TyperHelpers.scala:415)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$anonfun$$less$colon$less$2$adapted(TyperHelpers.scala:414)
//│ 	at: scala.collection.LazyZip2.forall(LazyZipOps.scala:106)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less(TyperHelpers.scala:414)

"x"
//│ res: "x"
//│    = 'x'

// The inner code should have type Code<int, "x" | "y">
code"x => y => 15 + ${   code"x + y"   }"
//│ /!!!\ Uncaught error: java.util.NoSuchElementException: key not found: $
//│ 	at: scala.collection.immutable.BitmapIndexedMapNode.apply(HashMap.scala:635)
//│ 	at: scala.collection.immutable.HashMap.apply(HashMap.scala:132)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less(TyperHelpers.scala:460)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less$(TyperHelpers.scala:396)
//│ 	at: mlscript.TyperDatatypes$SimpleType.$less$colon$less(TyperDatatypes.scala:81)
//│ 	at: mlscript.TyperDatatypes$FieldType.$less$colon$less(TyperDatatypes.scala:322)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$anonfun$$less$colon$less$2(TyperHelpers.scala:415)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$anonfun$$less$colon$less$2$adapted(TyperHelpers.scala:414)
//│ 	at: scala.collection.LazyZip2.forall(LazyZipOps.scala:106)
//│ 	at: mlscript.TyperHelpers$SimpleTypeImpl.$less$colon$less(TyperHelpers.scala:414)

// FIXME
qq_int : Code<int>
//│ ╔══[ERROR] identifier not found: qq_int
//│ ║  l.65: 	qq_int : Code<int>
//│ ╙──      	^^^^^^
//│ res: code & {Code#T <: int}
//│ Code generation encountered an error:
//│   unresolved symbol qq_int

