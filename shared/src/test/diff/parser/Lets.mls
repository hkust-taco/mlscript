:AllowParseErrors


let x = 1
//│ |#let| |x| |#=| |1|
//│ Parsed: {let x = 1}

let x = 1, y = 2
//│ |#let| |x| |#=| |1|,| |y| |#=| |2|
//│ ╔══[PARSE ERROR] Expected end of input; found '=' instead
//│ ║  l.8: 	let x = 1, y = 2
//│ ╙──     	             ^
//│ Parsed: {let x = ,(1, y,)}

let x = 1, y = 2
x + y
//│ |#let| |x| |#=| |1|,| |y| |#=| |2|↵|x| |+| |y|
//│ ╔══[PARSE ERROR] Expected end of input; found '=' instead
//│ ║  l.15: 	let x = 1, y = 2
//│ ╙──      	             ^
//│ Parsed: {let x = ,(1, y,)}

let x = 1 in x + 1
//│ |#let| |x| |#=| |1| |#in| |x| |+| |1|
//│ Parsed: {let x = 1 in +(x,)(1,)}

let x = 1, y = 2 in x + y
//│ |#let| |x| |#=| |1|,| |y| |#=| |2| |#in| |x| |+| |y|
//│ ╔══[PARSE ERROR] Expected end of input; found '=' instead
//│ ║  l.30: 	let x = 1, y = 2 in x + y
//│ ╙──      	             ^
//│ Parsed: {let x = ,(1, y,)}

let in 123
//│ |#let| |#in| |123|
//│ ╔══[PARSE ERROR] Expected a function name; found 'in' keyword instead
//│ ║  l.37: 	let in 123
//│ ╙──      	    ^^
//│ ╔══[PARSE ERROR] Expected function parameter list; found literal instead
//│ ║  l.37: 	let in 123
//│ ╙──      	       ^^^
//│ ╔══[PARSE ERROR] Expected ':' or '=' followed by a function body or signature; found end of input instead
//│ ║  l.37: 	let in 123
//│ ╙──      	          ^
//│ Parsed: {let <error> = undefined}

let x = 1; x + 1
//│ |#let| |x| |#=| |1|;| |x| |+| |1|
//│ Parsed: {let x = 1; +(x,)(1,)}

let x = 1, y = 2; x + y
//│ |#let| |x| |#=| |1|,| |y| |#=| |2|;| |x| |+| |y|
//│ ╔══[PARSE ERROR] Expected end of input; found '=' instead
//│ ║  l.54: 	let x = 1, y = 2; x + y
//│ ╙──      	             ^
//│ Parsed: {let x = ,(1, y,)}




let in person be the default in following meetings
//│ |#let| |#in| |person| |be| |the| |default| |#in| |following| |meetings|
//│ ╔══[PARSE ERROR] Expected a function name; found 'in' keyword instead
//│ ║  l.64: 	let in person be the default in following meetings
//│ ╙──      	    ^^
//│ ╔══[PARSE ERROR] Expected function parameter list; found identifier instead
//│ ║  l.64: 	let in person be the default in following meetings
//│ ╙──      	       ^^^^^^
//│ ╔══[PARSE ERROR] Expected ':' or '=' followed by a function body or signature; found identifier instead
//│ ║  l.64: 	let in person be the default in following meetings
//│ ╙──      	              ^^
//│ ╔══[PARSE ERROR] Expected end of input; found identifier instead
//│ ║  l.64: 	let in person be the default in following meetings
//│ ╙──      	                 ^^^
//│ Parsed: {let <error> = undefined}



