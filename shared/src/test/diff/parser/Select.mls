
x.a
//│ |x|.a|
//│ Parsed: {(x).a}

x . a
//│ |x| |.| |a|
//│ Parsed: {. (x,) (a,)}

x. a
//│ |x|.| |a|
//│ Parsed: {. (x,) (a,)}

x .a
//│ |x| |.a|
//│ Parsed: {(x).a}

x
  .a
//│ |x|→|.a|←|
//│ Parsed: {(x).a}

:pe
x
.a
//│ |x|↵|.a|
//│ ╔══[PARSE ERROR] Unexpected selector in expression position
//│ ║  l.25: 	.a
//│ ╙──      	^^
//│ ╔══[PARSE ERROR] Unexpected end of input; an expression was expected here
//│ ║  l.25: 	.a
//│ ╙──      	  ^
//│ Parsed: {x; undefined}

x.a.b
//│ |x|.a|.b|
//│ Parsed: {((x).a).b}

x
  .a
  .b
//│ |x|→|.a|↵|.b|←|
//│ Parsed: {((x).a).b}

x
  .a.b
//│ |x|→|.a|.b|←|
//│ Parsed: {((x).a).b}

// Perhaps surprising:
x
  .a
    .b
//│ |x|→|.a|→|.b|←|←|
//│ Parsed: {((x).a).b}

x
  .a
    .b
    .c
  .d
//│ |x|→|.a|→|.b|↵|.c|←|↵|.d|←|
//│ Parsed: {((((x).a).b).c).d}

x
  .a
    .b
      .d
      .e
    .c
  .d
    .a
//│ |x|→|.a|→|.b|→|.d|↵|.e|←|↵|.c|←|↵|.d|→|.a|←|←|
//│ Parsed: {(((((((x).a).b).d).e).c).d).a}

:pe
.
//│ |.|
//│ ╔══[PARSE ERROR] Unexpected operator in expression position
//│ ║  l.77: 	.
//│ ╙──      	^
//│ ╔══[PARSE ERROR] Unexpected end of input; an expression was expected here
//│ ║  l.77: 	.
//│ ╙──      	 ^
//│ Parsed: {undefined}

:pe
(.)
//│ |(|.|)|
//│ ╔══[PARSE ERROR] Unexpected operator here
//│ ║  l.88: 	(.)
//│ ╙──      	 ^
//│ Parsed: {'('  ')'}

:pe
a, b
//│ |a|,| |b|
//│ ╔══[PARSE ERROR] Expected end of input; found comma instead
//│ ║  l.96: 	a, b
//│ ╙──      	 ^
//│ Parsed: {a}


a .b .c
//│ |a| |.b| |.c|
//│ Parsed: {((a).b).c}

a + 1 .c
//│ |a| |+| |1| |.c|
//│ Parsed: {+ (a,) ((1).c,)}

a + f(1) .c
//│ |a| |+| |f|(|1|)| |.c|
//│ Parsed: {+ (a,) ((f (1,)).c,)}

a + f (1) .c
//│ |a| |+| |f| |(|1|)| |.c|
//│ Parsed: {+ (a,) ((f (1,)).c,)}

a + f (1).c
//│ |a| |+| |f| |(|1|)|.c|
//│ Parsed: {+ (a,) ((f (1,)).c,)}

f of x . y
//│ |f| |#of| |x| |.| |y|
//│ Parsed: {f (. (x,) (y,),)}

f of x .y
//│ |f| |#of| |x| |.y|
//│ Parsed: {f ((x).y,)}

a + b
  .c
//│ |a| |+| |b|→|.c|←|
//│ Parsed: {(+ (a,) (b,)).c}

:pe
a +
  b
  .c
//│ |a| |+|→|b|↵|.c|←|
//│ ╔══[PARSE ERROR] Unexpected selector in expression position
//│ ║  l.140: 	  .c
//│ ╙──       	  ^^
//│ ╔══[PARSE ERROR] Unexpected end of indented block; an expression was expected here
//│ ║  l.140: 	  .c
//│ ╙──       	    ^
//│ Parsed: {+ (a,) ({b; undefined},)}

a +
  b
    .c
//│ |a| |+|→|b|→|.c|←|←|
//│ Parsed: {+ (a,) ({(b).c},)}

a + b
  .c * 2
    .d - 1
//│ |a| |+| |b|→|.c| |*| |2|→|.d| |-| |1|←|←|
//│ Parsed: {- ((* ((+ (a,) (b,)).c,) (2,)).d,) (1,)}

a + b
  .c * 2
  .d - 1
//│ |a| |+| |b|→|.c| |*| |2|↵|.d| |-| |1|←|
//│ Parsed: {- ((* ((+ (a,) (b,)).c,) (2,)).d,) (1,)}


a
  .b
  of c
//│ /!!!\ Uncaught error: java.lang.ArrayIndexOutOfBoundsException: Index 13 out of bounds for length 13
//│ 	at: mlscript.NewLexer.isQuasiquoteKeyword$1(NewLexer.scala:81)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:91)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:87)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:150)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:140)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:155)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:130)

a
  .b + 1
  of c
//│ /!!!\ Uncaught error: java.lang.ArrayIndexOutOfBoundsException: Index 17 out of bounds for length 17
//│ 	at: mlscript.NewLexer.isQuasiquoteKeyword$1(NewLexer.scala:81)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:91)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:87)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:150)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:140)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:160)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)

a
  .b + 1
    of c
//│ /!!!\ Uncaught error: java.lang.ArrayIndexOutOfBoundsException: Index 19 out of bounds for length 19
//│ 	at: mlscript.NewLexer.isQuasiquoteKeyword$1(NewLexer.scala:81)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:91)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:87)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:150)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:130)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:160)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)

:pe
a
  .b +
    1
    of c
//│ /!!!\ Uncaught error: java.lang.ArrayIndexOutOfBoundsException: Index 23 out of bounds for length 23
//│ 	at: mlscript.NewLexer.isQuasiquoteKeyword$1(NewLexer.scala:81)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:91)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:87)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:150)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:140)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:160)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:130)

a
  .b +
    1
      of c
//│ /!!!\ Uncaught error: java.lang.ArrayIndexOutOfBoundsException: Index 25 out of bounds for length 25
//│ 	at: mlscript.NewLexer.isQuasiquoteKeyword$1(NewLexer.scala:81)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:91)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:87)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:150)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:130)
//│ 	at: mlscript.NewLexer.go$1(NewLexer.scala:82)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:160)
//│ 	at: mlscript.NewLexer.lex(NewLexer.scala:130)

a
  .b
  of c
  .d
//│ |a|→|.b|↵|#of| |c|↵|.d|←|
//│ Parsed: {((a).b (c,)).d}

a
  .b
    of c
  .d
//│ |a|→|.b|→|#of| |c|←|↵|.d|←|
//│ Parsed: {((a).b (c,)).d}

a
  .b
  +1
  *2
//│ |a|→|.b|↵|+|1|↵|*|2|←|
//│ Parsed: {* (+ ((a).b,) (1,),) (2,)}

// TODO we should find a more uniform way of typing indented operator/selector/of blocks
a
  +1
  *2
  .b
//│ |a|→|+|1|↵|*|2|↵|.b|←|
//│ ╔══[PARSE ERROR] Unexpected selector in operator block
//│ ║  l.272: 	  .b
//│ ╙──       	  ^^
//│ Parsed: {* (+ a 1) 2}


1 .+ 2
//│ |1| |.+| |2|
//│ Parsed: {.+ (1,) (2,)}

1 +. 2
//│ |1| |+.| |2|
//│ Parsed: {+. (1,) (2,)}

1 .+! 2
//│ |1| |.+!| |2|
//│ Parsed: {.+! (1,) (2,)}

0 * 1 .+. 2 * 3
//│ |0| |*| |1| |.+.| |2| |*| |3|
//│ Parsed: {* (* (0,) (.+. (1,) (2,),),) (3,)}

:w
1 .+a 2
//│ |1| |.+|a| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.297: 	1 .+a 2
//│ ╙──       	    ^^^
//│ Parsed: {.+ (1,) (a (2,),)}


