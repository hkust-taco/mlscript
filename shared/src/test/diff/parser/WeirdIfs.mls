
if else e
//│ |#if| |#else| |e|
//│ Parsed: {if else e}

if x is else e
//│ |#if| |x| |is| |#else| |e|
//│ Parsed: {if x is else e}

:pe
if x is
  else e
//│ |#if| |x| |is|→|#else| |e|←|
//│ ╔══[PARSE ERROR] Unexpected indented block in expression position
//│ ║  l.12: 	  else e
//│ ╙──      	^^
//│ ╔══[PARSE ERROR] Unexpected end of input; an expression was expected here
//│ ║  l.12: 	  else e
//│ ╙──      	  ^
//│ ╔══[PARSE ERROR] Expected 'then'/'else' clause; found operator application instead
//│ ║  l.11: 	if x is
//│ ║        	   ^^^^
//│ ║  l.12: 	  else e
//│ ║        	^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.11: 	if x is
//│ ╙──      	^^
//│ Parsed: {if (is(x,)(undefined,)) then undefined}

:pe
if x is
  P else e
//│ |#if| |x| |is|→|P| |#else| |e|←|
//│ ╔══[PARSE ERROR] Unexpected 'else' keyword here
//│ ║  l.32: 	  P else e
//│ ╙──      	    ^^^^
//│ ╔══[PARSE ERROR] Expected 'then'/'else' clause; found operator application instead
//│ ║  l.31: 	if x is
//│ ║        	   ^^^^
//│ ║  l.32: 	  P else e
//│ ║        	^^^^
//│ ╟── Note: 'if' expression started here:
//│ ║  l.31: 	if x is
//│ ╙──      	^^
//│ Parsed: {if (is(x,)({P},)) then undefined}


// TODO(Luyu): move to another test file
if x is
  Some(xv) and y is Left(yv) then xv + yv
  Some(xv) and y is Right(yv2) then xv + yv2
  else els
//│ |#if| |x| |is|→|Some|(|xv|)| |and| |y| |is| |Left|(|yv|)| |#then| |xv| |+| |yv|↵|Some|(|xv|)| |and| |y| |is| |Right|(|yv2|)| |#then| |xv| |+| |yv2|↵|#else| |els|←|
//│ Parsed: {if x is ‹(and(Some(xv,),)(is(y,)(Left(yv,),),)) then +(xv,)(yv,); (and(Some(xv,),)(is(y,)(Right(yv2,),),)) then +(xv,)(yv2,); else els›}




