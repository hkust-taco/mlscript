:AllowParseErrors


fun f: (x: Int) => Int
//│ |#fun| |f|#:| |(|x|#:| |Int|)| |#=>| |Int|
//│ Parsed: {fun f: (x: Int) -> Int}

fun f: (x: Int => Int, y: Int) => Int
//│ |#fun| |f|#:| |(|x|#:| |Int| |#=>| |Int|,| |y|#:| |Int|)| |#=>| |Int|
//│ Parsed: {fun f: (x: Int -> Int, y: Int) -> Int}

fun f: (x: Int, y: Int => Int) => Int
//│ |#fun| |f|#:| |(|x|#:| |Int|,| |y|#:| |Int| |#=>| |Int|)| |#=>| |Int|
//│ Parsed: {fun f: (x: Int, y: Int -> Int) -> Int}

fun f: (x: Int, y: (Int, Int) => Int) => Int
//│ |#fun| |f|#:| |(|x|#:| |Int|,| |y|#:| |(|Int|,| |Int|)| |#=>| |Int|)| |#=>| |Int|
//│ Parsed: {fun f: (x: Int, y: (Int, Int) -> Int) -> Int}

fun f: (x: Int)
//│ |#fun| |f|#:| |(|x|#:| |Int|)|
//│ ╔══[PARSE ERROR] Illegal position for field specification
//│ ║  l.20: 	fun f: (x: Int)
//│ ╙──      	        ^^^^^^
//│ Parsed: {fun f: Int}

fun f: (x: Int, y: Int)
//│ |#fun| |f|#:| |(|x|#:| |Int|,| |y|#:| |Int|)|
//│ ╔══[PARSE ERROR] Illegal position for field specification
//│ ║  l.27: 	fun f: (x: Int, y: Int)
//│ ╙──      	        ^^^^^^
//│ ╔══[PARSE ERROR] Illegal position for field specification
//│ ║  l.27: 	fun f: (x: Int, y: Int)
//│ ╙──      	                ^^^^^^
//│ Parsed: {fun f: ,[Int, Int]}

fun match: forall 'res: (() -> Int, ifCons: Int) => Int
//│ |#fun| |match|#:| |#forall| |'res|#:| |(|(||)| |->| |Int|,| |ifCons|#:| |Int|)| |#=>| |Int|
//│ Parsed: {fun match: forall 'res. (() -> Int, ifCons: Int) -> Int}

fun match: forall 'res: (() => Int, ifCons: Int) => Int
//│ |#fun| |match|#:| |#forall| |'res|#:| |(|(||)| |#=>| |Int|,| |ifCons|#:| |Int|)| |#=>| |Int|
//│ Parsed: {fun match: forall 'res. (() -> Int, ifCons: Int) -> Int}

fun match: forall 'res: (() => Int, Int) => Int
//│ |#fun| |match|#:| |#forall| |'res|#:| |(|(||)| |#=>| |Int|,| |Int|)| |#=>| |Int|
//│ Parsed: {fun match: forall 'res. (() -> Int, Int) -> Int}

f(x => x, a)
//│ |f|(|x| |#=>| |x|,| |a|)|
//│ Parsed: {f((x,) => x, a,)}

f(x => x, y: a)
//│ |f|(|x| |#=>| |x|,| |y|#:| |a|)|
//│ Parsed: {f((x,) => x, y: a,)}


