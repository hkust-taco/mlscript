

class Foo<A>
//│ |#class| |Foo|‹|A|›|
//│ Parsed: {class Foo[A]() {}}



class Foo‹A›
//│ |#class| |Foo|‹|A|›|
//│ Parsed: {class Foo[A]() {}}


(1)
//│ |(|1|)|
//│ Parsed: {'(' 1, ')'}


foo<1,2,3>
//│ |foo|‹|1|,|2|,|3|›|
//│ Parsed: {foo‹1, 2, 3›}

foo<1, 2, 3>
//│ |foo|‹|1|,| |2|,| |3|›|
//│ Parsed: {foo‹1, 2, 3›}

foo<1, 2, 3>()
//│ |foo|‹|1|,| |2|,| |3|›|(||)|
//│ Parsed: {foo‹1, 2, 3› ()}

foo<1, 2, 3>(1, 2, 3)
//│ |foo|‹|1|,| |2|,| |3|›|(|1|,| |2|,| |3|)|
//│ Parsed: {foo‹1, 2, 3› (1, 2, 3,)}

1 < 2 > 4
//│ |1| |<| |2| |>| |4|
//│ Parsed: {> (< 1 2) 4}

:w
1 < 2> 4
//│ ╔══[WARNING] This looks like an angle bracket, but it does not close any angle bracket section
//│ ║  l.40: 	1 < 2> 4
//│ ║        	     ^
//│ ╙── Add spaces around it if you intended to use `<` as an operator
//│ |1| |<| |2|>| |4|
//│ Parsed: {> (< 1 2) 4}

:pe
1< 2 > 4
//│ ╔══[PARSE ERROR] Unmatched opening angle bracket
//│ ║  l.49: 	1< 2 > 4
//│ ║        	 ^
//│ ╙── Note that `<` without spaces around it is considered as an angle bracket and not as an operator
//│ | |2| |>| |4|1|
//│ ╔══[PARSE ERROR] Unexpected space in expression position
//│ ║  l.49: 	1< 2 > 4
//│ ╙──      	  ^
//│ Parsed: {> 2 (4 (1,))}

:w
1< 2> 4
//│ |1|‹| |2|›| |4|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.61: 	1< 2> 4
//│ ╙──      	^^^^^^^
//│ Parsed: {1‹2› (4,)}

1< 2> (4)
//│ |1|‹| |2|›| |(|4|)|
//│ Parsed: {1‹2› (4,)}

1<2>(4)
//│ |1|‹|2|›|(|4|)|
//│ Parsed: {1‹2› (4,)}

1<>2
//│ |1|<>|2|
//│ Parsed: {<> 1 2}

:pe
1< >2
//│ ╔══[PARSE ERROR] Unmatched opening angle bracket
//│ ║  l.81: 	1< >2
//│ ║        	 ^
//│ ╙── Note that `<` without spaces around it is considered as an angle bracket and not as an operator
//│ | |>|2|1|
//│ ╔══[PARSE ERROR] Unexpected space in expression position
//│ ║  l.81: 	1< >2
//│ ╙──      	  ^
//│ ╔══[PARSE ERROR] Unexpected operator in expression position
//│ ║  l.81: 	1< >2
//│ ╙──      	   ^
//│ Parsed: {2 (1,)}

:pe
1 < >2
//│ |1| |<| |>|2|
//│ ╔══[PARSE ERROR] Unexpected operator in expression position
//│ ║  l.96: 	1 < >2
//│ ╙──      	    ^
//│ Parsed: {< 1 2}


foo<S, T>(1, 2, 3) & Bar<U>("ok")
//│ |foo|‹|S|,| |T|›|(|1|,| |2|,| |3|)| |&| |Bar|‹|U|›|(|"ok"|)|
//│ Parsed: {& (foo‹S, T› (1, 2, 3,)) (Bar‹U› ("ok",))}

foo<Str, Int>(2 + 3) & Bar<MyClass>("ok")
//│ |foo|‹|Str|,| |Int|›|(|2| |+| |3|)| |&| |Bar|‹|MyClass|›|(|"ok"|)|
//│ Parsed: {& (foo‹Str, Int› (+ 2 3,)) (Bar‹MyClass› ("ok",))}

:pe
foo[S, T](1, 2, 3) & Bar[U]("ok")
//│ |foo|[|S|,| |T|]|(|1|,| |2|,| |3|)| |&| |Bar|[|U|]|(|"ok"|)|
//│ ╔══[PARSE ERROR] Unexpected comma here
//│ ║  l.113: 	foo[S, T](1, 2, 3) & Bar[U]("ok")
//│ ╙──       	     ^
//│ Parsed: {& ((foo)[S] (1, 2, 3,)) ((Bar)[U] ("ok",))}

