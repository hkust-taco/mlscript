:NewDefs

:ducs:postprocess.result,desugared
fun mixed_literals(v) =
  if v is
    true then "true"
    false then "false"
    1 then "1"
    2 then "2"
//│ Post-processed UCS term:
//│ case v*‡ of
//│   true*† -> "true"
//│   2 -> "2"
//│   1 -> "1"
//│   false*† -> "false"
//│ Desugared term: case v of { true => "true"; 2 => "2"; 1 => "1"; false => "false" }
//│ fun mixed_literals: (1 | 2 | false | true) -> ("1" | "2" | "false" | "true")

:ducs:postprocess.result
fun separated_by_and(v) =
  if v is
    true then "true"
    _ and v is
      false then "false"
//│ Post-processed UCS term:
//│ case v*‡ of
//│   true*† -> "true"
//│   false*† -> "false"
//│ fun separated_by_and: Bool -> ("false" | "true")

:ducs:postprocess.result
fun dual_patterns(x, y) =
  if
    x is "some" and y is "none" then 0
    x is "none" and y is "some" then 1
    x is "some" and y is "some" then 2
    x is "none" and y is "none" then 3
//│ Post-processed UCS term:
//│ case x*‡ of
//│   "some" ->
//│     case y*‡ of
//│       "none" -> 0
//│       "some" -> 2
//│   "none" ->
//│     case y*‡ of
//│       "some" -> 1
//│       "none" -> 3
//│ fun dual_patterns: ("none" | "some", "none" | "some") -> (0 | 1 | 2 | 3)

:ducs:postprocess.result
fun unordered_dual_patterns(x, y) =
  if
    x is "some" and y is "none" then 0
    y is "some" and x is "none" then 1
    y is "some" and x is "some" then 2
    x is "none" and y is "none" then 3
//│ Post-processed UCS term:
//│ case x*‡ of
//│   "some" ->
//│     case y*‡ of
//│       "none" -> 0
//│       "some" -> 2
//│   "none" ->
//│     case y*‡ of
//│       "some" -> 1
//│       "none" -> 3
//│ fun unordered_dual_patterns: ("none" | "some", "none" | "some") -> (0 | 1 | 2 | 3)
