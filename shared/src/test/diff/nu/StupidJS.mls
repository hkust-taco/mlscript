:NewDefs


module C { fun f() = this }
//│ module C {
//│   fun f: () -> C
//│ }

C.f()
//│ C
//│ res
//│     = C { class: [class C] }


// * In JS semantics, C.f will return a plain method **without capturing `this`**!!
// * This is very dumb. In Python for example, one gets a closure that captures `this`.
// * We can't easily work around this without incurring either bad performance overhead
// * or JS/TS interoperability woes.
// * Therefore, we'll make sure to reflecy the wonky semantics in the typer
// * (or maybe just make it fail type checking altogether.)

// :e // TODO prevent unapplied method selections in the type system...
let r = id(C.f)()
//│ let r: C
//│ r
//│   = undefined

:re
r.f
//│ () -> C
//│ res
//│ Runtime error:
//│   TypeError: Cannot read properties of undefined (reading 'f')

