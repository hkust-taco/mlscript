:NewDefs


class Foo(x: Int)
//│ class Foo(x: Int)

class Bar() extends Foo(123) { fun x = true }
//│ class Bar() extends Foo {
//│   fun x: true
//│ }

Bar().x
//│ true
//│ res
//│     = true

if Bar() is Foo(a) then a
//│ Int
//│ res
//│     = 123


class Bar(val x: Bool) extends Foo(123)
//│ class Bar(x: Bool) extends Foo

Bar(true).x
//│ Bool
//│ res
//│     = true

if Bar(true) is Foo(a) then a
//│ Int
//│ res
//│     = 123


class Bar(x: Bool) extends Foo(123)
//│ class Bar(x: Bool) extends Foo

:e // * Expected
Bar(true).x
//│ ╔══[ERROR] Parameter 'x' cannot tbe accessed as a field
//│ ║  l.41: 	Bar(true).x
//│ ║        	         ^^
//│ ╟── Either make the parameter a `val` or access it through destructuring
//│ ║  l.37: 	class Bar(x: Bool) extends Foo(123)
//│ ╙──      	          ^
//│ error | false | true
//│ res
//│     = undefined

if Bar(true) is Foo(a) then a
//│ Int
//│ res
//│     = 123


