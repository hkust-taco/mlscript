:NewDefs


// TODO: there is problem when the is SPACE after '?'

:dp
fun f1(a?: Int, b?: Int) = a + b
//│ |#fun| |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=| |a| |+| |b|
//│ ? block		inspects |#fun| |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |...    [at l.299]
//│ ? go		inspects |#fun| |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |...    [at l.268]
//│ ? go		inspects |#fun| |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |...    [at l.268]
//│ ! t		consumes |#fun|    [at l.413]
//│ ? yeetSpaces		inspects | |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=|...    [at l.514]
//│ ! yeetSpaces		consumes | |    [at l.514]
//│ ? yeetSpaces		inspects |f1|(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=| |...    [at l.514]
//│ ! x$29		consumes |f1|    [at l.424]
//│ ? yeetSpaces		inspects |(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=| |a|...    [at l.514]
//│ ? yeetSpaces		inspects |(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=| |a|...    [at l.514]
//│ @ funParams(())    [at l.463]
//│ │ ? yeetSpaces		inspects |(|a|?|#:| |Int|,| |b|?|#:| |Int|)| |#=| |a|...    [at l.514]
//│ │ ! res		consumes |(|a|?|#:| |Int|,| |b|?|#:| |Int|)|    [at l.525]
//│ │ > ? maybeIndented		inspects |a|?|#:| |Int|...    [at l.999]
//│ │ > @ argsOrIf(List(),List())    [at l.1042]
//│ │ > │ ? argsOrIf		inspects |a|?|#:| |Int|...    [at l.1043]
//│ │ > │ ? yeetSpaces		inspects |a|?|#:| |Int|...    [at l.514]
//│ │ > │ ? yeetSpaces		inspects |a|?|#:| |Int|...    [at l.514]
//│ │ > │ ? yeetSpaces		inspects |a|?|#:| |Int|...    [at l.514]
//│ │ > │ ! x$60		consumes |a|    [at l.1075]
//│ │ > │ ! x$60		consumes |?|    [at l.1076]
//│ │ > │ ! x$60		consumes |#:|    [at l.1077]
//│ │ > │ flags => None None Some(Loc(8,8,nu/OptionalArgs:+7))
//│ │ > │ @ exprOrIf(1,true)    [at l.1087]
//│ │ > │ │ ? exprOrIf		inspects | |Int|,| |b|...    [at l.557]
//│ │ > │ │ ! exprOrIf		consumes | |    [at l.559]
//│ │ > │ │ @ exprOrIf(1,true)    [at l.560]
//│ │ > │ │ │ ? exprOrIf		inspects |Int|,| |b|?|...    [at l.557]
//│ │ > │ │ │ ! exprOrIf		consumes |Int|    [at l.576]
//│ │ > │ │ │ @ exprCont(1,`Int`,false)    [at l.577]
//│ │ > │ │ │ │ ? exprCont		inspects |,| |b|?|#:|...    [at l.733]
//│ │ > │ │ │ = Right(Int)
//│ │ > │ │ = Right(Int)
//│ │ > │ = Right(Int)
//│ │ > │ ? argsOrIf		inspects |,| |b|?|#:|...    [at l.1095]
//│ │ > │ ! argsOrIf		consumes |,|    [at l.1101]
//│ │ > │ @ argsOrIf(List((Some(a),Right(Fld(FldFlags(false,false,true),Int)))),List())    [at l.1042]
//│ │ > │ │ ? argsOrIf		inspects | |b|?|#:| |...    [at l.1043]
//│ │ > │ │ ! argsOrIf		consumes | |    [at l.1052]
//│ │ > │ │ @ argsOrIf(List((Some(a),Right(Fld(FldFlags(false,false,true),Int)))),List())    [at l.1042]
//│ │ > │ │ │ ? argsOrIf		inspects |b|?|#:| |Int|    [at l.1043]
//│ │ > │ │ │ ? yeetSpaces		inspects |b|?|#:| |Int|    [at l.514]
//│ │ > │ │ │ ? yeetSpaces		inspects |b|?|#:| |Int|    [at l.514]
//│ │ > │ │ │ ? yeetSpaces		inspects |b|?|#:| |Int|    [at l.514]
//│ │ > │ │ │ ! x$60		consumes |b|    [at l.1075]
//│ │ > │ │ │ ! x$60		consumes |?|    [at l.1076]
//│ │ > │ │ │ ! x$60		consumes |#:|    [at l.1077]
//│ │ > │ │ │ flags => None None Some(Loc(17,17,nu/OptionalArgs:+7))
//│ │ > │ │ │ @ exprOrIf(1,true)    [at l.1087]
//│ │ > │ │ │ │ ? exprOrIf		inspects | |Int|    [at l.557]
//│ │ > │ │ │ │ ! exprOrIf		consumes | |    [at l.559]
//│ │ > │ │ │ │ @ exprOrIf(1,true)    [at l.560]
//│ │ > │ │ │ │ │ ? exprOrIf		inspects |Int|    [at l.557]
//│ │ > │ │ │ │ │ ! exprOrIf		consumes |Int|    [at l.576]
//│ │ > │ │ │ │ │ @ exprCont(1,`Int`,false)    [at l.577]
//│ │ > │ │ │ │ │ │ ? exprCont		inspects ||    [at l.733]
//│ │ > │ │ │ │ │ = Right(Int)
//│ │ > │ │ │ │ = Right(Int)
//│ │ > │ │ │ = Right(Int)
//│ │ > │ │ │ ? argsOrIf		inspects ||    [at l.1095]
//│ │ > │ │ = List((Some(a),Right(Fld(FldFlags(false,false,true),Int))), (Some(b),Right(Fld(FldFlags(false,false,true),Int))))
//│ │ > │ = List((Some(a),Right(Fld(FldFlags(false,false,true),Int))), (Some(b),Right(Fld(FldFlags(false,false,true),Int))))
//│ │ > = List((Some(a),Right(Fld(FldFlags(false,false,true),Int))), (Some(b),Right(Fld(FldFlags(false,false,true),Int))))
//│ │ > ? concludeWith		inspects ||    [at l.86]
//│ │ > Concluded with List((Some(a),Fld(FldFlags(false,false,true),Int)), (Some(b),Fld(FldFlags(false,false,true),Int)))
//│ │ @ funParams(())    [at l.527]
//│ │ │ ? yeetSpaces		inspects | |#=| |a| |...    [at l.514]
//│ │ │ ! yeetSpaces		consumes | |    [at l.514]
//│ │ │ Here, creating the params! List()
//│ │ = List()
//│ │ Here, creating the params! List(a: Int, b: Int,) Tup(a: Var(Int), b: Var(Int))
//│ = List(a: Int, b: Int,)
//│ ? yeetSpaces		inspects |#=| |a| |+|...    [at l.514]
//│ ? yeetSpaces		inspects |#=| |a| |+|...    [at l.514]
//│ ! t		consumes |#=|    [at l.474]
//│ @ expr(0,true)    [at l.475]
//│ │ @ exprOrIf(0,true)    [at l.545]
//│ │ │ ? exprOrIf		inspects | |a| |+| |...    [at l.557]
//│ │ │ ! exprOrIf		consumes | |    [at l.559]
//│ │ │ @ exprOrIf(0,true)    [at l.560]
//│ │ │ │ ? exprOrIf		inspects |a| |+| |b|    [at l.557]
//│ │ │ │ ! exprOrIf		consumes |a|    [at l.576]
//│ │ │ │ @ exprCont(0,`a`,false)    [at l.577]
//│ │ │ │ │ ? exprCont		inspects | |+| |b|    [at l.733]
//│ │ │ │ │ ! exprCont		consumes | |    [at l.777]
//│ │ │ │ │ @ exprCont(0,`a`,false)    [at l.778]
//│ │ │ │ │ │ ? exprCont		inspects |+| |b|    [at l.733]
//│ │ │ │ │ │ ! exprCont		consumes |+|    [at l.742]
//│ │ │ │ │ │ @ exprOrIf(18,true)    [at l.745]
//│ │ │ │ │ │ │ ? exprOrIf		inspects | |b|    [at l.557]
//│ │ │ │ │ │ │ ! exprOrIf		consumes | |    [at l.559]
//│ │ │ │ │ │ │ @ exprOrIf(18,true)    [at l.560]
//│ │ │ │ │ │ │ │ ? exprOrIf		inspects |b|    [at l.557]
//│ │ │ │ │ │ │ │ ! exprOrIf		consumes |b|    [at l.576]
//│ │ │ │ │ │ │ │ @ exprCont(18,`b`,false)    [at l.577]
//│ │ │ │ │ │ │ │ │ ? exprCont		inspects ||    [at l.733]
//│ │ │ │ │ │ │ │ = Right(b)
//│ │ │ │ │ │ │ = Right(b)
//│ │ │ │ │ │ = Right(b)
//│ │ │ │ │ │ @ exprCont(0,`+ (a,) (b,)`,false)    [at l.749]
//│ │ │ │ │ │ │ ? exprCont		inspects ||    [at l.733]
//│ │ │ │ │ │ = Right(+ (a,) (b,))
//│ │ │ │ │ = Right(+ (a,) (b,))
//│ │ │ │ = Right(+ (a,) (b,))
//│ │ │ = Right(+ (a,) (b,))
//│ │ = Right(+ (a,) (b,))
//│ = + (a,) (b,)
//│ ? yeetSpaces		inspects ||    [at l.514]
//│ ? parseAll		inspects ||    [at l.75]
//│ Parsed: fun f1 = (a: Int, b: Int,) => + (a,) (b,);
//│ fun f1: (a: Int, b: Int,) -> Int


// using space, creates ASC in AST.
:p
fun f1(a: Int, b: Int) = a + b
//│ |#fun| |f1|(|a|#:| |Int|,| |b|#:| |Int|)| |#=| |a| |+| |b|
//│ AST: TypingUnit(NuFunDef(None, f1, [], Lam(Tup(a: Var(Int), b: Var(Int)), App(App(Var(+), Tup(_: Var(a))), Tup(_: Var(b))))))
//│ Parsed: fun f1 = (a: Int, b: Int,) => + (a,) (b,);
//│ fun f1: (a: Int, b: Int,) -> Int

f1(1, 2)
//│ Int
//│ res
//│     = 3

:p
fun f1(a, b) = a + b
//│ |#fun| |f1|(|a|,| |b|)| |#=| |a| |+| |b|
//│ AST: TypingUnit(NuFunDef(None, f1, [], Lam(Tup(_: Var(a), _: Var(b)), App(App(Var(+), Tup(_: Var(a))), Tup(_: Var(b))))))
//│ Parsed: fun f1 = (a, b,) => + (a,) (b,);
//│ fun f1: (Int, Int,) -> Int


:p
f1(1, 2)
//│ |f1|(|1|,| |2|)|
//│ AST: TypingUnit(App(Var(f1), Tup(_: IntLit(1), _: IntLit(2))))
//│ Parsed: f1 (1, 2,);
//│ Int
//│ res
//│     = 3
