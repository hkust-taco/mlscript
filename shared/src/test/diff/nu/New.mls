:NewParser


class Foo(x)
//│ Defined class Foo
//│ Foo: 'x -> (Foo & {x: 'x})
//│    = [Function: Foo1]

let f = Foo(1)
//│ f: Foo & {x: 1}
//│  = Foo { x: 1 }

let f = new Foo(1)
//│ f: Foo & {x: 1}
//│  = Foo { x: 1 }

if f is Foo then 1 else 0
//│ res: 0 | 1
//│    = 1

if f is Foo(a) then a else 0
//│ res: 0 | 1
//│    = 1

// case f of
//   { Foo ->
//     let a = f.x
//     a
//   | _ -> 0
//   }

// Foo(A) =:= Foo & { x: A }


fun test(x) = if x is Foo(a) then a
//│ test: (Foo & {x: 'x}) -> 'x
//│     = [Function: test]

test(f)
//│ res: 1
//│    = 1

class PoInt(x, y)
//│ Defined class PoInt
//│ PoInt: ('x, 'y,) -> (PoInt & {x: 'x, y: 'y})
//│      = [Function: PoInt1]

let origin = new PoInt(0, 0)
//│ origin: PoInt & {x: 0, y: 0}
//│       = PoInt { x: 0, y: 0 }
