:NewDefs


class Foo[A](x: A)
//│ class Foo[A](x: A)

let f = Foo(1)
//│ let f: Foo['A]
//│   where
//│     'A :> 1
//│ f
//│   = Foo {}

// let f = new Foo(1)

if f is Foo then 1 else 0
//│ 0 | 1
//│ res
//│     = 1

if f is Foo(a) then a else 0
//│ 0 | 1
//│ res
//│     = 1

// case f of
//   { Foo ->
//     let a = f.x
//     a
//   | _ -> 0
//   }

// Foo(A) =:= Foo & { x: A }


fun test(x) = if x is Foo(a) then a
//│ fun test: forall 'a. Foo['a] -> 'a

test(f)
//│ 1
//│ res
//│     = 1

class PoInt(x: Int, y: Int)
//│ class PoInt(x: Int, y: Int)

let origin = new PoInt(0, 0)
//│ let origin: PoInt
//│ origin
//│        = PoInt {}


