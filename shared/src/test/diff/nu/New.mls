:NewParser


class Foo(x)
//│ Defined class Foo
//│ Foo: 'x -> (Foo with {x: 'x})
//│    = [Function: Foo1]

let f = Foo(1)
//│ f: Foo & {x: 1}
//│  = Foo { x: 1 }

:ge
let f = new Foo(1)
//│ f: Foo & {x: 1}
//│ Code generation encountered an error:
//│   cannot generate code for term New(Some((TypeName(Foo),1,)), TypingUnit(List()))

// TODO
if f is Foo(a) then a else 0
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing

// case f of
//   { Foo ->
//     let a = f.x
//     a
//   | _ -> 0
//   }

// Foo(A) =:= Foo & { x: A }



