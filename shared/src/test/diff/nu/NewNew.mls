:NewDefs


class Foo(val x: Int)
//│ class Foo(x: Int)

let f = Foo(1)
//│ let f: Foo
//│ f
//│   = Foo {}

f.x
//│ Int
//│ res
//│     = 1

let f = new Foo(1)
//│ let f: Foo
//│ f
//│   = Foo {}

f.x
//│ Int
//│ res
//│     = 1

new Foo(1).x
//│ Int
//│ res
//│     = 1

if f is Foo then 1 else 0
//│ 0 | 1
//│ res
//│     = 1

if f is Foo(a) then a else 0
//│ Int
//│ res
//│     = 1

let f = Foo
//│ let f: (x: Int) -> Foo
//│ f
//│   = [Function (anonymous)] {
//│       class: [class Foo],
//│       unapply: [Function: unapply]
//│     }

f(1)
//│ Foo
//│ res
//│     = Foo {}


class Foo {
  constructor(x: Int){}
  val y = 2
}
//│ class Foo {
//│   constructor(x: Int)
//│   val y: 2
//│ }

new Foo(1).y
//│ 2
//│ res
//│     = 2

:e
let f = Foo(1)
//│ ╔══[ERROR] Construction of unparameterized class Foo should use the `new` keyword
//│ ║  l.71: 	let f = Foo(1)
//│ ╙──      	        ^^^
//│ let f: Foo
//│ f
//│ Runtime error:
//│   TypeError: Class constructor Foo cannot be invoked without 'new'

:e
let f = new Foo
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.81: 	let f = new Foo
//│ ║        	            ^^^
//│ ╟── argument list of type `[]` does not match type `[x: Int]`
//│ ║  l.81: 	let f = new Foo
//│ ╙──      	               ^
//│ let f: Foo | error
//│ f
//│   = Foo {}

:e
f(1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.93: 	f(1)
//│ ║        	^^^^
//│ ╟── application of type `Foo` is not a function
//│ ║  l.81: 	let f = new Foo
//│ ║        	            ^^^
//│ ╟── but it flows into reference with expected type `1 -> ?a`
//│ ║  l.93: 	f(1)
//│ ╙──      	^
//│ error
//│ res
//│ Runtime error:
//│   TypeError: f4 is not a function

:e
new Foo("2")
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.109: 	new Foo("2")
//│ ║         	^^^^^^^^^^^^
//│ ╟── string literal of type `"2"` is not an instance of type `Int`
//│ ║  l.109: 	new Foo("2")
//│ ║         	        ^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.57: 	  constructor(x: Int){}
//│ ╙──      	                 ^^^
//│ Foo | error
//│ res
//│     = Foo {}

:e
new Foo()
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.124: 	new Foo()
//│ ║         	^^^^^^^^^
//│ ╟── argument list of type `[]` does not match type `[x: Int]`
//│ ║  l.124: 	new Foo()
//│ ╙──       	       ^^
//│ Foo | error
//│ res
//│     = Foo {}



class PoInt[A](x: A, y: A)
//│ class PoInt[A](x: A, y: A)

new PoInt(1, 2)
//│ PoInt[1 | 2]
//│ res
//│     = PoInt {}

:e
new PoInt
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.146: 	new PoInt
//│ ║         	    ^^^^^
//│ ╟── argument list of type `[]` does not match type `[x: ?A, y: ?A]`
//│ ║  l.146: 	new PoInt
//│ ╙──       	         ^
//│ PoInt[nothing] | error
//│ res
//│     = PoInt {}

:e
new PoInt['_]
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.158: 	new PoInt['_]
//│ ╙──       	    ^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.158: 	new PoInt['_]
//│ ║         	    ^^^^^^^^^
//│ ╟── argument list of type `[]` does not match type `[x: ?A, y: ?A]`
//│ ║  l.158: 	new PoInt['_]
//│ ╙──       	             ^
//│ PoInt[nothing] | error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt),List('_))

:e
new PoInt[Str](0, 0)
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.173: 	new PoInt[Str](0, 0)
//│ ╙──       	^^^^^^^^^^^^^^^^^^^^
//│ PoInt[0]
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt),List(TypeName(Str)))

type T = PoInt[Str]
//│ type T = PoInt[Str]

:e
new T(0, 0)
//│ ╔══[ERROR] Type alias T cannot be used in `new` expression
//│ ║  l.185: 	new T(0, 0)
//│ ╙──       	^^^^^^^^^^^
//│ error
//│ Code generation encountered an error:
//│   type alias T is not a valid expression

let origin = new PoInt(0, 0)
//│ let origin: PoInt['A]
//│   where
//│     'A :> 0
//│ origin
//│        = PoInt {}

:e // TODO support
let origin = PoInt[Int](0, 0)
//│ ╔══[ERROR] Type application syntax is not yet supported
<<<<<<< HEAD
//│ ║  l.39: 	let origin = PoInt[Int](0, 0)
//│ ╙──      	             ^^^^^^^^^^
//│ let origin: PoInt['A]
//│   where
//│     'A :> 0
||||||| b14bd8d83
//│ ║  l.37: 	let origin = PoInt[Int](0, 0)
//│ ╙──      	             ^^^^^^^^^^
//│ let origin: PoInt[0]
=======
//│ ║  l.199: 	let origin = PoInt[Int](0, 0)
//│ ╙──       	             ^^^^^^^^^^
//│ let origin: PoInt[0]
>>>>>>> new-definition-typing
//│ origin
//│        = PoInt {}

:e // TODO support
let origin = new PoInt[Int](0, 0)
<<<<<<< HEAD
//│ ╔══[PARSE ERROR] Unexpected application after `new` keyword
//│ ║  l.50: 	let origin = new PoInt[Int](0, 0)
//│ ╙──      	                 ^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.50: 	let origin = new PoInt[Int](0, 0)
//│ ╙──      	             ^^^
//│ let origin: error
//│ origin
//│        = {}
||||||| b14bd8d83
//│ ╔══[PARSE ERROR] Unexpected application after `new` keyword
//│ ║  l.46: 	let origin = new PoInt[Int](0, 0)
//│ ╙──      	                 ^^^^^^^^^^^^^^^^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.46: 	let origin = new PoInt[Int](0, 0)
//│ ╙──      	             ^^^
//│ let origin: error
//│ origin
//│        = {}
=======
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.208: 	let origin = new PoInt[Int](0, 0)
//│ ╙──       	             ^^^^^^^^^^^^^^^^^^^^
//│ let origin: PoInt[0]
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt),List(TypeName(Int)))
>>>>>>> new-definition-typing


:e // TODO support
new {}
<<<<<<< HEAD
//│ ╔══[PARSE ERROR] Unexpected record after `new` keyword
//│ ║  l.63: 	new {}
//│ ╙──      	    ^^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.63: 	new {}
//│ ╙──      	^^^
||||||| b14bd8d83
//│ ╔══[PARSE ERROR] Unexpected record after `new` keyword
//│ ║  l.59: 	new {}
//│ ╙──      	    ^^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.59: 	new {}
//│ ╙──      	^^^
=======
//│ ╔══[ERROR] Unexpected type `anything` after `new` keyword
//│ ║  l.218: 	new {}
//│ ╙──       	    ^^
>>>>>>> new-definition-typing
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: Bra(true,Rcd(List()))

:pe
:e
new
//│ ╔══[PARSE ERROR] Unexpected end of input; an expression was expected here
<<<<<<< HEAD
//│ ║  l.75: 	new
//│ ╙──      	   ^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.75: 	new
//│ ╙──      	^^^
||||||| b14bd8d83
//│ ║  l.71: 	new
//│ ╙──      	   ^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.71: 	new
//│ ╙──      	^^^
=======
//│ ║  l.228: 	new
//│ ╙──       	   ^
//│ ╔══[ERROR] Unexpected type `()` after `new` keyword
//│ ║  l.228: 	new
//│ ╙──       	   ^
>>>>>>> new-definition-typing
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: UnitLit(true)

// Support?
:pe
:e
new
  x: 0
<<<<<<< HEAD
//│ ╔══[PARSE ERROR] Unexpected type ascription after `new` keyword
//│ ║  l.88: 	  x: 0
//│ ╙──      	  ^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.87: 	new
//│ ╙──      	^^^
||||||| b14bd8d83
//│ ╔══[PARSE ERROR] Unexpected type ascription after `new` keyword
//│ ║  l.84: 	  x: 0
//│ ╙──      	  ^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.83: 	new
//│ ╙──      	^^^
=======
//│ ╔══[PARSE ERROR] Not a recognized type
//│ ║  l.243: 	  x: 0
//│ ╙──       	  ^
//│ ╔══[ERROR] Unexpected type `nothing` after `new` keyword
//│ ║  l.243: 	  x: 0
//│ ╙──       	  ^
>>>>>>> new-definition-typing
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: Blk(List(Asc(Var(x),Literal(IntLit(0)))))




fun f(x) = {x}
//│ fun f: forall 'a. 'a -> {x: 'a}

:e
new f(1)
<<<<<<< HEAD
//│ ╔══[ERROR] Value f cannot be used in `new` expression
//│ ║  l.106: 	new f(1)
//│ ╙──       	^^^^^^^^
||||||| b14bd8d83
//│ ╔══[ERROR] Value f cannot be used in `new` expression
//│ ║  l.102: 	new f(1)
//│ ╙──       	^^^^^^^^
=======
//│ ╔══[ERROR] type identifier not found: f
//│ ║  l.261: 	new f(1)
//│ ╙──       	    ^
>>>>>>> new-definition-typing
//│ error
//│ res
//│     = { x: 1 }


module Oops
//│ module Oops

:e
new Oops
<<<<<<< HEAD
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.119: 	new Oops
//│ ║         	^^^^^^^^
//│ ╙── applied expression of type `Oops` is not a function
||||||| b14bd8d83
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.115: 	new Oops
//│ ║         	^^^^^^^^
//│ ╙── applied expression of type `Oops` is not a function
=======
//│ ╔══[ERROR] Module Oops cannot be used in `new` expression
//│ ║  l.274: 	new Oops
//│ ╙──       	    ^^^^
>>>>>>> new-definition-typing
//│ error
//│ res
//│     = Oops {}


:e
new Oops2
trait Oops2
<<<<<<< HEAD
//│ ╔══[ERROR] Trait Oops2 cannot be used in term position
//│ ║  l.130: 	new Oops2
//│ ╙──       	^^^^^^^^^
||||||| b14bd8d83
//│ ╔══[ERROR] Trait Oops2 cannot be used in term position
//│ ║  l.126: 	new Oops2
//│ ╙──       	^^^^^^^^^
=======
//│ ╔══[ERROR] Trait Oops2 cannot be used in `new` expression
//│ ║  l.284: 	new Oops2
//│ ╙──       	    ^^^^^
>>>>>>> new-definition-typing
//│ trait Oops2
//│ error
//│ Code generation encountered an error:
//│   trait used in term position



module A { class B }
//│ module A {
//│   class B {
//│     constructor()
//│   }
//│ }

:ge // TODO support
new A.B
//│ B
//│ Code generation encountered an error:
//│   Unsupported `new` class term: Sel(Var(A),Var(B))


