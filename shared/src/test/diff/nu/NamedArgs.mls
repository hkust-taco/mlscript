:NewDefs



fun test(x: 'a) = if x is undefined then 0 else x + 1
//│ fun test: (x: Int | undefined) -> Int

test(x: 0)
//│ Int
//│ res
//│     = 1

:e
test(y: 0)
//│ ╔══[ERROR] Wrong tuple field name: found 'y' instead of 'x'
//│ ║  l.14: 	test(y: 0)
//│ ╙──      	    ^^^^^^
//│ Int | error
//│ res
//│     = 1


fun test(x) = x + 1
//│ fun test: Int -> Int

// :e // TODO should be an error
test(y: 0)
//│ Int
//│ res
//│     = 1



class Foo(x: Int)
//│ class Foo(x: Int)

Foo(1)
//│ Foo
//│ res
//│     = Foo {}

Foo(x: 1)
//│ Foo
//│ res
//│     = Foo {}

// :e // TODO should be an error
Foo(y: 1)
//│ Foo
//│ res
//│     = Foo {}


:e // TODO: Here `x` is not currently treated as a field name
class Bar(x)
//│ ╔══[ERROR] Class parameters currently need type annotations
//│ ║  l.55: 	class Bar(x)
//│ ╙──      	          ^
//│ class Bar(x: error)

Bar(1)
//│ Bar
//│ res
//│     = Bar {}

Bar(x: 1)
//│ Bar
//│ res
//│     = Bar {}

:e
Bar(y: 1)
//│ ╔══[ERROR] Wrong tuple field name: found 'y' instead of 'x'
//│ ║  l.72: 	Bar(y: 1)
//│ ╙──      	   ^^^^^^
//│ Bar | error
//│ res
//│     = Bar {}

