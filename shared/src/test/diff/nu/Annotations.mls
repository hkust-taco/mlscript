:NewDefs
:ParseOnly

:p
fun hello(x) = 
    @a
    @b
    let rec x = @hello 2
//│ |#fun| |hello|(|x|)| |#=| |→|@|a|↵|@|b|↵|#let| |#rec| |x| |#=| |@|hello| |2|←|
//│ Parsed: {fun hello = (x,) => {let rec x = @hello 2}}
//│ AST: TypingUnit(List(NuFunDef(None,Var(hello),None,List(),Left(Lam(Tup(List((None,Fld(_,Var(x))))),Blk(List(NuFunDef(Some(true),Var(x),None,List(),Left(Ann(List(Annotation(Var(hello))),IntLit(2)))))))))))
//│ Parsed: 
//│ 


:p
fun x =
    let y = 2
    2
//│ |#fun| |x| |#=|→|#let| |y| |#=| |2|↵|2|←|
//│ Parsed: {fun x = {let y = 2; 2}}
//│ AST: TypingUnit(List(NuFunDef(None,Var(x),None,List(),Left(Blk(List(NuFunDef(Some(false),Var(y),None,List(),Left(IntLit(2))), IntLit(2)))))))
//│ Parsed: 
//│ 

:p
@tailrec 2
//│ |@|tailrec| |2|
//│ Parsed: {@tailrec 2}
//│ AST: TypingUnit(List(Ann(List(Annotation(Var(tailrec))),IntLit(2))))
//│ Parsed: 
//│ 

:p
if @hello true then 2 else 3
//│ |#if| |@|hello| |true| |#then| |2| |#else| |3|
//│ Parsed: {if (@hello true) then 2 else 3}
//│ AST: TypingUnit(List(If(IfThen(Ann(List(Annotation(Var(hello))),Var(true)),IntLit(2)),Some(IntLit(3)))))
//│ Parsed: 
//│ 

:pe
if @test x
    is Foo then 2
//│ |#if| |@|test| |x|→|is| |Foo| |#then| |2|←|
//│ ╔══[PARSE ERROR] Unexpected annotation
//│ ║  l.43: 	if @test x
//│ ╙──      	    ^^^^
//│ Parsed: {if x ‹· is (Foo) then 2›}
//│ 
