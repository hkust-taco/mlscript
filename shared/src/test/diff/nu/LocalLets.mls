:NewDefs


let f =
  let tmp = "ok"
  123
//│ let f: 123
//│ f
//│   = 123


:e
let x : Int | string
let x = 1
//│ ╔══[ERROR] `let` bindings must have a right-hand side
//│ ║  l.13: 	let x : Int | string
//│ ╙──      	^^^^^^^^^^^^^^^^^^^^
//│ let x: 1
//│ let x: Int | string
//│ x
//│   = <missing implementation>
//│ x
//│   = 1

val x : Int | string
val x = 1
//│ val x: 1
//│ val x: Int | string
//│ x
//│   = <missing implementation>
//│ x
//│   = 1


class E(x: Int)
//│ class E(x: Int)

:e // TODO support (currently parsed as a function definition named E)
let E(x) = new E(1)
//│ ╔══[ERROR] value E cannot be used as a type
//│ ║  l.39: 	let E(x) = new E(1)
//│ ╙──      	               ^
//│ ╔══[ERROR] type identifier not found: E
//│ ║  l.39: 	let E(x) = new E(1)
//│ ╙──      	               ^
//│ let E: anything -> error
//│ E
//│   = [Function: E1]


