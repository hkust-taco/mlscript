:NewDefs


mixin BaseTest(x: Int) {
  fun test = x
}
//│ mixin BaseTest(x: Int) {
//│   fun test: Int
//│ }

module Test extends BaseTest(42)
//│ module Test {
//│   fun test: Int
//│ }

Test.test
//│ Int
//│ res
//│     = 42

:e
Test.x
//│ ╔══[ERROR] Type `Test` does not contain member `x`
//│ ║  l.22: 	Test.x
//│ ╙──      	    ^^
//│ error
//│ res
//│     = undefined


mixin BaseTest(val x: Int -> Int)
//│ mixin BaseTest(x: Int -> Int)

module Test extends BaseTest(id)
//│ module Test

Test.x(1)
//│ 1
//│ res
//│     = 1


:e // TODO support
mixin BaseTest(x) {
  fun test = x
}
//│ ╔══[ERROR] Mixin parameters currently need type annotations
//│ ║  l.44: 	mixin BaseTest(x) {
//│ ╙──      	               ^
//│ mixin BaseTest(x: error) {
//│   fun test: error
//│ }


