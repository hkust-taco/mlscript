:NewDefs


let n = 123
let m = n : Int
let o = m : Num
let p = o : Object
let o = n : Num
let p = n : Object
let p = m : Object
//│ let n: 123
//│ let m: Int
//│ let o: Num
//│ let p: Object
//│ let o: Num
//│ let p: Object
//│ let p: Object
//│ n
//│   = 123
//│ m
//│   = 123
//│ o
//│   = 123
//│ p
//│   = 123
//│ o
//│   = 123
//│ p
//│   = 123
//│ p
//│   = 123


let x = NaN
//│ let x: Num
//│ x
//│   = NaN

// TODO polymorphic Num operations
x + 1
//│ ╔══[ERROR] Type mismatch in operator application:
//│ ║  l.40: 	x + 1
//│ ║        	^^^
//│ ╟── reference of type `Num` is not an instance of `Int`
//│ ║  l.34: 	let x = NaN
//│ ║        	        ^^^
//│ ╟── but it flows into reference with expected type `Int`
//│ ║  l.40: 	x + 1
//│ ╙──      	^
//│ Int | error
//│ res
//│     = NaN


true : Bool
//│ Bool
//│ res
//│     = true

true : Bool | Str
//│ Str | false | true
//│ res
//│     = true

