:NewDefs


:e
fun test =
  fun lol = log("ok")
  [lol, lol]
//│ ╔══[ERROR] Cannot use `val` or `fun` in local block; use `let` instead.
//│ ║  l.6: 	  fun lol = log("ok")
//│ ╙──     	  ^^^^^^^^^^^^^^^^^^^
//│ fun test: [undefined, undefined]
//│ test

test
//│ [undefined, undefined]
//│ res
//│     = [ undefined, undefined ]
//│ // Output
//│ ok

:e
fun test =
  fun lol = log("ok")
  []
//│ ╔══[ERROR] Cannot use `val` or `fun` in local block; use `let` instead.
//│ ║  l.23: 	  fun lol = log("ok")
//│ ╙──      	  ^^^^^^^^^^^^^^^^^^^
//│ fun test: []
//│ test

test
//│ []
//│ res
//│     = []
//│ // Output
//│ ok

fun test =
  let a = 0
  a
//│ fun test: 0
//│ test

:e
fun test =
  fun a = b
  fun b = 1
  a
//│ ╔══[ERROR] Cannot use `val` or `fun` in local block; use `let` instead.
//│ ║  l.46: 	  fun a = b
//│ ╙──      	  ^^^^^^^^^
//│ ╔══[ERROR] Cannot use `val` or `fun` in local block; use `let` instead.
//│ ║  l.47: 	  fun b = 1
//│ ╙──      	  ^^^^^^^^^
//│ fun test: 1
//│ test

// TODO[init-check] reject
fun test =
  let a = b
  let b = 1
  a
//│ fun test: 1
//│ test

:re
test
//│ 1
//│ res
//│     Runtime error:
//│       ReferenceError: Cannot access 'b' before initialization

:js
fun test =
  let a() = b
  let b = 1
  a()
//│ fun test: 1
//│ // Prelude
//│ class TypingUnit8 {}
//│ const typing_unit8 = new TypingUnit8;
//│ // Query 1
//│ globalThis.test5 = function test5() {
//│   return ((() => {
//│     let a = () => b;
//│     let b = 1;
//│     return a();
//│   })());
//│ };
//│ // End of generated code
//│ test

test
//│ 1
//│ res
//│     = 1


// * OK
fun test =
  class Foo(x: Int) { fun y = x + 1 }
  Foo(1).y
//│ fun test: Int
//│ test

// * MAYBE OK
:ge // TODO accept?
fun test =
  let r() = Foo(1).y
  class Foo(x: Int) { fun y = x + 1 }
  r()
//│ fun test: Int
//│ Code generation encountered an error:
//│   unresolved symbol Foo

// * NOT OK
:ge // :e // TODO[init-check] reject
fun test =
  let r = Foo(1).y
  class Foo(x: Int) { fun y = x + 1 }
  r
//│ fun test: Int
//│ Code generation encountered an error:
//│   unresolved symbol Foo

:re
test
//│ Int
//│ res
//│     Runtime error:
//│       ReferenceError: test8 is not defined


:pe
:ge
fun test = {
  fun a = 1
}
//│ ╔══[PARSE ERROR] Unexpected 'fun' keyword in expression position
//│ ║  l.137: 	  fun a = 1
//│ ╙──       	  ^^^
//│ ╔══[PARSE ERROR] Unexpected '=' here
//│ ║  l.137: 	  fun a = 1
//│ ╙──       	        ^
//│ fun test: {a: () -> 1}
//│ Code generation encountered an error:
//│   unresolved symbol a

:pe
:e
fun test = {
  val res = a + 1
  fun a = 123
}.res
//│ ╔══[PARSE ERROR] Unexpected '=' here
//│ ║  l.152: 	  val res = a + 1
//│ ╙──       	          ^
//│ ╔══[ERROR] identifier not found: res
//│ ║  l.152: 	  val res = a + 1
//│ ╙──       	      ^^^
//│ fun test: error
//│ test

:pe // TODO support
:e
fun test = (new {
  val res = a + 1
  fun a = 123
}).res
//│ ╔══[PARSE ERROR] Unexpected '=' here
//│ ║  l.167: 	  val res = a + 1
//│ ╙──       	          ^
//│ ╔══[PARSE ERROR] Unexpected record after `new` keyword
//│ ║  l.166: 	fun test = (new {
//│ ║         	                ^
//│ ║  l.167: 	  val res = a + 1
//│ ║         	^^^^^^^^^^^^^^^^^
//│ ║  l.168: 	  fun a = 123
//│ ║         	^^^^^^^^^^^^^
//│ ║  l.169: 	}).res
//│ ╙──       	^
//│ ╔══[ERROR] Currently unsupported `new` syntax
//│ ║  l.166: 	fun test = (new {
//│ ╙──       	            ^^^
//│ fun test: error
//│ test

