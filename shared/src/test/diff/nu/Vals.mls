:NewDefs


val a = 1
val b = a + 1
//│ val a: 1
//│ val b: Int
//│ a
//│   = 1
//│ b
//│   = 2


// :e // FIXME should not type check
:ge
val c = d + 1
val d = 1
//│ val c: Int
//│ val d: 1
//│ Code generation encountered an error:
//│   unguarded recursive use of by-value binding d


// :e // FIXME should not type check
:ge
val a = a
//│ val a: nothing
//│ Code generation encountered an error:
//│   unguarded recursive use of by-value binding a


val f(x) = x
//│ val f: forall 'a. 'a -> 'a
//│ f
//│   = [Function: f]

f(123)
//│ 123
//│ res
//│     = 123


module M {
  let tmp = 2
  val f(x) = x + tmp
}
//│ module M {
//│   val f: Int -> Int
//│   let tmp: 2
//│ }

M.f(123)
//│ Int
//│ res
//│     = 125


