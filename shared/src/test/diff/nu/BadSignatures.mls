:NewDefs


:e
trait T {
  fun x : Int
  fun x = false
}
//│ ╔══[ERROR] Method implementations in traits are not yet supported
//│ ║  l.7: 	  fun x = false
//│ ╙──     	      ^^^^^^^^^
//│ trait T {
//│   fun x: Int
//│ }


class A { virtual fun x = 1 }
//│ class A {
//│   constructor()
//│   fun x: 1
//│ }

:e
class B() extends A {
  fun x: Int
}
//│ ╔══[ERROR] Type mismatch in signature of member `x`:
//│ ║  l.25: 	  fun x: Int
//│ ║        	      ^^^^^^
//│ ╟── type `Int` does not match type `1`
//│ ║  l.25: 	  fun x: Int
//│ ║        	         ^^^
//│ ╟── but it flows into signature of member `x` with expected type `1`
//│ ║  l.25: 	  fun x: Int
//│ ║        	      ^^^^^^
//│ ╟── Note: constraint arises from integer literal:
//│ ║  l.17: 	class A { virtual fun x = 1 }
//│ ║        	                          ^
//│ ╟── from definition of method x:
//│ ║  l.17: 	class A { virtual fun x = 1 }
//│ ╙──      	                      ^^^^^
//│ class B() extends A {
//│   fun x: Int
//│ }

B().x
//│ Int
//│ res
//│     = 1

(B() : A).x
//│ 1
//│ res
//│     = 1

class C() extends B { fun x = 0 }
//│ class C() extends A, B {
//│   fun x: 0
//│ }

(C() : A).x
//│ 1
//│ res
//│     = 0

:e
class B() extends A {
  fun x: Int
  fun x = 1
}
//│ ╔══[ERROR] Type mismatch in signature of member `x`:
//│ ║  l.68: 	  fun x: Int
//│ ║        	      ^^^^^^
//│ ╟── type `Int` does not match type `1`
//│ ║  l.68: 	  fun x: Int
//│ ║        	         ^^^
//│ ╟── but it flows into signature of member `x` with expected type `1`
//│ ║  l.68: 	  fun x: Int
//│ ║        	      ^^^^^^
//│ ╟── Note: constraint arises from integer literal:
//│ ║  l.17: 	class A { virtual fun x = 1 }
//│ ║        	                          ^
//│ ╟── from definition of method x:
//│ ║  l.17: 	class A { virtual fun x = 1 }
//│ ╙──      	                      ^^^^^
//│ class B() extends A {
//│   fun x: Int
//│ }


:e
mixin M { fun x : Int }
//│ ╔══[ERROR] Member `x` is declared (or its declaration is inherited) but is not implemented in `M`
//│ ║  l.92: 	mixin M { fun x : Int }
//│ ║        	      ^
//│ ╟── Declared here:
//│ ║  l.92: 	mixin M { fun x : Int }
//│ ╙──      	              ^^^^^^^
//│ mixin M() {
//│   fun x: Int
//│ }

