:NewDefs

:p
fun f(x, y, z) = (x - y) * z
//│ |#fun| |f|(|x|,| |y|,| |z|)| |#=| |(|x| |-| |y|)| |*| |z|
//│ AST: TypingUnit(NuFunDef(None, f, [], Lam(Tup(_: Var(x), _: Var(y), _: Var(z)), App(App(Var(*), Tup(_: Bra(rcd = false, App(App(Var(-), Tup(_: Var(x))), Tup(_: Var(y)))))), Tup(_: Var(z))))))
//│ Parsed: fun f = (x, y, z,) => * ('(' - (x,) (y,) ')',) (z,);
//│ fun f: (Int, Int, Int,) -> Int

:p
f(1, 2, 3)
//│ |f|(|1|,| |2|,| |3|)|
//│ AST: TypingUnit(App(Var(f), Tup(_: IntLit(1), _: IntLit(2), _: IntLit(3))))
//│ Parsed: f (1, 2, 3,);
//│ Int
//│ res
//│     = -3

:p
f(x: 1, y: 2, z: 3)
//│ |f|(|x|#:| |1|,| |y|#:| |2|,| |z|#:| |3|)|
//│ AST: TypingUnit(App(Var(f), Tup(x: IntLit(1), y: IntLit(2), z: IntLit(3))))
//│ Parsed: f (x: 1, y: 2, z: 3,);
//│ Int
//│ res
//│     = -3

:p
f(y: 2, x: 1, z: 3)
//│ |f|(|y|#:| |2|,| |x|#:| |1|,| |z|#:| |3|)|
//│ AST: TypingUnit(App(Var(f), Tup(y: IntLit(2), x: IntLit(1), z: IntLit(3))))
//│ Parsed: f (y: 2, x: 1, z: 3,);
//│ Int
//│ res
//│     = 3
