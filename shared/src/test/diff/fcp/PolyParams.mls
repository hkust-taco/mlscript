:NoRecursiveTypes


def foo(f: forall 'a. 'a -> 'a) =
  (f 1, f true)
//│ foo: (forall 'a. 'a -> 'a) -> (1, true,)
//│    = [Function: foo]

fooid = foo id
//│ fooid: (1, true,)
//│      = [ 1, true ]

fooid.0
fooid.1
//│ res: 1
//│    = 1
//│ res: true
//│    = true

def foo(f: (forall 'A. 'A -> 'A) -> (forall 'B. 'B -> 'B)) =
  id f id (f id)
//│ foo: ((forall 'A. 'A -> 'A) -> (forall 'B. 'B -> 'B)) -> 'B0 -> 'B0
//│    = [Function: foo1]

foo id
//│ res: 'B -> 'B
//│    = [Function: id]

foo id id
//│ res: 'a -> 'a
//│    = [Function: id]



def bui_ty: forall 'a. (forall 'b. 'a -> 'b) -> ()
//│ bui_ty: (nothing -> nothing) -> ()
//│       = <missing implementation>

// :d
bui_ty = bui_ty
//│ (nothing -> nothing) -> ()
//│   <:  bui_ty:
//│ (nothing -> nothing) -> ()
//│       = <no result>
//│         bui_ty is not implemented



