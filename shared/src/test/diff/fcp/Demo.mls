
:NoJS // TODO support JS code-gen for datatypes



datatype Option[A] = Some(A) | None
//│ Defined class Option[+A]
//│ Declared Option.Some: Option['A] -> ('A,)
//│ Declared Option.None: Option[?] -> anything
//│ Defined class Some[+A]
//│ Defined class None[+A]
//│ Some: 'a -> Option['a]
//│ None: Option[nothing]


// * Original

def foo f = (f 123, f true)
fooid = foo id
fooSome = foo Some
//│ foo: (123 -> 'a & true -> 'b) -> ('a, 'b,)
//│ fooid: (123, true,)
//│ fooSome: (Option[123], Option[true],)

def bar f = (f (fun x -> x), f (fun x -> Some x))
test = bar foo
//│ bar: ((forall 'a. 'a -> 'a) -> 'b & (forall 'c. 'c -> Option['c]) -> 'd) -> ('b, 'd,)
//│ test: ((123, true,), (Option[123], Option[true],),)


// * Let-expanded

def foo f = let g = f in (f 123, f true)
fooid = foo id
fooSome = foo Some
//│ foo: (123 -> 'a & true -> 'b) -> ('a, 'b,)
//│ fooid: (123, true,)
//│ fooSome: (Option[123], Option[true],)

def bar f = (f (fun x -> x), f (fun x -> Some x))
test = bar foo
//│ bar: ((forall 'a. 'a -> 'a) -> 'b & (forall 'c. 'c -> Option['c]) -> 'd) -> ('b, 'd,)
//│ test: ((123, true,), (Option[123], Option[true],),)


// * Eta-expanded (notice the lesser generality)

def foo f = let g x = f x in (g 123, g true)
fooid = foo id
fooSome = foo Some
//│ foo: ((123 | true) -> 'a) -> ('a, 'a,)
//│ fooid: (123 | true, 123 | true,)
//│ fooSome: (Option[true | 123], Option[true | 123],)

def bar f = (f (fun x -> x), f (fun x -> Some x))
test = bar foo
//│ bar: ((forall 'a. 'a -> 'a) -> 'b & (forall 'c. 'c -> Option['c]) -> 'd) -> ('b, 'd,)
//│ test: ((123 | true, 123 | true,), (Option[true | 123], Option[true | 123],),)


// * With function type annotation (same lesser generality)

def foo (f: 'x -> 'a) = (f 123, f true)
fooid = foo id
fooSome = foo Some
//│ foo: ((123 | true) -> 'a) -> ('a, 'a,)
//│ fooid: (123 | true, 123 | true,)
//│ fooSome: (Option[true | 123], Option[true | 123],)

def bar f = (f (fun x -> x), f (fun x -> Some x))
test = bar foo
//│ bar: ((forall 'a. 'a -> 'a) -> 'b & (forall 'c. 'c -> Option['c]) -> 'd) -> ('b, 'd,)
//│ test: ((123 | true, 123 | true,), (Option[true | 123], Option[true | 123],),)


// * Here's an idea: we could use application types to retain this function's precise typing

// let g x = f x
// g : forall 'a. 'a -> ('f 'a) where constraint: 'f <: 'a -> anything
//                              extruded to 'f <: 'a0 -> anything where 'a <: 'a0
// 
// foo : 'f -> ('f 123, 'f true) where 'f <: 'a0 -> anything, 123 <: 'a0, true <: 'a0
// foo : 'f -> ('f 123, 'f true) where 'f <: (123 | true) -> anything
// 
// foo Some -- ok because Some : (forall 'a. 'a -> Option['a]) <: (123 | true) -> anything
// 

// * Note: the old idea was to use constrained types, as in:

// def example f = f 123
// example : 'a -> ('a 123) where 'a <: 123 -> anything

// * ... which worked, but CTs are a pain to work with/implement
// * AND they may be silently inconsistent, delaying error reporting to use sites.
// * Moreover, ensuring that CTs remain consistent defeats their purpose (can't solve tis problem anymore)



datatype List[A] = Cons(A, List[A]) | Nil
//│ Defined class List[+A]
//│ Declared List.Cons: List['A] -> ('A, List['A],)
//│ Declared List.Nil: List[?] -> anything
//│ Defined class Cons[+A]
//│ Defined class Nil[+A]
//│ Cons: ('a, List['a],) -> List['a]
//│ Nil: List[nothing]

rec def find(table, key) =
  match table with
    | Nil -> None
    | Cons(h, t) ->
        if h.key == key then Some(h.val) else find(t, key)
//│ find: (List[{key: number, val: 'a}], number,) -> Option['a]


ls = Cons({key=0; val=id}, Cons({key=1; val=fun x -> x x}, Nil))
//│ ls: List[{key: 0 | 1, val: forall 'a 'b 'c. ('a -> 'b & 'c & 'a) -> ('c | 'b)}]

:ds
ls
//│ ⬤ Typed as: ‹∀ 0. α473'›
//│  where: 
//│ 		α467'' <: ((α467'',) -> α468'')
//│ 		α473' :> List[α432_474']
//│ 		α432_474' :> {key: #1<int,number>, val: ‹∀ 1. (α467'' -> α468'')›} | {key: #0<int,number>, val: ‹∀ 0. (α16' -> α16')›}
//│ ⬤ Initial: ‹∀ 0. α473'›
//│  where: 
//│ 		α467'' <: ((α467'',) -> α468'')
//│ 		α473' :> List[α432_474']
//│ 		α432_474' :> {key: #1<int,number>, val: ‹∀ 1. (α467'' -> α468'')›} | {key: #0<int,number>, val: ‹∀ 0. (α16' -> α16')›}
//│ allVarPols: =α16', =α467'', =α468'', +α473', +α432_474'
//│ Renewed α473' ~> α473_486'
//│ Renewed α432_474' ~> α432_487'
//│ Renewed α16' ~> α16_488'
//│ Renewed α467'' ~> α467_489''
//│ Renewed α468'' ~> α468_490''
//│ ⬤ Cleaned up: ‹∀ 0. α473_486'›
//│  where: 
//│ 		α473_486' :> List[α432_487']
//│ 		α432_487' :> {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}
//│ 		α467_489'' <: (α467_489'' -> α468_490'')
//│ allVarPols: +α473_486', +α432_487', =α16_488', =α467_489'', =α468_490''
//│ consed: Map()
//│ ⬤ Unskid: ‹∀ 0. α473_486'›
//│  where: 
//│ 		α473_486' :> List[α432_487']
//│ 		α432_487' :> {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}
//│ 		α467_489'' <: (α467_489'' -> α468_490'')
//│ analyze1[+] ‹∀ 0. α473_486'›
//│ | analyze1[+;Q(0)] α473_486'
//│ | | analyze1[+;Q(0);@[+](0)] List[α432_487']
//│ | | | analyze1[+;Q(0);@[+](0)] α432_487'
//│ | | | | analyze1[+;Q(0);@[+](0);@[+](0)] {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}
//│ | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] (#0<int,number> | #1<int,number>)
//│ | | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] #0<int,number>
//│ | | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] #1<int,number>
//│ | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)
//│ | | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] ‹∀ 0. (α16_488' -> α16_488')›
//│ | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0)] (α16_488' -> α16_488')
//│ | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-] (α16_488',)
//│ | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-] α16_488'
//│ | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0)] α16_488'
//│ | | | | | | analyze1[+;Q(0);@[+](0);@[+](0)] ‹∀ 1. (α467_489'' -> α468_490'')›
//│ | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0)] (α467_489'' -> α468_490'')
//│ | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-] (α467_489'',)
//│ | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-] α467_489''
//│ | | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0)] (α467_489'' -> α468_490'')
//│ | | | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);-] (α467_489'',)
//│ | | | | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);-] α467_489''
//│ | | | | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0)] α468_490''
//│ | | | | | | | | analyze1[+;Q(0);@[+](0);@[+](0);Q(0)] α468_490''
//│ [inv] 
//│ [nums] +α473_486' 1 ; +α432_487' 1 ; -α16_488' 1 ; +α16_488' 1 ; -α467_489'' 1 ; +α467_489'' 1 ; -α468_490'' 1 ; +α468_490'' 1
//│ analyze2[+] ‹∀ 0. α473_486'›
//│ | analyze2[+;Q(0)] α473_486'
//│ | | >> Processing α473_486' at [+]
//│ | | go α473_486'   ()
//│ | | | go List[α432_487']   (α473_486')
//│ | | >> Occurrences LinkedHashSet(α473_486', List[α432_487'])
//│ | | >>>> occs[+α473_486'] := LinkedHashSet(α473_486', List[α432_487'])  <~ None
//│ | | analyze2[+;Q(0)] List[α432_487']
//│ | | | analyze2[+;Q(0)] α432_487'
//│ | | | | >> Processing α432_487' at [+]
//│ | | | | go α432_487'   ()
//│ | | | | | go {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}   (α432_487')
//│ | | | | >> Occurrences LinkedHashSet(α432_487', {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)})
//│ | | | | >>>> occs[+α432_487'] := LinkedHashSet(α432_487', {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)})  <~ None
//│ | | | | analyze2[+;Q(0)] {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}
//│ | | | | | analyze2[+;Q(0)] (#0<int,number> | #1<int,number>)
//│ | | | | | | Components Set((None,#0<int,number>), (None,#1<int,number>))
//│ | | | | | | >> Processing (#0<int,number> | #1<int,number>) at [+]
//│ | | | | | | go (#0<int,number> | #1<int,number>)   ()
//│ | | | | | | | go #0<int,number>   ()
//│ | | | | | | | go #1<int,number>   (#0<int,number>)
//│ | | | | | | >> Occurrences LinkedHashSet(#0<int,number>, #1<int,number>)
//│ | | | | | | analyze2[+;Q(0)] #0<int,number>
//│ | | | | | | analyze2[+;Q(0)] #1<int,number>
//│ | | | | | analyze2[+;Q(0)] (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)
//│ | | | | | | Components Set((None,‹∀ 0. (α16_488' -> α16_488')›), (None,‹∀ 1. (α467_489'' -> α468_490'')›))
//│ | | | | | | >> Processing (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›) at [+]
//│ | | | | | | go (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)   ()
//│ | | | | | | | go ‹∀ 0. (α16_488' -> α16_488')›   ()
//│ | | | | | | | go ‹∀ 1. (α467_489'' -> α468_490'')›   (‹∀ 0. (α16_488' -> α16_488')›)
//│ | | | | | | >> Occurrences LinkedHashSet(‹∀ 0. (α16_488' -> α16_488')›, ‹∀ 1. (α467_489'' -> α468_490'')›)
//│ | | | | | | analyze2[+;Q(0)] ‹∀ 0. (α16_488' -> α16_488')›
//│ | | | | | | | analyze2[+;Q(0);Q(0)] (α16_488' -> α16_488')
//│ | | | | | | | | analyze2[+;Q(0);Q(0);-] (α16_488',)
//│ | | | | | | | | | analyze2[+;Q(0);Q(0);-] α16_488'
//│ | | | | | | | | | | >> Processing α16_488' at [-]
//│ | | | | | | | | | | go α16_488'   ()
//│ | | | | | | | | | | >> Occurrences LinkedHashSet(α16_488')
//│ | | | | | | | | | | >>>> occs[-α16_488'] := LinkedHashSet(α16_488')  <~ None
//│ | | | | | | | | analyze2[+;Q(0);Q(0)] α16_488'
//│ | | | | | | | | | >> Processing α16_488' at [+]
//│ | | | | | | | | | go α16_488'   ()
//│ | | | | | | | | | >> Occurrences LinkedHashSet(α16_488')
//│ | | | | | | | | | >>>> occs[+α16_488'] := LinkedHashSet(α16_488')  <~ None
//│ | | | | | | analyze2[+;Q(0)] ‹∀ 1. (α467_489'' -> α468_490'')›
//│ | | | | | | | analyze2[+;Q(0);Q(0)] (α467_489'' -> α468_490'')
//│ | | | | | | | | analyze2[+;Q(0);Q(0);-] (α467_489'',)
//│ | | | | | | | | | analyze2[+;Q(0);Q(0);-] α467_489''
//│ | | | | | | | | | | >> Processing α467_489'' at [-]
//│ | | | | | | | | | | go α467_489''   ()
//│ | | | | | | | | | | | go (α467_489'' -> α468_490'')   (α467_489'')
//│ | | | | | | | | | | >> Occurrences LinkedHashSet(α467_489'', (α467_489'' -> α468_490''))
//│ | | | | | | | | | | >>>> occs[-α467_489''] := LinkedHashSet(α467_489'', (α467_489'' -> α468_490''))  <~ None
//│ | | | | | | | | | | analyze2[+;Q(0);Q(0);-] (α467_489'' -> α468_490'')
//│ | | | | | | | | | | | analyze2[+;Q(0);Q(0);-;-] (α467_489'',)
//│ | | | | | | | | | | | | analyze2[+;Q(0);Q(0);-;-] α467_489''
//│ | | | | | | | | | | | | | >> Processing α467_489'' at [+]
//│ | | | | | | | | | | | | | go α467_489''   ()
//│ | | | | | | | | | | | | | >> Occurrences LinkedHashSet(α467_489'')
//│ | | | | | | | | | | | | | >>>> occs[+α467_489''] := LinkedHashSet(α467_489'')  <~ None
//│ | | | | | | | | | | | analyze2[+;Q(0);Q(0);-] α468_490''
//│ | | | | | | | | | | | | >> Processing α468_490'' at [-]
//│ | | | | | | | | | | | | go α468_490''   ()
//│ | | | | | | | | | | | | >> Occurrences LinkedHashSet(α468_490'')
//│ | | | | | | | | | | | | >>>> occs[-α468_490''] := LinkedHashSet(α468_490'')  <~ None
//│ | | | | | | | | analyze2[+;Q(0);Q(0)] α468_490''
//│ | | | | | | | | | >> Processing α468_490'' at [+]
//│ | | | | | | | | | go α468_490''   ()
//│ | | | | | | | | | >> Occurrences LinkedHashSet(α468_490'')
//│ | | | | | | | | | >>>> occs[+α468_490''] := LinkedHashSet(α468_490'')  <~ None
//│ [occs] +α473_486' {α473_486',List[α432_487']} ; +α432_487' {α432_487',{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}} ; -α16_488' {α16_488'} ; +α16_488' {α16_488'} ; -α467_489'' {α467_489'',(α467_489'' -> α468_490'')} ; +α467_489'' {α467_489''} ; -α468_490'' {α468_490''} ; +α468_490'' {α468_490''}
//│ [vars] TreeSet(α473_486', α432_487', α16_488', α467_489'', α468_490'')
//│ [rec] Set()
//│ 0[1] α473_486'
//│ 0[1] α432_487'
//│ 1[!] α473_486'
//│ 1[!] α432_487'
//│ 2[v] α16_488' Some(LinkedHashSet(α16_488')) Some(LinkedHashSet(α16_488'))
//│ 2[v] α467_489'' Some(LinkedHashSet(α467_489'')) Some(LinkedHashSet(α467_489'', (α467_489'' -> α468_490'')))
//│ 2[v] α468_490'' Some(LinkedHashSet(α468_490'')) Some(LinkedHashSet(α468_490''))
//│ 3[v] α16_488' +LinkedHashSet(α16_488') -LinkedHashSet(α16_488')
//│ 3[v] α467_489'' +LinkedHashSet(α467_489'') -LinkedHashSet(α467_489'', (α467_489'' -> α468_490''))
//│ 3[v] α468_490'' +LinkedHashSet(α468_490'') -LinkedHashSet(α468_490'')
//│ [sub] α473_486' -> None, α432_487' -> None
//│ [bounds] 
//│ 		α473_486' :> List[α432_487']
//│ 		α432_487' :> {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}
//│ 		α467_489'' <: (α467_489'' -> α468_490'')
//│ [rec] Set()
//│ transform[+] ‹∀ 0. α473_486'›   ()  +  None
//│ | transform[+] α473_486'   ()  +;Q(0)  Some(0)
//│ | | -> bound Some(true)
//│ | | transform[+] List[α432_487']   (α473_486')  +;Q(0);@[+](0)  Some(0)
//│ | | | transform[+] α432_487'   ()  +;Q(0);@[+](0)  None
//│ | | | | -> bound Some(true)
//│ | | | | transform[+] {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)}   (α432_487')  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | transform[+] (#0<int,number> | #1<int,number>)   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | transform[+] #0<int,number>   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | ~> #0<int,number>
//│ | | | | | | transform[+] #1<int,number>   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | ~> #1<int,number>
//│ | | | | | ~> (#0<int,number> | #1<int,number>)
//│ | | | | | transform[+] (‹∀ 0. (α16_488' -> α16_488')› | ‹∀ 1. (α467_489'' -> α468_490'')›)   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | transform[+] ‹∀ 0. (α16_488' -> α16_488')›   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | | transform[+] (α16_488' -> α16_488')   ()  +;Q(0);@[+](0);@[+](0);Q(0)  Some(0)
//│ | | | | | | | | transform[-] (α16_488',)   ()  +;Q(0);@[+](0);@[+](0);Q(0);-  None
//│ | | | | | | | | | transform[-] α16_488'   ()  +;Q(0);@[+](0);@[+](0);Q(0);-  None
//│ | | | | | | | | | | Renewed α16_488' ~> α16_491'
//│ | | | | | | | | | | Inlining [-] bounds of α16_488' (~> α16_491')
//│ | | | | | | | | | | transform[-] ⊤   (α16_488')  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0)  None
//│ | | | | | | | | | | ~> ⊤
//│ | | | | | | | | | ~> α16_491'
//│ | | | | | | | | ~> (α16_491',)
//│ | | | | | | | | transform[+] α16_488'   ()  +;Q(0);@[+](0);@[+](0);Q(0)  Some(0)
//│ | | | | | | | | | Inlining [+] bounds of α16_488' (~> α16_491')
//│ | | | | | | | | | transform[+] ⊥   (α16_488')  +;Q(0);@[+](0);@[+](0);Q(0);@[+](0)  Some(0)
//│ | | | | | | | | | ~> ⊥
//│ | | | | | | | | ~> α16_491'
//│ | | | | | | | ~> (α16_491' -> α16_491')
//│ | | | | | | ~> ‹∀ 0. (α16_491' -> α16_491')›
//│ | | | | | | transform[+] ‹∀ 1. (α467_489'' -> α468_490'')›   ()  +;Q(0);@[+](0);@[+](0)  None
//│ | | | | | | | transform[+] (α467_489'' -> α468_490'')   ()  +;Q(0);@[+](0);@[+](0);Q(0)  Some(1)
//│ | | | | | | | | transform[-] (α467_489'',)   ()  +;Q(0);@[+](0);@[+](0);Q(0);-  None
//│ | | | | | | | | | transform[-] α467_489''   ()  +;Q(0);@[+](0);@[+](0);Q(0);-  None
//│ | | | | | | | | | | Renewed α467_489'' ~> α467_492''
//│ | | | | | | | | | | Inlining [-] bounds of α467_489'' (~> α467_492'')
//│ | | | | | | | | | | transform[-] (α467_489'' -> α468_490'')   (α467_489'')  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0)  None
//│ | | | | | | | | | | | transform[+] (α467_489'',)   ()  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);-  None
//│ | | | | | | | | | | | | transform[+] α467_489''   ()  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);-  None
//│ | | | | | | | | | | | | | Inlining [+] bounds of α467_489'' (~> α467_492'')
//│ | | | | | | | | | | | | | transform[+] ⊥   (α467_489'')  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);-;@[+](0)  None
//│ | | | | | | | | | | | | | ~> ⊥
//│ | | | | | | | | | | | | ~> α467_492''
//│ | | | | | | | | | | | ~> (α467_492'',)
//│ | | | | | | | | | | | transform[-] α468_490''   ()  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0)  None
//│ | | | | | | | | | | | | Renewed α468_490'' ~> α468_493''
//│ | | | | | | | | | | | | Inlining [-] bounds of α468_490'' (~> α468_493'')
//│ | | | | | | | | | | | | transform[-] ⊤   (α468_490'')  +;Q(0);@[+](0);@[+](0);Q(0);-;@[-](0);@[-](0)  None
//│ | | | | | | | | | | | | ~> ⊤
//│ | | | | | | | | | | | ~> α468_493''
//│ | | | | | | | | | | ~> (α467_492'' -> α468_493'')
//│ | | | | | | | | | ~> ((α467_492'' -> α468_493'') & α467_492'')
//│ | | | | | | | | ~> (((α467_492'' -> α468_493'') & α467_492''),)
//│ | | | | | | | | transform[+] α468_490''   ()  +;Q(0);@[+](0);@[+](0);Q(0)  Some(1)
//│ | | | | | | | | | Inlining [+] bounds of α468_490'' (~> α468_493'')
//│ | | | | | | | | | transform[+] ⊥   (α468_490'')  +;Q(0);@[+](0);@[+](0);Q(0);@[+](0)  Some(1)
//│ | | | | | | | | | ~> ⊥
//│ | | | | | | | | ~> α468_493''
//│ | | | | | | | ~> (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')
//│ | | | | | | ~> ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›
//│ | | | | | ~> (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)
//│ | | | | ~> {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}
//│ | | | ~> {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}
//│ | | ~> List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│ | ~> List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│ ~> List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│ ⬤ Type after simplification: List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│  where: 
//│ allVarPols: =α16_491', =α467_492'', =α468_493''
//│ normLike[+] List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│ | norm[+] List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}]
//│ | | DNF: DNF(0, #List<>{}∧List[{key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}])
//│ | | norm[+] {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)}
//│ | | | DNF: DNF(0, {key: (#0<int,number> | #1<int,number>), val: (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)})
//│ | | | norm[+] (#0<int,number> | #1<int,number>)
//│ | | | | DNF: DNF(0, #0<int,number>{} | #1<int,number>{})
//│ | | | | C (#0<int,number> | #1<int,number>) List(#0<int,number>, #1<int,number>)
//│ | | | | CS List(#0<int,number>, #1<int,number>)
//│ | | | | factorize? #0<int,number> | #1<int,number>
//│ | | | | | Factors 
//│ | | | | | Hash codes 
//│ | | | | | Classes 
//│ | | | | yes: (#0<int,number> | #1<int,number>)
//│ | | | ~> (#0<int,number> | #1<int,number>)
//│ | | | norm[+] (‹∀ 0. (α16_491' -> α16_491')› | ‹∀ 1. (((α467_492'' -> α468_493'') & α467_492'') -> α468_493'')›)
//│ | | | | DNF: DNF(0, ((α16_491' & ((α467_492'' -> α468_493'') & α467_492'')) -> (α16_491' | α468_493'')){})
//│ | | | | norm[-] ((α16_491' & ((α467_492'' -> α468_493'') & α467_492'')),)
//│ | | | | | DNF: DNF(2, ((α16_491' & ((α467_492'' -> α468_493'') & α467_492'')),){})
//│ | | | | | norm[-] (α16_491' & ((α467_492'' -> α468_493'') & α467_492''))
//│ | | | | | | DNF: DNF(2, (α467_492'' -> α468_493''){}∧α16_491'∧α467_492'')
//│ | | | | | | norm[+] (α467_492'',)
//│ | | | | | | | DNF: DNF(2, (α467_492'',){})
//│ | | | | | | | norm[+] α467_492''
//│ | | | | | | | | DNF: DNF(2, α467_492'')
//│ | | | | | | | | C α467_492'' List(α467_492'')
//│ | | | | | | | ~> α467_492''
//│ | | | | | | | C (α467_492'',) List((α467_492'',))
//│ | | | | | | ~> (α467_492'',)
//│ | | | | | | norm[-] α468_493''
//│ | | | | | | | DNF: DNF(2, α468_493'')
//│ | | | | | | | C α468_493'' List(α468_493'')
//│ | | | | | | ~> α468_493''
//│ | | | | | | C (((α467_492'' -> α468_493'') & α16_491') & α467_492'') List((((α467_492'' -> α468_493'') & α16_491') & α467_492''))
//│ | | | | | ~> (((α467_492'' -> α468_493'') & α16_491') & α467_492'')
//│ | | | | | C ((((α467_492'' -> α468_493'') & α16_491') & α467_492''),) List(((((α467_492'' -> α468_493'') & α16_491') & α467_492''),))
//│ | | | | ~> ((((α467_492'' -> α468_493'') & α16_491') & α467_492''),)
//│ | | | | norm[+] (α16_491' | α468_493'')
//│ | | | | | DNF: DNF(2, α16_491' | α468_493'')
//│ | | | | | C (α16_491' | α468_493'') List(α16_491', α468_493'')
//│ | | | | | CS List(α16_491', α468_493'')
//│ | | | | | factorize? α16_491' | α468_493''
//│ | | | | | | Add α16_491'
//│ | | | | | | Add α468_493''
//│ | | | | | | Factors α16_491' -> 1, α468_493'' -> 1
//│ | | | | | | Hash codes 491, 493
//│ | | | | | | Classes class mlscript.TyperDatatypes$TypeVariable, class mlscript.TyperDatatypes$TypeVariable
//│ | | | | | | ?(α16_491',1)
//│ | | | | | yes: (α16_491' | α468_493'')
//│ | | | | | INST [2]   ‹∀ 2. (α16_491' | α468_493'')›
//│ | | | | |   where  
//│ | | | | | TO [1] ~>  (α16_491' | α468_493'')
//│ | | | | |   where  
//│ | | | | ~> (α16_491' | α468_493'')
//│ | | | | C ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493'')) List(((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493'')))
//│ | | | ~> ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›
//│ | | | C {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›} List({key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›})
//│ | | ~> {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}
//│ | | rcd2 {}
//│ | | typeRef List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│ | | clsFields Var(List#A) -> mut ..{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}
//│ | | C List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}] List(List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}])
//│ | ~> List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│ ⬤ Normalized: List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│  where: 
//│ allVarPols: =α16_491', =α467_492'', =α468_493''
//│ ⬤ Cleaned up: List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│  where: 
//│ allVarPols: =α16_491', =α467_492'', =α468_493''
//│ consed: Map()
//│ ⬤ Unskid: List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│  where: 
//│ analyze1[+] List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│ | analyze1[+] {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}
//│ | | analyze1[+] (#0<int,number> | #1<int,number>)
//│ | | | analyze1[+] #0<int,number>
//│ | | | analyze1[+] #1<int,number>
//│ | | analyze1[+] ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›
//│ | | | analyze1[+;Q(0)] ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))
//│ | | | | analyze1[+;Q(0);-] ((((α467_492'' -> α468_493'') & α16_491') & α467_492''),)
//│ | | | | | analyze1[+;Q(0);-] (((α467_492'' -> α468_493'') & α16_491') & α467_492'')
//│ | | | | | | analyze1[+;Q(0);-] ((α467_492'' -> α468_493'') & α16_491')
//│ | | | | | | | analyze1[+;Q(0);-] (α467_492'' -> α468_493'')
//│ | | | | | | | | analyze1[+;Q(0);-;-] (α467_492'',)
//│ | | | | | | | | | analyze1[+;Q(0);-;-] α467_492''
//│ | | | | | | | | analyze1[+;Q(0);-] α468_493''
//│ | | | | | | | analyze1[+;Q(0);-] α16_491'
//│ | | | | | | analyze1[+;Q(0);-] α467_492''
//│ | | | | analyze1[+;Q(0)] (α16_491' | α468_493'')
//│ | | | | | analyze1[+;Q(0)] α16_491'
//│ | | | | | analyze1[+;Q(0)] α468_493''
//│ [inv] 
//│ [nums] +α467_492'' 1 ; -α468_493'' 1 ; -α16_491' 1 ; -α467_492'' 1 ; +α16_491' 1 ; +α468_493'' 1
//│ analyze2[+] List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]
//│ | analyze2[+] {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}
//│ | | analyze2[+] (#0<int,number> | #1<int,number>)
//│ | | | Components Set((None,#0<int,number>), (None,#1<int,number>))
//│ | | | >> Processing (#0<int,number> | #1<int,number>) at [+]
//│ | | | go (#0<int,number> | #1<int,number>)   ()
//│ | | | | go #0<int,number>   ()
//│ | | | | go #1<int,number>   (#0<int,number>)
//│ | | | >> Occurrences LinkedHashSet(#0<int,number>, #1<int,number>)
//│ | | | analyze2[+] #0<int,number>
//│ | | | analyze2[+] #1<int,number>
//│ | | analyze2[+] ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›
//│ | | | analyze2[+;Q(0)] ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))
//│ | | | | analyze2[+;Q(0);-] ((((α467_492'' -> α468_493'') & α16_491') & α467_492''),)
//│ | | | | | analyze2[+;Q(0);-] (((α467_492'' -> α468_493'') & α16_491') & α467_492'')
//│ | | | | | | Components Set((None,(α467_492'' -> α468_493'')), (Some(false),α16_491'), (Some(false),α467_492''))
//│ | | | | | | >> Processing (((α467_492'' -> α468_493'') & α16_491') & α467_492'') at [-]
//│ | | | | | | go (((α467_492'' -> α468_493'') & α16_491') & α467_492'')   ()
//│ | | | | | | | go ((α467_492'' -> α468_493'') & α16_491')   ()
//│ | | | | | | | | go (α467_492'' -> α468_493'')   ()
//│ | | | | | | | | go α16_491'   ((α467_492'' -> α468_493''))
//│ | | | | | | | go α467_492''   ((α467_492'' -> α468_493''), α16_491')
//│ | | | | | | >> Occurrences LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492'')
//│ | | | | | | >>>> occs[-α16_491'] := LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492'')  <~ None
//│ | | | | | | >>>> occs[-α467_492''] := LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492'')  <~ None
//│ | | | | | | analyze2[+;Q(0);-] (α467_492'' -> α468_493'')
//│ | | | | | | | analyze2[+;Q(0);-;-] (α467_492'',)
//│ | | | | | | | | analyze2[+;Q(0);-;-] α467_492''
//│ | | | | | | | | | >> Processing α467_492'' at [+]
//│ | | | | | | | | | go α467_492''   ()
//│ | | | | | | | | | >> Occurrences LinkedHashSet(α467_492'')
//│ | | | | | | | | | >>>> occs[+α467_492''] := LinkedHashSet(α467_492'')  <~ None
//│ | | | | | | | analyze2[+;Q(0);-] α468_493''
//│ | | | | | | | | >> Processing α468_493'' at [-]
//│ | | | | | | | | go α468_493''   ()
//│ | | | | | | | | >> Occurrences LinkedHashSet(α468_493'')
//│ | | | | | | | | >>>> occs[-α468_493''] := LinkedHashSet(α468_493'')  <~ None
//│ | | | | analyze2[+;Q(0)] (α16_491' | α468_493'')
//│ | | | | | Components Set((Some(true),α16_491'), (Some(true),α468_493''))
//│ | | | | | >> Processing (α16_491' | α468_493'') at [+]
//│ | | | | | go (α16_491' | α468_493'')   ()
//│ | | | | | | go α16_491'   ()
//│ | | | | | | go α468_493''   (α16_491')
//│ | | | | | >> Occurrences LinkedHashSet(α16_491', α468_493'')
//│ | | | | | >>>> occs[+α16_491'] := LinkedHashSet(α16_491', α468_493'')  <~ None
//│ | | | | | >>>> occs[+α468_493''] := LinkedHashSet(α16_491', α468_493'')  <~ None
//│ [occs] -α16_491' {(α467_492'' -> α468_493''),α16_491',α467_492''} ; -α467_492'' {(α467_492'' -> α468_493''),α16_491',α467_492''} ; +α467_492'' {α467_492''} ; -α468_493'' {α468_493''} ; +α16_491' {α16_491',α468_493''} ; +α468_493'' {α16_491',α468_493''}
//│ [vars] TreeSet(α16_491', α467_492'', α468_493'')
//│ [rec] Set()
//│ 2[v] α16_491' Some(LinkedHashSet(α16_491', α468_493'')) Some(LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492''))
//│ 2[v] α467_492'' Some(LinkedHashSet(α467_492'')) Some(LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492''))
//│ 2[v] α468_493'' Some(LinkedHashSet(α16_491', α468_493'')) Some(LinkedHashSet(α468_493''))
//│ 3[v] α16_491' +LinkedHashSet(α16_491', α468_493'') -LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492'')
//│ 3[v] α467_492'' +LinkedHashSet(α467_492'') -LinkedHashSet((α467_492'' -> α468_493''), α16_491', α467_492'')
//│ 3[v] α468_493'' +LinkedHashSet(α16_491', α468_493'') -LinkedHashSet(α468_493'')
//│ [sub] 
//│ [bounds] 
//│ [rec] Set()
//│ transform[+] List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}]   ()  +  None
//│ | transform[+] {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›}   ()  +  None
//│ | | transform[+] (#0<int,number> | #1<int,number>)   ()  +  None
//│ | | | transform[+] #0<int,number>   ()  +  None
//│ | | | ~> #0<int,number>
//│ | | | transform[+] #1<int,number>   ()  +  None
//│ | | | ~> #1<int,number>
//│ | | ~> (#0<int,number> | #1<int,number>)
//│ | | transform[+] ‹∀ 0. ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))›   ()  +  None
//│ | | | transform[+] ((((α467_492'' -> α468_493'') & α16_491') & α467_492'') -> (α16_491' | α468_493''))   ()  +;Q(0)  Some(0)
//│ | | | | transform[-] ((((α467_492'' -> α468_493'') & α16_491') & α467_492''),)   ()  +;Q(0);-  None
//│ | | | | | transform[-] (((α467_492'' -> α468_493'') & α16_491') & α467_492'')   ()  +;Q(0);-  None
//│ | | | | | | transform[-] ((α467_492'' -> α468_493'') & α16_491')   ()  +;Q(0);-  None
//│ | | | | | | | transform[-] (α467_492'' -> α468_493'')   ()  +;Q(0);-  None
//│ | | | | | | | | transform[+] (α467_492'',)   ()  +;Q(0);-;-  None
//│ | | | | | | | | | transform[+] α467_492''   ()  +;Q(0);-;-  None
//│ | | | | | | | | | | Renewed α467_492'' ~> α467_494''
//│ | | | | | | | | | | Inlining [+] bounds of α467_492'' (~> α467_494'')
//│ | | | | | | | | | | transform[+] ⊥   (α467_492'')  +;Q(0);-;-;@[+](0)  None
//│ | | | | | | | | | | ~> ⊥
//│ | | | | | | | | | ~> α467_494''
//│ | | | | | | | | ~> (α467_494'',)
//│ | | | | | | | | transform[-] α468_493''   ()  +;Q(0);-  None
//│ | | | | | | | | | Renewed α468_493'' ~> α468_495''
//│ | | | | | | | | | Inlining [-] bounds of α468_493'' (~> α468_495'')
//│ | | | | | | | | | transform[-] ⊤   (α468_493'')  +;Q(0);-;@[-](0)  None
//│ | | | | | | | | | ~> ⊤
//│ | | | | | | | | ~> α468_495''
//│ | | | | | | | ~> (α467_494'' -> α468_495'')
//│ | | | | | | | transform[-] α16_491'   ()  +;Q(0);-  None
//│ | | | | | | | | Renewed α16_491' ~> α16_496'
//│ | | | | | | | | Inlining [-] bounds of α16_491' (~> α16_496')
//│ | | | | | | | | transform[-] ⊤   (α16_491')  +;Q(0);-;@[-](0)  None
//│ | | | | | | | | ~> ⊤
//│ | | | | | | | ~> α16_496'
//│ | | | | | | ~> ((α467_494'' -> α468_495'') & α16_496')
//│ | | | | | | transform[-] α467_492''   ()  +;Q(0);-  None
//│ | | | | | | | Inlining [-] bounds of α467_492'' (~> α467_494'')
//│ | | | | | | | transform[-] ⊤   (α467_492'')  +;Q(0);-;@[-](0)  None
//│ | | | | | | | ~> ⊤
//│ | | | | | | ~> α467_494''
//│ | | | | | ~> (((α467_494'' -> α468_495'') & α16_496') & α467_494'')
//│ | | | | ~> ((((α467_494'' -> α468_495'') & α16_496') & α467_494''),)
//│ | | | | transform[+] (α16_491' | α468_493'')   ()  +;Q(0)  Some(0)
//│ | | | | | transform[+] α16_491'   ()  +;Q(0)  Some(0)
//│ | | | | | | Inlining [+] bounds of α16_491' (~> α16_496')
//│ | | | | | | transform[+] ⊥   (α16_491')  +;Q(0);@[+](0)  Some(0)
//│ | | | | | | ~> ⊥
//│ | | | | | ~> α16_496'
//│ | | | | | transform[+] α468_493''   ()  +;Q(0)  Some(0)
//│ | | | | | | Inlining [+] bounds of α468_493'' (~> α468_495'')
//│ | | | | | | transform[+] ⊥   (α468_493'')  +;Q(0);@[+](0)  Some(0)
//│ | | | | | | ~> ⊥
//│ | | | | | ~> α468_495''
//│ | | | | ~> (α16_496' | α468_495'')
//│ | | | ~> ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))
//│ | | ~> ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›
//│ | ~> {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}
//│ ~> List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}]
//│ ⬤ Resim: List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}]
//│  where: 
//│ allVarPols: =α467_494'', =α468_495'', =α16_496'
//│ [subs] HashMap()
//│ ⬤ Factored: List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}]
//│  where: 
//│ expand List[{key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}]
//│ | expand {key: (#0<int,number> | #1<int,number>), val: ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›}
//│ | | expand (#0<int,number> | #1<int,number>)
//│ | | | expand #0<int,number>
//│ | | | ~> Literal(IntLit(0))
//│ | | | expand #1<int,number>
//│ | | | ~> Literal(IntLit(1))
//│ | | ~> Union(Literal(IntLit(0)),Literal(IntLit(1)))
//│ | | expand ‹∀ 0. ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))›
//│ | | | expand ((((α467_494'' -> α468_495'') & α16_496') & α467_494'') -> (α16_496' | α468_495''))
//│ | | | | expand ((((α467_494'' -> α468_495'') & α16_496') & α467_494''),)
//│ | | | | | expand (((α467_494'' -> α468_495'') & α16_496') & α467_494'')
//│ | | | | | | expand ((α467_494'' -> α468_495'') & α16_496')
//│ | | | | | | | expand (α467_494'' -> α468_495'')
//│ | | | | | | | | expand (α467_494'',)
//│ | | | | | | | | | expand α467_494''
//│ | | | | | | | | | | expand ⊥
//│ | | | | | | | | | | ~> Bot
//│ | | | | | | | | | | expand ⊤
//│ | | | | | | | | | | ~> Top
//│ | | | | | | | | | ~> α494
//│ | | | | | | | | ~> Tuple(List((None,Field(None,α494))))
//│ | | | | | | | | expand α468_495''
//│ | | | | | | | | | expand ⊥
//│ | | | | | | | | | ~> Bot
//│ | | | | | | | | | expand ⊤
//│ | | | | | | | | | ~> Top
//│ | | | | | | | | ~> α495
//│ | | | | | | | ~> Function(Tuple(List((None,Field(None,α494)))),α495)
//│ | | | | | | | expand α16_496'
//│ | | | | | | | | expand ⊥
//│ | | | | | | | | ~> Bot
//│ | | | | | | | | expand ⊤
//│ | | | | | | | | ~> Top
//│ | | | | | | | ~> α496
//│ | | | | | | ~> Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496)
//│ | | | | | | expand α467_494''
//│ | | | | | | ~> α494
//│ | | | | | ~> Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494)
//│ | | | | ~> Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494)))))
//│ | | | | expand (α16_496' | α468_495'')
//│ | | | | | expand α16_496'
//│ | | | | | ~> α496
//│ | | | | | expand α468_495''
//│ | | | | | ~> α495
//│ | | | | ~> Union(α496,α495)
//│ | | | ~> Function(Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494))))),Union(α496,α495))
//│ | | ~> PolyType(List(Right(α494), Right(α495), Right(α496)),Function(Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494))))),Union(α496,α495)))
//│ | ~> Record(List((Var(key),Field(None,Union(Literal(IntLit(0)),Literal(IntLit(1))))), (Var(val),Field(None,PolyType(List(Right(α494), Right(α495), Right(α496)),Function(Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494))))),Union(α496,α495)))))))
//│ ~> AppliedType(TypeName(List),List(Record(List((Var(key),Field(None,Union(Literal(IntLit(0)),Literal(IntLit(1))))), (Var(val),Field(None,PolyType(List(Right(α494), Right(α495), Right(α496)),Function(Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494))))),Union(α496,α495)))))))))
//│ ⬤ Expanded: AppliedType(TypeName(List),List(Record(List((Var(key),Field(None,Union(Literal(IntLit(0)),Literal(IntLit(1))))), (Var(val),Field(None,PolyType(List(Right(α494), Right(α495), Right(α496)),Function(Tuple(List((None,Field(None,Inter(Inter(Function(Tuple(List((None,Field(None,α494)))),α495),α496),α494))))),Union(α496,α495)))))))))
//│ res: List[{key: 0 | 1, val: forall 'a 'b 'c. ('a -> 'b & 'c & 'a) -> ('c | 'b)}]

def found: Option[forall 'a 'b. ('a -> 'b & 'a) -> ('b | 'a)]
//│ found: Option[forall 'a 'b. ('a -> 'b & 'a) -> ('b | 'a)]

found = find(ls, 1)
//│ Option[forall 'a 'b 'c. ('a -> 'b & 'a & 'c) -> ('b | 'c)]
//│   <:  found:
//│ Option[forall 'a 'b. ('a -> 'b & 'a) -> ('b | 'a)]

match found with
  | None -> ("???", false)
  | Some(r) -> (r id "!!!", r id true)
//│ res: ("???" | "!!!", Bool,)


use fnd = match fnd with
  | None -> ("???", false)
  | Some(r) -> (r id "!!!", r id true)
//│ use: Option[(forall 'a. 'a -> 'a) -> ("!!!" -> 'b & true -> 'c)] -> ("???" | 'b, false | 'c,)

use found
//│ res: ("???" | "!!!", Bool,)











