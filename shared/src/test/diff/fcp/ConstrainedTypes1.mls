:ConstrainedTypes


// :d
foo x =
  log (succ x.prop)
//│ foo: {prop: int} -> unit
//│    = [Function: foo]

:ns
foo x =
  let _ = log (succ x.prop)
  in x
//│ foo: forall 'prop 'a. 'a -> 'a
//│   where
//│     'a <: {prop: 'prop}
//│     'prop <: int
//│    = [Function: foo1]

:e
foo false
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.21: 	foo false
//│ ║        	^^^^^^^^^
//│ ╟── reference of type `false` does not have field 'prop'
//│ ║  l.21: 	foo false
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from field selection:
//│ ║  l.12: 	  let _ = log (succ x.prop)
//│ ╙──      	                    ^^^^^^
//│ res: error | false
//│    = false
//│ // Output
//│ NaN

foo x =
  let _ = log (fun y -> x.prop y)
  in x
//│ foo: 'a -> 'a
//│    = [Function: foo2]

// :e // * Error swallowed by inconsistent constrained types... but it seems this can't lead to unsoundness
foo false
//│ res: false
//│    = false
//│ // Output
//│ [Function (anonymous)]

foo x =
  let _ = log ((fun y -> x.prop y) 0)
  in x
//│ foo: ({prop: 0 -> anything} & 'a) -> 'a
//│    = [Function: foo3]

:e
foo false
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.56: 	foo false
//│ ║        	^^^^^^^^^
//│ ╟── reference of type `false` does not have field 'prop'
//│ ║  l.56: 	foo false
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from field selection:
//│ ║  l.50: 	  let _ = log ((fun y -> x.prop y) 0)
//│ ╙──      	                         ^^^^^^
//│ res: error | false
//│ Runtime error:
//│   TypeError: x.prop is not a function

:ng
app = error : ('a -> 'a) -> ()
//│ app: ('a -> 'a) -> ()

:ng
foo x =
  let _ = app (fun y -> x.prop y)
  in x
//│ foo: ({prop: 'a -> 'a} & 'b) -> 'b

:e
foo false
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.81: 	foo false
//│ ║        	^^^^^^^^^
//│ ╟── reference of type `false` does not have field 'prop'
//│ ║  l.81: 	foo false
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from field selection:
//│ ║  l.76: 	  let _ = app (fun y -> x.prop y)
//│ ╙──      	                        ^^^^^^
//│ res: error | false
//│ Runtime error:
//│   TypeError: x.prop is not a function


