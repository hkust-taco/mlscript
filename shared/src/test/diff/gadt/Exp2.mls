:NewDefs


abstract class Exp[A]: Pair | Lit
class Lit(val n: Int) extends Exp[Int]
//│ ╔══[ERROR] type identifier not found: Pair
//│ ║  l.4: 	abstract class Exp[A]: Pair | Lit
//│ ╙──     	                       ^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ abstract class Exp[A]: Lit | error
//│ class Lit(n: Int) extends Exp
<<<<<<<
class Pair[L, R](val lhs: Exp[L], val rhs: Exp[R]) extends Exp[[L, R]]
//│ class Exp[A]: Lit | Pair[?, ?] {
//│   constructor()
//│ }
||||||| b14bd8d83
class Pair[L, R](val lhs: Exp[L], val rhs: Exp[R]) extends Exp[(L, R)]
//│ class Exp[A]: Lit | Pair[?, ?] {
//│   constructor()
//│ }
=======
class Pair[L, R](val lhs: Exp[L], val rhs: Exp[R]) extends Exp[(L, R)]
//│ abstract class Exp[A]: Lit | Pair[?, ?]
>>>>>>>


fun f(p: Pair['a, 'b]) = p.lhs
//│ ╔══[ERROR] type identifier not found: Pair
//│ ║  l.28: 	fun f(p: Pair['a, 'b]) = p.lhs
//│ ╙──      	         ^^^^^^^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun f: (p: error) -> error


fun f(e) = if e is
  Pair(l, r) then [l, r]
//│ ╔══[ERROR] Illegal pattern `Pair`
//│ ║  l.37: 	  Pair(l, r) then [l, r]
//│ ╙──      	  ^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun f: anything -> error
//│ Code generation encountered an error:
//│   if expression was not desugared
// f: (Exp['a] & Pair) -> 0


fun f(e) = if e is
  Pair(l, r) then [l, r]
  Lit(n) then n
//│ ╔══[ERROR] Illegal pattern `Pair`
//│ ║  l.49: 	  Pair(l, r) then [l, r]
//│ ╙──      	  ^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun f: anything -> error
//│ Code generation encountered an error:
//│   if expression was not desugared

:e
(e: Exp['X]) => f(e)
//│ forall 'X. (e: Exp['X]) -> error
//│ res
//│     = [Function: res]
//│ TEST CASE FAILURE: There was an unexpected lack of type error


:e
fun f(e) = if e is
  Pair(l, r) then f(l) + f(r)
  Lit(n) then n
//│ ╔══[ERROR] Illegal pattern `Pair`
//│ ║  l.69: 	  Pair(l, r) then f(l) + f(r)
//│ ╙──      	  ^^^^
//│ fun f: anything -> error
//│ Code generation encountered an error:
//│   if expression was not desugared


