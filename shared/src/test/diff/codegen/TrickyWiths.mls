
() with {}
//│ res: ()
//│    = []

:js
n = 42 with { x = 1 }
n + n.x
//│ // Query 1
//│ globalThis.n = withConstruct(42, { x: 1 });
//│ res = n;
//│ // Query 2
//│ res = n + n.x;
//│ // End of generated code
//│ n: 42 & {x: 1}
//│  = [Number: 42] { x: 1 }
//│ res: int
//│    = 43


// TODO: make `with` actually work on arrays:

:js
a = (1,2,3) with {}
def a: nothing // unsound escape hatch
//│ // Query 1
//│ globalThis.a = withConstruct([
//│   1,
//│   2,
//│   3
//│ ], {});
//│ res = a;
//│ // Query 2 is empty
//│ // End of generated code
//│ a: (1, 2, 3,)
//│  = [ 1, 2, 3 ]
//│ a: nothing
//│  = <missing implementation>

a.length
a.map(fun x -> x + 1)
//│ res: nothing
//│    = 3
//│ res: nothing
//│    = [ 2, 3, 4 ]


