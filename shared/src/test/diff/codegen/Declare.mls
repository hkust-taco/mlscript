// This file tests the error message of unimplemented symbols.
()
//│ res: ()
//│    = []

:js
def a: int
//│ // Query 1 is empty
//│ // End of generated code
//│ a: int
//│  = <missing implementation>

:js
def b = a
//│ // Query 1 aborted: a is not implemented
//│ // End of generated code
//│ b: int
//│  = <no result>
//│    a is not implemented

// We can use some unimplemented value.
// But preserve other implemented things in the same block.
:js
def c = b
def q = 0
//│ // Query 1 aborted: b and a are not implemented
//│ // Query 2
//│ globalThis.q = 0;
//│ res = q;
//│ // End of generated code
//│ c: int
//│  = <no result>
//│    b and a are not implemented
//│ q: 0
//│  = 0

// We will display all unimplemented symbols.
:js
def d = c
//│ // Query 1 aborted: c, b and a are not implemented
//│ // End of generated code
//│ d: int
//│  = <no result>
//│    c, b and a are not implemented

def q: int
def q: string
//│ q: int
//│  = <missing implementation>
//│ q: string
//│  = <missing implementation>

q: anything
//│ res: anything
//│    = <no result>
//│      q is not implemented

// Use unimplemented symbols defined in the same block.
0
def f: int -> int
f 0
//│ res: 0
//│    = 0
//│ f: int -> int
//│  = <missing implementation>
//│ res: int
//│    = <no result>
//│      f is not implemented

def a: int
//│ a: int
//│  = <missing implementation>

a = 0
//│ 0
//│   <:  a:
//│ int
//│  = 0

def b = a
//│ b: int
//│  = 0

// Declare JavaScript reserved words.
:js
def break = 1
def str = "str"
//│ // Query 1
//│ globalThis.break1 = 1;
//│ res = break1;
//│ // Query 2
//│ globalThis.str = "str";
//│ res = str;
//│ // End of generated code
//│ break: 1
//│      = 1
//│ str: "str"
//│    = 'str'
