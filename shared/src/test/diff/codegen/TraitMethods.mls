
// To generate the prelude without printing it in the next test case
()
//│ res: ()
//│    = []

:js
trait T0
  method Foo: int
//│ Defined trait T0
//│ Declared T0.Foo: t0 -> int
//│ // End of generated code

:js
trait T1
  method Foo = 1
//│ Defined trait T1
//│ Defined T1.Foo: t1 -> 1
//│ // End of generated code

:js
class A: T0
//│ Defined class A
//│ Code generation met an error:
//│   class not found: T0

:js
class B: A & T1
//│ Defined class B
//│ Code generation met an error:
//│   multiple base classes found: List(TypeName(A), TypeName(T1))

:e
:js
A{}
//│ // Query 1
//│ res = new A({});
//│ // End of generated code
//│ ╔══[ERROR] Instantiation of an abstract type is forbidden
//│ ║  l.35: 	A{}
//│ ║        	^
//│ ╟── Note that class A is abstract:
//│ ║  l.22: 	class A: T0
//│ ║        	      ^^^^^
//│ ╟── Hint: method Foo is abstract
//│ ║  l.9: 	  method Foo: int
//│ ╙──     	         ^^^^^^^^
//│ res: error
//│ Runtime error:
//│   ReferenceError: A is not defined

// FIXME
:js
b = B{}
B.Foo
//│ b: B
//│ res: (B & t0 & t1) -> 1
//│ Code generation met an error:
//│   unresolved symbol B

