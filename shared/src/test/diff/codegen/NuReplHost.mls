:NewDefs


// * This should crash due to `error`,
// * but the crash is somehow swallowed and we get the result of the previous statement instead!
// * The same happens with any other side effect, like `log(...)`
// * Note: this doesn't happen if the last line is in a spearate diff-test block
:showRepl
:re
fun foo(x) = error
let r = foo(1)
//│ fun foo: anything -> nothing
//│ let r: nothing
//│ ┌ Block at NuReplHost.mls:10
//│ ├─┬ Prelude
//│ │ ├── Code
//│ │ │   function error() {
//│ │ │     throw new Error("an error was thrown");
//│ │ │   }
//│ │ │   let res;
//│ │ │   class TypingUnit {}
//│ │ │   const typing_unit = new TypingUnit;
//│ │ └── Reply
//│ │     undefined
//│ ├─┬ Query 1/2
//│ │ ├── Prelude: <empty>
//│ │ ├── Code:
//│ │ ├──   globalThis.foo = function foo(x) {
//│ │ ├──     return error();
//│ │ ├──   };
//│ │ ├── Intermediate: [Function: foo]
//│ │ └── Reply: [success] [Function: foo]
//│ └─┬ Query 2/2
//│   ├── Prelude: <empty>
//│   ├── Code:
//│   ├──   globalThis.r = foo(1);
//│   └── Reply: [runtime error] Error: an error was thrown
//│ foo
//│ r
//│   Runtime error:
//│     Error: an error was thrown

:re
r
//│ nothing
//│ res
//│     Runtime error:
//│       ReferenceError: r is not defined



