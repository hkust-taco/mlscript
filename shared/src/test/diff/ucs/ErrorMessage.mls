:NewDefs

class Point(x: Int, y: Int)
//│ class Point(x: Int, y: Int)

:e
fun f(p) =
  if p is
    Point(x, y, z) then x + y + z
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ╟── tuple literal of type `{0: ?#x, 1: ?#y}` does not have field '2'
//│ ║  l.3: 	class Point(x: Int, y: Int)
//│ ║       	            ^^^^^^^^^
//│ ╟── but it flows into operator application with expected type `{2: ?a}`
//│ ║  l.8: 	  if p is
//│ ║       	     ^^^^
//│ ║  l.9: 	    Point(x, y, z) then x + y + z
//│ ╙──     	^^^^^^^^^
//│ fun f: Point -> Int

:e
:ge
fun g(xs) =
  if xs is
    head :: _ then head
//│ ╔══[ERROR] type identifier `::` not found
//│ ║  l.25: 	    head :: _ then head
//│ ╙──      	         ^^
//│ ╔══[ERROR] type identifier not found: ::
//│ ║  l.25: 	    head :: _ then head
//│ ╙──      	         ^^
//│ fun g: nothing -> error
//│ Code generation encountered an error:
//│   unresolved symbol ::
