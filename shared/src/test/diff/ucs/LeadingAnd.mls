:NewDefs



class Some[T](value: T)
//│ class Some[T](value: T)



// TODO
fun f(a, b) = if a is
  Some(av)
    and b is Some(bv) then av + bv
//│ ╔══[ERROR] Cannot find operator `and` in the context
//│ ║  l.13: 	    and b is Some(bv) then av + bv
//│ ╙──      	    ^^^
//│ fun f: (anything, anything,) -> error
//│ Code generation encountered an error:
//│   if expression was not desugared

:p
fun f(a, b) = if a is Some(av)
    and b is Some(bv)
    then av + bv
//│ |#fun| |f|(|a|,| |b|)| |#=| |#if| |a| |is| |Some|(|av|)|→|and| |b| |is| |Some|(|bv|)|↵|#then| |av| |+| |bv|←|
//│ Parsed: fun f = (a, b,) => if a is Some (av,) ‹· and (is (b,) (Some (bv,),)) then + (av,) (bv,)›;
//│ fun f: (Some[Int], Some[Int],) -> Int

// TODO
:p
fun f(a, b) = if a is
  Some(av)
    and b is Some(bv)
    then av + bv
//│ |#fun| |f|(|a|,| |b|)| |#=| |#if| |a| |is|→|Some|(|av|)|→|and| |b| |is| |Some|(|bv|)|↵|#then| |av| |+| |bv|←|←|
//│ Parsed: fun f = (a, b,) => if a is ‹Some (av,) ‹· and (is (b,) (Some (bv,),)) then + (av,) (bv,)››;
//│ ╔══[ERROR] Cannot find operator `and` in the context
//│ ║  l.33: 	    and b is Some(bv)
//│ ╙──      	    ^^^
//│ fun f: (anything, anything,) -> error
//│ Code generation encountered an error:
//│   if expression was not desugared



// FIXME (parser)
fun f(a, b) = if a is
  Some(av)
    and b is Some(bv) then av + bv
    
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing

