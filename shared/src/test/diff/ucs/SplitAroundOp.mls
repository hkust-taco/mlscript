:NewDefs

fun f(x, b) =
  if x
    ===
      0 and b then "n0"
      1 and b then "n1"
      2 then "n2"
    ===
      "0" then "s0"
      "1" then "s1"
      "2" then "s2"
  else ":p"  
//│ fun f: (Eql["0" | "1" | "2" | 0 | 1 | 2], Bool) -> (":p" | "n0" | "n1" | "n2" | "s0" | "s1" | "s2")

fun f(x, y, a, b) =
  if x === 0
    and
      y === 0 then "x, y"
      a === 0 then "x, a"
      b === 0 then "x, b"
  else "nah"
//│ fun f: (Eql[0], Eql[0], Eql[0], Eql[0]) -> ("nah" | "x, a" | "x, b" | "x, y")

class A()
class B()
//│ class A()
//│ class B()

fun f(x) =
  if x
    is
      A() then 0
      B() then 1
//│ fun f: (A | B) -> (0 | 1)

:e // FIXME
if x is
  A()
    === 0 then 0
    > 0 then 1
    < 0 then 2
//│ ╔══[ERROR] cannot transform due to an illegal split operator ===
//│ ║  l.40: 	    === 0 then 0
//│ ║        	    ^^^
//│ ╟── the following branch will be discarded
//│ ║  l.40: 	    === 0 then 0
//│ ╙──      	        ^^^^^^^^
//│ ╔══[ERROR] cannot transform due to an illegal split operator >
//│ ║  l.41: 	    > 0 then 1
//│ ║        	    ^
//│ ╟── the following branch will be discarded
//│ ║  l.41: 	    > 0 then 1
//│ ╙──      	      ^^^^^^^^
//│ ╔══[ERROR] cannot transform due to an illegal split operator <
//│ ║  l.42: 	    < 0 then 2
//│ ║        	    ^
//│ ╟── the following branch will be discarded
//│ ║  l.42: 	    < 0 then 2
//│ ╙──      	      ^^^^^^^^
//│ ╔══[ERROR] identifier `x` not found
//│ ║  l.38: 	if x is
//│ ╙──      	   ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.38: 	if x is
//│ ╙──      	   ^
//│ nothing
//│ Code generation encountered an error:
//│   unresolved symbol x
