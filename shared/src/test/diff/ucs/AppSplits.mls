:NewDefs


fun foo(x) = x > 1
//│ fun foo: Num -> Bool

:pe // TODO
:e
if foo of
  0 then "a"
  1 then "b"
//│ ╔══[PARSE ERROR] Unexpected 'then' keyword here
//│ ║  l.10: 	  0 then "a"
//│ ╙──      	    ^^^^
//│ ╔══[PARSE ERROR] Expected 'then'/'else' clause after 'if'; found application instead
//│ ║  l.9: 	if foo of
//│ ║       	   ^^^^^^
//│ ║  l.10: 	  0 then "a"
//│ ║        	^^^^
//│ ╟── Note: 'if' expression starts here:
//│ ║  l.9: 	if foo of
//│ ╙──     	^^
//│ ╔══[ERROR] The case when this is false is not handled: foo(0,)
//│ ║  l.9: 	if foo of
//│ ║       	   ^^^^^^
//│ ║  l.10: 	  0 then "a"
//│ ╙──      	^^^^
//│ error
//│ Code generation encountered an error:
//│   if expression was not desugared

:pe // TODO
:e
if foo of 1,
  0 then "a"
  1 then "b"
//│ ╔══[PARSE ERROR] Unexpected 'then'/'else' clause
//│ ║  l.35: 	  0 then "a"
//│ ║        	  ^^^^^^^^^^
//│ ║  l.36: 	  1 then "b"
//│ ╙──      	^^^^^^^^^^^^
//│ ╔══[PARSE ERROR] Expected 'then'/'else' clause after 'if'; found application instead
//│ ║  l.34: 	if foo of 1,
//│ ║        	   ^^^^^^^^^
//│ ║  l.35: 	  0 then "a"
//│ ║        	^^
//│ ╟── Note: 'if' expression starts here:
//│ ║  l.34: 	if foo of 1,
//│ ╙──      	^^
//│ ╔══[ERROR] The case when this is false is not handled: foo(1, undefined,)
//│ ║  l.34: 	if foo of 1,
//│ ║        	   ^^^^^^^^^
//│ ║  l.35: 	  0 then "a"
//│ ╙──      	^^
//│ error
//│ Code generation encountered an error:
//│   if expression was not desugared

:pe // TODO
:e
if foo
  (0) then "a"
  (1) then "b"
//│ ╔══[PARSE ERROR] Unexpected parenthesis section here
//│ ║  l.63: 	  (1) then "b"
//│ ╙──      	  ^^^
//│ ╔══[ERROR] The case when this is false is not handled: foo(0,)
//│ ║  l.61: 	if foo
//│ ║        	   ^^^
//│ ║  l.62: 	  (0) then "a"
//│ ╙──      	^^^^^
//│ error
//│ Code generation encountered an error:
//│   if expression was not desugared


