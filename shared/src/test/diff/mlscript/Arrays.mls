:ShowRelativeLineNums
:NoJS

class MyArray[A]: { size: int; set: (int, A) -> (); get: int -> A }
//│ Defined class MyArray

dummy = MyArray {
    size = 0;
    set = fun (i, a) -> ();
    get = fun i -> error
  }
//│ dummy: MyArray['A] with {get: anything -> nothing, set: (anything, anything,) -> (), size: 0}

dummy: MyArray[int]
//│ res: MyArray[int] with {get: int -> int, set: (int, int,) -> ()}

def ty1A: MyArray[int]
def ty1B: MyArray[0 | 1]
//│ ty1A: MyArray[int] with {get: int -> int, set: (int, int,) -> ()}
//│ ty1B: MyArray[0 | 1] with {get: int -> (0 | 1), set: (int, 0 | 1,) -> ()}


def ty2A: MyArray['a]
//│ ty2A: MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}

:stats
ty2A = ty2A
//│ MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}
//│   <:  ty2A:
//│ MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}
//│ constrain calls  : 22
//│ annoying  calls  : 20
//│ subtyping calls  : 125

def ty2B: MyArray[MyArray['a]]
//│ ty2B: MyArray[myArray & {MyArray#A = 'a, get: ((int,) & {_1: int}) -> 'a, set: ((int, 'a,) & {_1: int, _2: 'a}) -> (), size: int}] with {get: int -> (MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}), set: (int, MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()},) -> ()}

:stats
ty2B = ty2A
//│ MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}
//│   <:  ty2B:
//│ MyArray[myArray & {MyArray#A = 'a, get: ((int,) & {_1: int}) -> 'a, set: ((int, 'a,) & {_1: int, _2: 'a}) -> (), size: int}] with {get: int -> (MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}), set: (int, MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()},) -> ()}
//│ constrain calls  : 20
//│ annoying  calls  : 20
//│ subtyping calls  : 302


def ty3A: MyArray['a] as 'a
//│ ty3A: 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c .. 'b] with {get: int -> 'b, set: (int, (MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c,) -> ()}) as 'b

:stats
ty3A = ty3A
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c .. 'b] with {get: int -> 'b, set: (int, (MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c,) -> ()}) as 'b
//│   <:  ty3A:
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c .. 'b] with {get: int -> 'b, set: (int, (MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c,) -> ()}) as 'b
//│ constrain calls  : 50
//│ annoying  calls  : 44
//│ subtyping calls  : 793

def ty3B: MyArray[MyArray['a]] as 'a
//│ ty3B: 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, MyArray['f .. 'b] with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c .. (MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}] with {get: int -> ((MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}), set: (int, (MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c,) -> ()}) as 'b

:stats
ty3B = ty3A
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c .. 'b] with {get: int -> 'b, set: (int, (MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c,) -> ()}) as 'b
//│   <:  ty3B:
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, MyArray['f .. 'b] with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c .. (MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}] with {get: int -> ((MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}), set: (int, (MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c,) -> ()}) as 'b
//│ constrain calls  : 142
//│ annoying  calls  : 127
//│ subtyping calls  : 4333

:stats
ty3A = ty3B
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, MyArray['f .. 'b] with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c .. (MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> ()},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}] with {get: int -> ((MyArray[((MyArray[MyArray['i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, 'h with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f) as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'j | ((int, (MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> ((MyArray['d .. 'e] with {get: int -> 'f, set: (int, 'b,) -> ()}) as 'c), set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: 'k},) -> ()}) & 'a as 'f,) -> () as 'k)}), set: (int, (MyArray['d .. 'e] with {get: int -> ((MyArray[MyArray['f as 'i .. 'b] with {get: int -> 'd, set: (int, 'e,) -> ()} .. 'g] with {get: int -> 'c, set: (int, (MyArray['f as 'i .. 'b] as 'h) with {get: int -> 'b, set: (int, 'f,) -> () as 'k},) -> ()}) & 'a as 'f), set: (int, 'b,) -> ()}) as 'c,) -> ()}) as 'b
//│   <:  ty3A:
//│ 'a | (MyArray[(MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c .. 'b] with {get: int -> 'b, set: (int, (MyArray['d .. 'e] with {get: int -> 'c, set: (int, 'b,) -> ()}) & 'a as 'c,) -> ()}) as 'b
//│ constrain calls  : 137
//│ annoying  calls  : 127
//│ subtyping calls  : 4319

def ty4B: MyArray[MyArray[MyArray['a]]] as 'a
//│ ty4B: 'a | (MyArray[(MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> (MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> ('d | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c .. MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}] with {get: int -> (MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}), set: (int, (MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c,) -> ()}) as 'b

:stats
ty4B = ty4B
//│ 'a | (MyArray[(MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> (MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> ('d | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c .. MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}] with {get: int -> (MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}), set: (int, (MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c,) -> ()}) as 'b
//│   <:  ty4B:
//│ 'a | (MyArray[(MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> (MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. 'd | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})] with {get: int -> ('d | (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()})), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c .. MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k), set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}] with {get: int -> (MyArray['l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm) .. (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k] with {get: 'n | (int -> ((MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> 'i as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k) as 'o), set: (int, 'l & ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> ((MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> 'm, set: (int, (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k,) -> ()}) as 'c), set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm),) -> ()}), set: (int, (MyArray['d .. MyArray['e .. 'f] with {get: 'g, set: (int, 'e,) -> ()}] with {get: int -> ((MyArray['e .. 'f] with {get: 'g & (int -> ((MyArray[MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()} .. (MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k] with {get: int -> ((MyArray['i .. 'b] with {get: int -> 'b, set: (int, 'i,) -> ()}) as 'k) as 'o, set: (int, MyArray['e .. 'f] with {get: 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i) as 'h), set: (int, 'b,) -> ()}) as 'm), set: (int, (MyArray[(MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i .. 'b] with {get: int -> 'b, set: (int, (MyArray[MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'd, set: (int, MyArray['e .. 'f] with {get: int -> 'f, set: (int, 'e,) -> ()},) -> ()} .. 'j] with {get: int -> 'c, set: (int, MyArray[MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()} .. 'k] with {get: int -> 'k as 'o, set: (int, MyArray['e .. 'f] with {get: int -> 'i as 'h, set: (int, 'b,) -> ()},) -> ()},) -> ()}) & 'a as 'i,) -> ()}) as 'k,) -> ()}) as 'c,) -> ()}) as 'b
//│ constrain calls  : 116
//│ annoying  calls  : 136
//│ subtyping calls  : 114376



//===//===//===// ERRORS //===//===//===//


:e
:stats
ty1A = ty1B
//│ MyArray[0 | 1] with {get: int -> (0 | 1), set: (int, 0 | 1,) -> ()}
//│   <:  ty1A:
//│ MyArray[int] with {get: int -> int, set: (int, int,) -> ()}
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty1A = ty1B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `int` does not match type `0 | 1`
//│ ║  l.17: 	def ty1A: MyArray[int]
//│ ║        	                  ^^^
//│ ╟── Note: constraint arises from union type:
//│ ║  l.18: 	def ty1B: MyArray[0 | 1]
//│ ╙──      	                  ^^^^^
//│ constrain calls  : 24
//│ annoying  calls  : 29
//│ subtyping calls  : 151

:e
:stats
ty1B = ty1A
//│ MyArray[int] with {get: int -> int, set: (int, int,) -> ()}
//│   <:  ty1B:
//│ MyArray[0 | 1] with {get: int -> (0 | 1), set: (int, 0 | 1,) -> ()}
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty1B = ty1A
//│ ║        	^^^^^^^^^^^
//│ ╟── type `int` does not match type `0 | 1`
//│ ║  l.17: 	def ty1A: MyArray[int]
//│ ║        	                  ^^^
//│ ╟── Note: constraint arises from union type:
//│ ║  l.18: 	def ty1B: MyArray[0 | 1]
//│ ╙──      	                  ^^^^^
//│ constrain calls  : 24
//│ annoying  calls  : 29
//│ subtyping calls  : 156


:e
:stats
ty2A = ty2B
//│ MyArray[myArray & {MyArray#A = 'a, get: ((int,) & {_1: int}) -> 'a, set: ((int, 'a,) & {_1: int, _2: 'a}) -> (), size: int}] with {get: int -> (MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}), set: (int, MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()},) -> ()}
//│   <:  ty2A:
//│ MyArray['a] with {get: int -> 'a, set: (int, 'a,) -> ()}
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `'a` is not an instance of type MyArray
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `'a` is not a record (expected a record with fields: size, set, get)
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from record type:
//│ ║  l.4: 	class MyArray[A]: { size: int; set: (int, A) -> (); get: int -> A }
//│ ║       	                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `'a` does not have field 'MyArray#A'
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ║        	                  ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ╙──      	                  ^^^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	ty2A = ty2B
//│ ║        	^^^^^^^^^^^
//│ ╟── type `MyArray[?a]` is not an instance of type 'a
//│ ║  l.35: 	def ty2B: MyArray[MyArray['a]]
//│ ║        	                  ^^^^^^^^^^^
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.23: 	def ty2A: MyArray['a]
//│ ╙──      	                  ^^
//│ constrain calls  : 29
//│ annoying  calls  : 28
//│ subtyping calls  : 318


