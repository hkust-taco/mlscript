class Left[A]: { value: A }
//│ Defined class Left[+A]

Left{value=1}
//│ res: Left[1]
//│    = Left { value: 1 }

def Left value = Left{ value }
//│ Left: 'value -> Left['value]
//│     = [Function: Left1]

class Right[A]: { value: A }
def Right value = Right{ value }
//│ Defined class Right[+A]
//│ Right: 'value -> Right['value]
//│      = [Function: Right1]

testVal = if true then Left 1 else Right 2
//│ testVal: Right[2] | Left[1]
//│        = Left { value: 1 }

testVal.value
//│ res: 1 | 2
//│    = 1

res = case testVal of
  { Left -> testVal.value
  | Right -> 1
  }
//│ res: 1
//│    = 1

res: 1
//│ res: 1
//│    = 1

case res of { 1 -> "ok" }
//│ res: "ok"
//│    = 'ok'

res = case testVal of
  { Left -> testVal
  | Right -> 1
  }
//│ res: Left[1] | 1
//│    = Left { value: 1 }

