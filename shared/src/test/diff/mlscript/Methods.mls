//TODO: - references between methods (shodowing)
//      - calls
//      - ConstraintSolver.constrain.annoyingImpl missing cases?


class Fooo[A, B]: { x: A; y: B }
    method Fun[C]: (A -> B -> C) -> (A -> B -> C)
//│ Defined class Fooo
//│ Declared Fooo.Fun: ('a -> 'b -> 'c) -> 'a -> 'b -> 'c

class Barr: Fooo[int, bool]
    method Fun f = f
//│ Defined class Barr
//│ Defined Barr.Fun: ('a -> 'b -> 'c) -> 'a -> 'b -> 'c

// Fooo -> PolymorphicType(0,({x: α8', y: α9'} -> ((fooo<> & {x: α6', y: α7'}) & {x: α8', y: α9'})))
// Fooo.Fun -> PolymorphicType(1,((α3' -> (α4' -> α10'')) -> (α3' -> (α4' -> α10''))))
// Barr -> PolymorphicType(0,({x: α2', y: α3'} -> ((barr<fooo> & Fooo[int,bool]) & {x: α2', y: α3'})))
// Barr.Fun -> PolymorphicType(1,(α4'' -> [α4'']))

// TODO impl
:e
Fooo.Fun
Barr.Fun
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$1(Typer.scala:625)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:673)
//│ 	at: mlscript.Typer.typeStatement(Typer.scala:481)
//│ 	at: mlscript.DiffTests.$anonfun$new$20(DiffTests.scala:286)
//│ 	at: mlscript.DiffTests.$anonfun$new$20$adapted(DiffTests.scala:263)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)
//│ 	at: mlscript.DiffTests.rec$1(DiffTests.scala:263)
//│ 	at: mlscript.DiffTests.$anonfun$new$2(DiffTests.scala:327)

f = Fooo{x=1;y=2}
//│ f: fooo & {y: 2, x: 1}

// TODO impl
:e
f.Foo
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$11(Typer.scala:628)
//│ 	at: scala.collection.mutable.HashMap.getOrElse(HashMap.scala:436)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$1(Typer.scala:628)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:673)
//│ 	at: mlscript.Typer.typeStatement(Typer.scala:481)
//│ 	at: mlscript.DiffTests.$anonfun$new$20(DiffTests.scala:286)
//│ 	at: mlscript.DiffTests.$anonfun$new$20$adapted(DiffTests.scala:263)
//│ 	at: scala.collection.immutable.List.foreach(List.scala:333)



class Fo[A, B]: { x: A; y: B }
    method Left = { x = this.x; y = this.y } : { x: A }
//│ Defined class Fo
//│ Defined Fo.Left: {x: nothing}

def this = fun x -> fun y -> add x y
this 42 42
//│ this: int -> int -> int
//│ res: int


class Simple[A]
    method Get: A
//│ Defined class Simple
//│ Declared Simple.Get: nothing



