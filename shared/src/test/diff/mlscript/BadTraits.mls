class A
class B
//│ Defined class A
//│ Defined class B

// Okay to define, but impossible to instantiate:
trait T: A & B
//│ Defined trait T

:e
T {}
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.11: 	T {}
//│ ║        	^^^^
//│ ╟── expression of type `anything` does not match type `A`
//│ ║  l.11: 	T {}
//│ ║        	  ^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.7: 	trait T: A & B
//│ ╙──     	         ^
//│ res: error | t
//│ Runtime error:
//│   ReferenceError: T is not defined

def a = A{}
//│ a: A
//│  = A {}

:e
T a
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.30: 	T a
//│ ║        	^^^
//│ ╟── expression of type `A` does not match type `B`
//│ ║  l.25: 	def a = A{}
//│ ║        	        ^^^
//│ ╟── but it flows into reference with expected type `B`
//│ ║  l.30: 	T a
//│ ║        	  ^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.7: 	trait T: A & B
//│ ╙──     	             ^
//│ res: A & t | error
//│ Runtime error:
//│   ReferenceError: T is not defined

:e
:js
T A
//│ // Query 1
//│ res = T((x) => new A(x));
//│ // End of generated code
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.49: 	T A
//│ ║        	^^^
//│ ╟── expression of type `anything -> A` does not match type `A`
//│ ║  l.49: 	T A
//│ ║        	  ^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.7: 	trait T: A & B
//│ ╙──     	         ^
//│ res: anything -> A & t | error
//│ Runtime error:
//│   ReferenceError: T is not defined

:e
T (B {})
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.67: 	T (B {})
//│ ║        	^^^^^^^
//│ ╟── expression of type `B` does not match type `A`
//│ ║  l.67: 	T (B {})
//│ ║        	   ^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.7: 	trait T: A & B
//│ ╙──     	         ^
//│ res: B & t | error
//│ Runtime error:
//│   ReferenceError: T is not defined

:re
def t = T error
//│ t: nothing
//│ Runtime error:
//│   ReferenceError: T is not defined

:re
t: nothing
//│ res: nothing
//│ Runtime error:
//│   ReferenceError: t is not defined

type Als = A & B
//│ Defined type alias Als

:re
t: Als
//│ res: nothing
//│ Runtime error:
//│   ReferenceError: t is not defined


:e
class D0: T
//│ ╔══[ERROR] class D0 cannot inherit from class B as it already inherits from class A
//│ ║  l.104: 	class D0: T
//│ ╙──       	      ^^^^^
//│ Code generation met an error:
//│   Class T is not defined.

:e
class D1: B & T
//│ ╔══[ERROR] class D1 cannot inherit from class A as it already inherits from class B
//│ ║  l.112: 	class D1: B & T
//│ ╙──       	      ^^^^^^^^^
//│ Code generation met an error:
//│   Cannot have two base classes: B, T


trait S: { x: int }
//│ Defined trait S

s = S{ x = 1 }
//│ s: {x: 1} & s
//│ Runtime error:
//│   ReferenceError: S is not defined

t = s: s
//│ t: s
//│ Runtime error:
//│   ReferenceError: s is not defined

:e
t.x
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.134: 	t.x
//│ ║         	^^^
//│ ╟── expression of type `s` does not have field 'x'
//│ ║  l.128: 	t = s: s
//│ ║         	       ^
//│ ╟── but it flows into reference with expected type `{x: ?a}`
//│ ║  l.134: 	t.x
//│ ╙──       	^
//│ res: error
//│ Runtime error:
//│   ReferenceError: t1 is not defined

t = s: S
//│ t: {x: int} & s
//│ Runtime error:
//│   ReferenceError: s is not defined

t.x
//│ res: int
//│ Runtime error:
//│   ReferenceError: t2 is not defined

