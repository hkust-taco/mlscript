:AllowTypeErrors


class Box[T]: { inner: T }
  method Get = this.inner
  method Get2 = this.x
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.6: 	  method Get2 = this.x
//│ ║       	                ^^^^^^
//│ ╟── reference of type `Box[T] & this` does not have field 'x'
//│ ║  l.6: 	  method Get2 = this.x
//│ ╙──     	                ^^^^
//│ Defined class Box[+T]
//│ Defined Box.Get: Box['T] -> 'T
//│ Defined Box.Get2: Box[?] -> error


class Box2[T]: { inner: T }
  method Test = this.inner + 1
//│ ╔══[ERROR] Type mismatch in operator application:
//│ ║  l.19: 	  method Test = this.inner + 1
//│ ║        	                ^^^^^^^^^^^^
//│ ╟── field selection of type `T` is not an instance of type `int`
//│ ║  l.19: 	  method Test = this.inner + 1
//│ ║        	                ^^^^^^^^^^
//│ ╟── Note: class type parameter T is defined at:
//│ ║  l.18: 	class Box2[T]: { inner: T }
//│ ╙──      	           ^
//│ Defined class Box2[+T]
//│ Defined Box2.Test: Box2[?] -> (int | error)
