

// ———


trait S0[A]
  method Foo0: A -> A
trait T0[B]: S0[B]
//│ Defined trait S0[=A]
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

:e
class A0: S0[int] & T0[string]
(A0{}).Foo0
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ║        	      ^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `int` is not an instance of `string`
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ║        	             ^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ╙──      	                       ^^^^^^
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ║        	      ^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `string` is not an instance of `int`
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ║        	                       ^^^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ╙──      	             ^^^
//│ Defined class A0
//│ ╔══[ERROR] Instantiation of an abstract type is forbidden
//│ ║  l.24: 	(A0{}).Foo0
//│ ║        	 ^^
//│ ╟── Note that class A0 is abstract:
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ║        	      ^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Hint: method Foo0 is abstract
//│ ║  l.23: 	class A0: S0[int] & T0[string]
//│ ╙──      	      ^^^^^^^^^^^^^^^^^^^^^^^^
//│ res: 'A -> 'A
//│ Code generation encountered an error:
//│   undeclared type name S0 when resolving base classes

:e
class A0_2: S0[int] & T0[string]
  method Foo0 x = 1
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ║        	      ^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `int` is not an instance of `string`
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ║        	               ^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ╙──      	                         ^^^^^^
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ║        	      ^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `string` is not an instance of `int`
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ║        	                         ^^^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ╙──      	               ^^^
//│ ╔══[ERROR] Type mismatch in method definition:
//│ ║  l.59: 	  method Foo0 x = 1
//│ ║        	         ^^^^^^^^^^
//│ ╟── integer literal of type `1` is not an instance of type `string`
//│ ║  l.59: 	  method Foo0 x = 1
//│ ║        	                  ^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.58: 	class A0_2: S0[int] & T0[string]
//│ ╙──      	                         ^^^^^^
//│ Defined class A0_2
//│ Defined A0_2.Foo0: A0_2 -> anything -> 1
//│ Code generation encountered an error:
//│   undeclared type name S0 when resolving base classes

(A0_2{}).Foo0
//│ res: ('A & (int | string)) -> 'A
//│ Runtime error:
//│   ReferenceError: A0_2 is not defined


// ———


trait R1[A]
  method Foo1: A -> A
//│ Defined trait R1[=A]
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

trait S1: R1[int]
  method Foo1 x = 1
trait T1: R1[string]
  method Foo1 x = "a"
//│ Defined trait S1
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

:e
class A1: S1 & T1
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.134: 	class A1: S1 & T1
//│ ║         	      ^^^^^^^^^^^
//│ ╟── type `int` is not an instance of `string`
//│ ║  l.116: 	trait S1: R1[int]
//│ ║         	             ^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.118: 	trait T1: R1[string]
//│ ╙──       	             ^^^^^^
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.134: 	class A1: S1 & T1
//│ ║         	      ^^^^^^^^^^^
//│ ╟── type `string` is not an instance of `int`
//│ ║  l.118: 	trait T1: R1[string]
//│ ║         	             ^^^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.116: 	trait S1: R1[int]
//│ ╙──       	             ^^^
//│ ╔══[ERROR] An overriding method definition must be given when inheriting from multiple method definitions
//│ ║  l.134: 	class A1: S1 & T1
//│ ║         	      ^^
//│ ╟── Definitions of method Foo1 inherited from:
//│ ╟── • S1
//│ ║  l.117: 	  method Foo1 x = 1
//│ ║         	         ^^^^^^^^^^
//│ ╟── • T1
//│ ║  l.119: 	  method Foo1 x = "a"
//│ ╙──       	         ^^^^^^^^^^^^
//│ Defined class A1
//│ Code generation encountered an error:
//│   undeclared type name S1 when resolving base classes

a1 = A1{}
//│ a1: A1
//│ Runtime error:
//│   ReferenceError: A1 is not defined

a1.Foo1
//│ res: ('A & (int | string)) -> 'A
//│ Runtime error:
//│   ReferenceError: a1 is not defined

a1: S1
a1: R1[int]
a1: R1[string]
a1: R1['_]
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

:ns
a1: R1['_]
//│ res: R1['_]
//│   where
//│     '_ <: int | string
//│ Runtime error:
//│   ReferenceError: a1 is not defined


:e
:js
class A1_2: S1 & T1
  method Foo1 = error
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.204: 	class A1_2: S1 & T1
//│ ║         	      ^^^^^^^^^^^^^
//│ ╟── type `int` is not an instance of `string`
//│ ║  l.116: 	trait S1: R1[int]
//│ ║         	             ^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.118: 	trait T1: R1[string]
//│ ╙──       	             ^^^^^^
//│ ╔══[ERROR] Type mismatch in type definition:
//│ ║  l.204: 	class A1_2: S1 & T1
//│ ║         	      ^^^^^^^^^^^^^
//│ ╟── type `string` is not an instance of `int`
//│ ║  l.118: 	trait T1: R1[string]
//│ ║         	             ^^^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.116: 	trait S1: R1[int]
//│ ╙──       	             ^^^
//│ Defined class A1_2
//│ Defined A1_2.Foo1: A1_2 -> nothing
//│ Code generation encountered an error:
//│   undeclared type name S1 when resolving base classes

:re
(A1_2{}).Foo1
//│ res: ('A & (int | string)) -> 'A
//│ Runtime error:
//│   ReferenceError: A1_2 is not defined


f = 0
//│ f: 0
//│  = 0

f' = 1
//│ f': 1
//│   = 1

f'
//│ res: 1
//│    = 1



class C0[A]: S0[A]
  method Foo0 = id
//│ Defined class C0[=A]
//│ Defined C0.Foo0: C0['A] -> 'a -> 'a
//│ Code generation encountered an error:
//│   undeclared type name S0 when resolving base classes

def s0: S0['a] -> S0['a]
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

s0 (C0{})
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

def s0: S0[?] -> S0[?]
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)

:e
s0 (C0{})
//│ /!!!\ Uncaught error: java.lang.IllegalArgumentException: requirement failed
//│ 	at: scala.Predef$.require(Predef.scala:324)
//│ 	at: mlscript.TypeDefs.clsNameToNomTag(TypeDefs.scala:122)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$mkTag$1(TyperHelpers.scala:1093)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.mkTag$(TyperHelpers.scala:1091)
//│ 	at: mlscript.TyperDatatypes$TypeRef.mkTag(TyperDatatypes.scala:363)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:707)
//│ 	at: mlscript.NormalForms$DNF$.mk(NormalForms.scala:698)
//│ 	at: mlscript.TypeSimplifier.$anonfun$normalizeTypes_$bang$106(TypeSimplifier.scala:464)


