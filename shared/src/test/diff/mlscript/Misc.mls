:NoJS


rec def x = {u = x}
//│ x: 'x
//│   where
//│     'x :> {u: 'x}

:ns
{u = x; v = x}
//│ res: {u: forall 'x. 'x, v: forall 'x. 'x}
//│   where
//│     'x := {u: 'x}

{u = x; v = x}
//│ res: {u: forall 'x. 'x, v: forall 'x. 'x}
//│   where
//│     'x :> {u: 'x}




class C[A]: {x: A}
  method X = this.x
//│ Defined class C[+A]
//│ Defined C.X: C['A] -> 'A

c = C{x = 1}
//│ c: C[1]

def mkC() = C{x = 1}
//│ mkC: () -> C[1]

def arg = if true then c else 0
//│ arg: 0 | C[1]

def arg = if true then mkC() else 0
//│ arg: 0 | C[1]


def arg = if true then C{x = 42} else 0
//│ arg: 0 | C[42]

def arg = if true then c else 0
//│ arg: 0 | C[1]

:ns
def arg = if true then C{x = 42} else C{x = 1}
//│ arg: forall 'x 'a 'x0 'A 'A0. 'a
//│   where
//│     'a :> #C & {x: 'x0, C#A = 'A} | #C & {x: 'x, C#A = 'A0}
//│     'x :> 1
//│        <: 'A0
//│     'A0 :> 1
//│     'x0 :> 42
//│         <: 'A
//│     'A :> 42

:ns
arg
//│ res: forall 'x 'a 'x0 'A 'A0. 'a
//│   where
//│     'a :> #C & {x: 'x0, C#A = 'A} | #C & {x: 'x, C#A = 'A0}
//│     'x :> 1
//│        <: 'A0
//│     'A0 :> 1
//│     'x0 :> 42
//│         <: 'A
//│     'A :> 42

arg
//│ res: C[1 | 42]

C.X
//│ res: C['A] -> 'A

:ns
C.X
//│ res: 'this -> 'x
//│   where
//│     'x :> 'A
//│     'this <: C['A]

res arg
//│ res: 1 | 42

arg.X
//│ res: 1 | 42

:e
arg: C[nothing]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.91: 	arg: C[nothing]
//│ ║        	^^^
//│ ╟── integer literal of type `42` does not match type `nothing`
//│ ║  l.48: 	def arg = if true then C{x = 42} else C{x = 1}
//│ ╙──      	                             ^^
//│ res: C[nothing]


test x = case x of { C -> x.X }
//│ test: C['a] -> 'a

test x = case x of { C -> x.X | int -> x }
//│ test: (C['a] | int & 'a) -> 'a


