
def t1 : ('a, ...int) -> 'a
//│ t1: ('a, ...int) -> 'a
//│   = <missing implementation>

def t2 : (int, ...bool)
//│ t2: (int, ...bool)
//│   = <missing implementation>

:e
def t3 : (int, ...bool, mut int)
//│ ╔══[ERROR] Mutable splice field
//│ ║  l.11: 	def t3 : (int, ...bool, mut int)
//│ ╙──      	         ^^^^^^^^^^^^^^^^^^^^^^^
//│ t3: (int, ...bool, int)
//│   = <missing implementation>


:d
def t1 (x, ...y) = x
//│ 1. Typing term (((x, ...y),) => x)
//│ | 1. Typing pattern ((x, ...y),)
//│ | | 1. Typing pattern (x, ...y)
//│ | | | 1. Typing pattern x
//│ | | | 1. : α0'
//│ | | | 1. Typing pattern y
//│ | | | 1. : α1'
//│ | | 1. : SpliceType(List(Right(α0'), Left(α1')))
//│ | 1. : (None..SpliceType(List(Right(α0'), Left(α1'))),)
//│ | 1. Typing term x
//│ | 1. : [α0']
//│ 1. : ((None..SpliceType(List(Right(α0'), Left(α1'))),) -> [α0'])
//│ Typed as: ((None..SpliceType(List(Right(α0'), Left(α1'))),) -> [α0'])
//│  where: 
//│ Typed as: ((None..SpliceType(List(Right(['a7']), Left(Int))),) -> ['a7'])
//│  where: 
//│ ('a, ...anything) -> 'a
//│   <:  t1:
//│ ('a, ...int) -> 'a
//│ /!!!\ Uncaught error: scala.MatchError: SpliceType(List(Right(α0'), Left(α1'))) (of class mlscript.TyperDatatypes$SpliceType)
//│ 	at: mlscript.ConstraintSolver.freshen$1(ConstraintSolver.scala:580)
//│ 	at: mlscript.ConstraintSolver.$anonfun$freshenAbove$13(ConstraintSolver.scala:623)
//│ 	at: mlscript.TyperDatatypes$FieldType.update(TyperDatatypes.scala:279)
//│ 	at: mlscript.ConstraintSolver.$anonfun$freshenAbove$11(ConstraintSolver.scala:623)
//│ 	at: mlscript.utils.package$PairIterableOps$.$anonfun$mapValuesIter$1(package.scala:58)
//│ 	at: scala.collection.Iterator$$anon$9.next(Iterator.scala:575)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.IterableOnceOps.toList(IterableOnce.scala:1251)
//│ 	at: scala.collection.IterableOnceOps.toList$(IterableOnce.scala:1251)
//│ 	at: scala.collection.AbstractIterator.toList(Iterator.scala:1288)

errt = (1, ...2, 3)
//│ errt: (1, ...2, 3)
//│ Code generation crashed:
//│   scala.MatchError: (1, ...2, 3) (of class mlscript.Splc)

:e
wrerr = (1, ...true, mut 3)
//│ ╔══[ERROR] mutble splice not supported
//│ ║  l.58: 	wrerr = (1, ...true, mut 3)
//│ ╙──      	        ^^^^^^^^^^^^^^^^^^^
//│ wrerr: (1, ...true, error)
//│ Code generation crashed:
//│   scala.MatchError: (1, ...true, mut 3) (of class mlscript.Splc)
