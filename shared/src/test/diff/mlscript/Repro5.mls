:NoProvs


// // def eval1_eta k e = eval1_stub k e
// def eval1_eta k e = (fun f -> f k e) eval1_stub

// if true then eval1_stub else error

:ns
rec def f x = f
//│ f: 'f
//│   where
//│     'f :> 'a -> 'f
//│  = [Function: f]

f
//│ res: 'f
//│   where
//│     'f :> anything -> 'f
//│    = [Function: f]

:ns
g y = f y
//│ g: 'a -> 'b
//│   where
//│     'b :> 'c -> 'f
//│     'f :> 'c -> 'f
//│        <: 'b & 'a -> 'b
//│     'a <: 'c
//│  = [Function: g]

// :ds
// :s
g
//│ res: 'f
//│   where
//│     'f :> anything -> 'f
//│    = [Function: g]


:ns
h y = (f y, y)
//│ h: 'a -> ('b, 'a,)
//│   where
//│     'b :> 'c -> 'f
//│     'f :> 'c -> 'f
//│        <: 'b & 'a -> 'b
//│     'a <: 'c
//│  = [Function: h]

h
//│ res: 'a -> ('f, 'a,)
//│   where
//│     'f :> anything -> 'f
//│    = [Function: h]



// :ds
def f x y z = if x then y else z
//│ f: bool -> 'a -> 'a -> 'a
//│  = [Function: f1]

