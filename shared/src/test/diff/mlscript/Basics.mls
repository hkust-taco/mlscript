
x = 1
//│ x: 1
//│  = 1

1
//│ res: 1
//│    = 1

1;
2
//│ res: 1
//│    = 1
//│ res: 2
//│    = 2

x = 1;
2
//│ x: 1
//│  = 1
//│ res: 2
//│    = 2

x = 1;;
2
//│ x: 1
//│  = 1
//│ res: 2
//│    = 2

x = 1
y = 2
//│ x: 1
//│  = 1
//│ y: 2
//│  = 2

1
2
3
//│ res: 1
//│    = 1
//│ res: 2
//│    = 2
//│ res: 3
//│    = 3

1
x = add x 1
//│ res: 1
//│    = 1
//│ x: int
//│  = 2

x = 1
x
y = 2
y
z = x + y
//│ x: 1
//│  = 1
//│ res: 1
//│    = 1
//│ y: 2
//│  = 2
//│ res: 2
//│    = 2
//│ z: int
//│  = 3

:e
1
 2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.72: 	1
//│ ║        	^
//│ ║  l.73: 	 2
//│ ║        	^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.72: 	1
//│ ╙──      	^
//│ res: error
//│ Runtime error:
//│   TypeError: 1 is not a function

def f x y z = add x y 
//│ f: int -> int -> anything -> int
//│  = [Function: f]


:e
:ge
def f (x y z) = add x y
//│ ╔══[ERROR] Unsupported pattern shape:
//│ ║  l.93: 	def f (x y z) = add x y
//│ ╙──      	       ^^^^^
//│ f: error -> int
//│ Code generation encountered an error:
//│   term App(App(Var(x), Tup(_: Var(y))), Tup(_: Var(z))) is not a valid pattern

f 1
//│ res: int
//│    = [Function (anonymous)]


{a = 0; b = 1}
//│ res: {a: 0, b: 1}
//│    = { a: 0, b: 1 }

{a = 0, b = 1}
//│ res: {a: 0, b: 1}
//│    = { a: 0, b: 1 }

:pe
{a: 0, b: 1}
//│ /!\ Parse error: Expected "}":1:3, found ": 0, b: 1}" at l.115:3: {a: 0, b: 1}

