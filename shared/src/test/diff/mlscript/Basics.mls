
def x = 1
//│ x: 1
//│  = [Function: x]

1
//│ res: 1
//│    = 1

1;
2
//│ res: 1
//│    = 1
//│ res: 2
//│    = 2

def x = 1;
2
//│ x: 1
//│  = [Function: x1]
//│ res: 2
//│    = 2

def x = 1;;
2
//│ x: 1
//│  = [Function: x2]
//│ res: 2
//│    = 2

def x = 1
def y = 2
//│ x: 1
//│  = [Function: x3]
//│ y: 2
//│  = [Function: y]

1
2
3
//│ res: 1
//│    = 1
//│ res: 2
//│    = 2
//│ res: 3
//│    = 3

1
def x = add x 1
//│ res: 1
//│    = 1
//│ x: int
//│  = [Function: x4]

def x = 1
x
def y = 2
y
def z = x + y
//│ x: 1
//│  = [Function: x5]
//│ res: 1
//│    = 1
//│ y: 2
//│  = [Function: y1]
//│ res: 2
//│    = 2
//│ z: int
//│  = [Function: z]

:e
1
 2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.72: 	1
//│ ║        	^
//│ ║  l.73: 	 2
//│ ║        	^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.72: 	1
//│ ╙──      	^
//│ res: error
//│ Runtime error:
//│   TypeError: 1 is not a function

def f x y z = add x y 
//│ f: int -> int -> anything -> int
//│  = [Function: f]


:e
:ge
def f (x y z) = add x y
//│ ╔══[ERROR] Unsupported pattern shape:
//│ ║  l.93: 	def f (x y z) = add x y
//│ ╙──      	       ^^^^^
//│ f: error -> int
//│ Code generation encountered an error:
//│   term App(App(Var(x), Tup(_: Var(y))), Tup(_: Var(z))) is not a valid pattern

f 1
//│ res: int
//│    = [Function (anonymous)]
