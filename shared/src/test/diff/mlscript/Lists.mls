
class Nil: {}
class Cons[A]: { head: A; tail: List[A] }
type List[A] = Nil | Cons[A]
//│ Defined class Nil
//│ Defined class Cons
//│ Defined type List

def originalCons = Cons
//│ originalCons: {head: 'a, tail: List['a]} -> cons & {head: 'a, tail: List['a]}

def Nil = Nil {}
//│ Nil: nil

def Cons head tail = Cons { head; tail }
//│ Cons: 'a -> List['a] -> cons & {head: 'a, tail: List['a]}


Cons 2
//│ res: List['a] -> cons & {head: 'a | 2, tail: List['a | 2]}

Cons 2 Nil
//│ res: cons & {head: 2, tail: List[2]}

Cons 1 res
//│ res: cons & {head: 2 | 1, tail: List[2 | 1]}

res.tail
//│ res: List[2 | 1]

Cons 1 (Cons 2 Nil)
//│ res: cons & {head: 2 | 1, tail: List[2 | 1]}

res.tail
//│ res: List[2 | 1]

:e
res.tail
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.38: 	res.tail
//│ ║        	^^^
//│ ╟── expression of type `nil` does not have field 'tail'
//│ ║  l.4: 	type List[A] = Nil | Cons[A]
//│ ║       	               ^^^
//│ ╟── but it flows into reference with expected type `{tail: ?a}`
//│ ║  l.38: 	res.tail
//│ ╙──      	^^^
//│ res: List[2 | 1] | error

:e // Q: why the duplicated error?
res.tail.head
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.51: 	res.tail.head
//│ ║        	^^^
//│ ╟── expression of type `nil` does not have field 'tail'
//│ ║  l.4: 	type List[A] = Nil | Cons[A]
//│ ║       	               ^^^
//│ ╟── but it flows into reference with expected type `{tail: ?a}`
//│ ║  l.51: 	res.tail.head
//│ ╙──      	^^^
//│ ╔══[ERROR] Type mismatch in field selection:
//│ ║  l.51: 	res.tail.head
//│ ║        	^^^
//│ ╟── expression of type `nil` does not have field 'head'
//│ ║  l.4: 	type List[A] = Nil | Cons[A]
//│ ║       	               ^^^
//│ ╟── but it flows into field selection with expected type `{head: ?a}`
//│ ║  l.51: 	res.tail.head
//│ ╙──      	^^^
//│ res: 1 | 2 | error



// More precise Cons?
def Cons head tail = originalCons { head; tail } with { head; tail }
//│ Cons: 'a -> 'b & List['c] -> (cons & {head: 'c | 'a, tail: List['c | 'a]} with {head: 'a} with {tail: 'b})


Cons 2
//│ res: 'a & List['b] -> (cons & {head: 'b | 2, tail: List['b | 2]} with {head: 2} with {tail: 'a})

Cons 2 Nil
//│ res: cons & {head: 2, tail: List[2]} with {head: 2} with {tail: nil}

:d
res.head
//│ 0. Typing term res.head
//│  0. Typing term res
//│  0. : [α72]
//│  CONSTRAIN [[α72]] <! {head: α0}
//│    where α66 :> [2<int>], α67 :> [[α71]] <: [List[α68]], α68 :> [α66], α69 :> (cons<> & {head: α68, tail: List[α68]}), α71 :> nil<> <: [[List[α68]]], α72 :> α69 w/ {head: [α66]} w/ {tail: [α67]}
//│  C [[α72]] <! {head: α0}
//│   C [α72] <! {head: α0}
//│    C α72 <! {head: α0}
//│     C α69 w/ {head: [α66]} w/ {tail: [α67]} <! {head: α0}
//│      A  LhsTop  %  List(α69 w/ {head: [α66]} w/ {tail: [α67]})  <!  List({head: α0})  %  RhsBot
//│       A  LhsTop  %  List(α69 w/ {head: [α66]} w/ {tail: [α67]})  <!  List()  %  RhsField(head,α0)
//│        A  {} & α69 w/ {head: [α66]} w/ {tail: [α67]}  %  List()  <!  List()  %  RhsField(head,α0)
//│         List() List(⊤ w/ {}, α69 w/ {head: [α66]} w/ {tail: [α67]})
//│         C ⊥ <! α0
//│ 0. : α0
//│ Typed as: α0
//│  where: 
//│ Compact type before simplification: CompactTypeScheme(‹α0›,TreeMap())
//│ [occ] LinkedHashMap((true,α0) -> LinkedHashSet(α0))
//│ [rec] TreeSet()
//│ [!] α0
//│ [sub] α0 -> None
//│ Compact type after simplification: CompactTypeScheme(‹›,Map())
//│ res: nothing

:e
Cons 1 res
//│ res: cons & {head: 1, tail: List[1]} with {head: 1} with {tail: nothing}

Cons 1 (Cons 2 Nil)
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:130)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:257)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)

{ a = res.head; b = res.tail.head; c = res.tail.tail }
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$WithType.toString(TyperDatatypes.scala:104)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.ConstraintSolver$LhsRefined$1.$anonfun$toString$2(ConstraintSolver.scala:71)
//│ 	at: scala.collection.immutable.List.map(List.scala:246)
//│ 	at: mlscript.ConstraintSolver$LhsRefined$1.toString(ConstraintSolver.scala:71)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)


Cons 2 Nil
//│ res: cons & {head: 2, tail: List[2]} with {head: 2} with {tail: nil}

Cons 1 (id res)
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:130)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:257)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)

{ a = res.head; b = res.tail.head; c = res.tail.tail }
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$49(ConstraintSolver.scala:244)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$49$adapted(ConstraintSolver.scala:244)
//│ 	at: scala.collection.StrictOptimizedIterableOps.$anonfun$partition$1(StrictOptimizedIterableOps.scala:33)
//│ 	at: scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
//│ 	at: scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
//│ 	at: scala.collection.AbstractIterator.foreach(Iterator.scala:1288)
//│ 	at: scala.collection.immutable.List.partition(List.scala:588)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:244)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)


def Cons head = originalCons { head=0; tail=Nil } with { head }
//│ Cons: 'a -> (cons & {head: 0, tail: List[0]} with {head: 'a})

Cons 1
//│ res: cons & {head: 0, tail: List[0]} with {head: 1}

res.head
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:136)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:158)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:257)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)

def c = Cons 1
//│ c: cons & {head: 0, tail: List[0]} with {head: 1}

c.head
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:136)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:158)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:257)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)

