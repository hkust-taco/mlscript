:NoJS

class A
  method Foo: int -> this
//│ Defined class A
//│ Declared A.Foo: (A & 'this) -> int -> (A & 'this)

class B: A
  method Foo n = this
//│ Defined class B
//│ Defined B.Foo: (B & 'this) -> anything -> (B & 'this)

a = B{}
//│ a: B

a.Foo 1 // : B
//│ res: B

def b: A
b = a
b.Foo 1 // : A
//│ b: A
//│ B
//│   <:  b:
//│ A
//│ res: A

class Box[T]: { inner: T }
  method Get = this.inner // Used to be Box.Get: Box['T] -> 'T
//│ Defined class Box
//│ Defined Box.Get: Box['T] -> 'T

class Base
  method Foo: this
  method Foo = this
//│ Defined class Base
//│ Declared Base.Foo: (Base & 'this) -> (Base & 'this)
//│ Defined Base.Foo: (Base & 'this) -> (Base & 'this)

class Derived: Base
//│ Defined class Derived

Derived.Foo
//│ res: Derived -> nothing
