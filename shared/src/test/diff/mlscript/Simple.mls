
def a = 1
def b = 2
def c = 3
//│ a: 1
//│ b: 2
//│ c: 3

if true then if true then a else b else a
//│ res: 1 | 2

if true then if true then id a else id b else a
//│ res: 1 | 2

class Foo[A]: { field: A }
class Bar: {}
//│ Defined class Foo
//│ Defined class Bar

def foo = Foo { field = id 1 }
//│ foo: Foo['A .. 1 | 'A] with {field: 1}

(if true then foo else { field = 2 }).field
//│ res: 1 | 2

Foo { field = id 1 }
//│ res: Foo['A .. 1 | 'A] with {field: 1}

def test x = case x of { Bar -> 1 | Foo -> 2 }
//│ test: (Bar | Foo[?]) -> (1 | 2)

test foo
//│ res: 1 | 2

def test x = case x of { Bar -> 1 | Foo -> x.field }
//│ test: (Bar | (Foo[?] with {field: 'a})) -> (1 | 'a)

test foo
//│ res: 1

test (Foo { field = 2 })
//│ res: 1 | 2

def test x = case x of { Foo -> x.field | _ -> 1 }
//│ test: ((Foo[?] with {field: 'a}) | ~Foo[?]) -> (1 | 'a)


def f x = x.u
//│ f: {u: 'a} -> 'a

f { u = 1 }
//│ res: 1

f { u = 1; v = 2 }
//│ res: 1

f (if true then { u = 1; v = 2 } else { u = 1 })
//│ res: 1

if true then { u = 1; v = 2 } else { u = 2 }
//│ res: {u: 1 | 2}

