:NoProvs // TODO rm


def intToString: int -> string
def intToString x = toString x
def done x = case x of {}
//│ intToString: int -> string
//│            = <missing implementation>
//│ anything -> string
//│   <:  intToString:
//│ int -> string
//│            = [Function: intToString]
//│ done: nothing -> nothing
//│     = [Function: done]



class Lit: { val: int }
class Add[E]: { lhs: E; rhs: E }
def lit val = Lit { val }
def add lhs rhs = Add { lhs; rhs }
//│ Defined class Lit
//│ Defined class Add
//│ lit: (int & 'val) -> (Lit with {val: 'val})
//│    = [Function: lit]
//│ add: ('lhs & 'E) -> ('E & 'rhs) -> (Add['E] with {lhs: 'lhs, rhs: 'rhs})
//│    = [Function: add]



rec def eval1_stub k e = case e of {
  | Add -> eval1_stub k e.lhs
  | _ -> k e
  }
//│ eval1_stub: ('a -> 'b) -> ((Add[?]\rhs with {lhs: 'c}) | 'a & ~add as 'c) -> 'b
//│           = [Function: eval1_stub]

rec def eval1_stub k e = case e of {
  | Add -> eval1_stub k e.lhs + eval1_stub k e.rhs
  | _ -> k e
  }
//│ eval1_stub: ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | 'a & ~add as 'b) -> int
//│           = [Function: eval1_stub1]

:ns
rec def eval1_stub e = case e of {
  | Lit -> 1
  | Add -> eval1_stub e.lhs
  | _ -> 0
  }
//│ eval1_stub: (lit | (add & {lhs: 'a} | ~add) & ~lit as 'a) -> (1 | 'b | 0 as 'b)
//│           = [Function: eval1_stub2]

eval1_stub
//│ res: ((Add[?]\rhs with {lhs: 'a}) | Lit | ~add & ~lit as 'a) -> (0 | 1)
//│    = [Function: eval1_stub2]

// def eval1: ('b -> int) -> Expr['b] -> int
:stats
rec def eval1 k e = case e of {
  | Lit -> e.val
  | Add -> eval1 k e.lhs + eval1 k e.rhs
  | _ -> k e
  }
//│ eval1: ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | 'a & ~add & ~lit as 'b) -> int
//│      = [Function: eval1]
//│ constrain calls  : 44
//│ annoying  calls  : 0
//│ subtyping calls  : 399

:ns
eval1
//│ res: ('a -> ('b & int)) -> (lit & {val: 'd & int} | (add & {rhs: 'c} & {lhs: 'c} | 'a & ~add) & ~lit as 'c) -> ('d | int | 'b)
//│    = [Function: eval1]

:re
error: ~Add[?]
//│ res: ~Add[?]
//│ Runtime error:
//│   Error: unexpected runtime error

:re
error: ('a & ~Lit) -> 'a
//│ res: ('a & (~{val: int} | ~lit)) -> 'a
//│ Runtime error:
//│   Error: unexpected runtime error

:re
error: ('a) -> ('a & Add[?])
error: ('a) -> ('a & ~Add[?])
error: ('a & ~Add[?]) -> 'a
//│ res: 'a -> (Add[?] & 'a)
//│ Runtime error:
//│   Error: unexpected runtime error
//│ res: 'a -> ('a & ~add)
//│ Runtime error:
//│   Error: unexpected runtime error
//│ res: ('a & (~{Add#E} | ~{lhs: nothing} | ~{rhs: nothing} | ~add)) -> 'a
//│ Runtime error:
//│   Error: unexpected runtime error

:re
error: ('a & ~add) -> 'a
//│ res: ('a & ~add) -> 'a
//│ Runtime error:
//│   Error: unexpected runtime error

:ns
def eval1_ty_ugly: ('a -> int) -> (Lit | Add['b] | 'a & ~Lit & ~Add[?] as 'b) -> int
//│ eval1_ty_ugly: ('a -> int) -> (Lit | Add['b] | 'a & ~Lit & ~Add[?] as 'b) -> int
//│              = <missing implementation>

eval1_ty_ugly
//│ res: ('a -> int) -> 'b -> int
//│   where
//│     'b :> 'a & ~add & ~lit | Add['b] | Lit
//│        <: Add['b] | Lit | 'a & (~{val: int} & ~add | ~add & ~lit | ~{Add#E} & ~lit | ~{lhs: nothing} & ~lit | ~{rhs: nothing} & ~lit)
//│    = <no result>
//│      eval1_ty_ugly is not implemented

:stats
def eval1_ty_ugly = eval1
//│ ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | 'a & ~add & ~lit as 'b) -> int
//│   <:  eval1_ty_ugly:
//│ ('a -> int) -> 'b -> int
//│   where
//│     'b :> 'a & ~add & ~lit | Add['b] | Lit
//│        <: Add['b] | Lit | 'a & (~{val: int} & ~add | ~add & ~lit | ~{Add#E} & ~lit | ~{lhs: nothing} & ~lit | ~{rhs: nothing} & ~lit)
//│              = [Function: eval1]
//│ constrain calls  : 39
//│ annoying  calls  : 36
//│ subtyping calls  : 990

:ns
def eval1_ty: ('a -> int) -> (Lit | Add['b] | 'a & ~lit & ~add as 'b) -> int
//│ eval1_ty: ('a -> int) -> (Lit | Add['b] | 'a & ~lit & ~add as 'b) -> int
//│         = <missing implementation>

eval1_ty
//│ res: ('a -> int) -> ('a & ~add & ~lit | Add['b] | Lit as 'b) -> int
//│    = <no result>
//│      eval1_ty is not implemented

:stats
def eval1_ty = eval1
//│ ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | 'a & ~add & ~lit as 'b) -> int
//│   <:  eval1_ty:
//│ ('a -> int) -> ('a & ~add & ~lit | Add['b] | Lit as 'b) -> int
//│         = [Function: eval1]
//│ constrain calls  : 39
//│ annoying  calls  : 36
//│ subtyping calls  : 530

:stats
eval1_ty_ugly = eval1_ty
//│ ('a -> int) -> ('a & ~add & ~lit | Add['b] | Lit as 'b) -> int
//│   <:  eval1_ty_ugly:
//│ ('a -> int) -> 'b -> int
//│   where
//│     'b :> 'a & ~add & ~lit | Add['b] | Lit
//│        <: Add['b] | Lit | 'a & (~{val: int} & ~add | ~add & ~lit | ~{Add#E} & ~lit | ~{lhs: nothing} & ~lit | ~{rhs: nothing} & ~lit)
//│              = [Function: eval1]
//│ constrain calls  : 12
//│ annoying  calls  : 1
//│ subtyping calls  : 581

:stats
eval1_ty = eval1_ty_ugly
//│ ('a -> int) -> 'b -> int
//│   where
//│     'b :> 'a & ~add & ~lit | Add['b] | Lit
//│        <: Add['b] | Lit | 'a & (~{val: int} & ~add | ~add & ~lit | ~{Add#E} & ~lit | ~{lhs: nothing} & ~lit | ~{rhs: nothing} & ~lit)
//│   <:  eval1_ty:
//│ ('a -> int) -> ('a & ~add & ~lit | Add['b] | Lit as 'b) -> int
//│         = [Function: eval1]
//│ constrain calls  : 12
//│ annoying  calls  : 1
//│ subtyping calls  : 757


// Workaround:
:ns
type E1[A] = Lit | Add[E1[A]] | A & ~lit & ~add
def eval1_ty: ('a -> int) -> E1['a] -> int
//│ Defined type alias E1
//│ eval1_ty: ('a -> int) -> E1['a] -> int
//│         = <missing implementation>

eval1_ty
//│ res: ('a -> int) -> E1['a] -> int
//│    = <no result>
//│      eval1_ty is not implemented

:stats
def eval1_ty = eval1
//│ ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | 'a & ~add & ~lit as 'b) -> int
//│   <:  eval1_ty:
//│ ('a -> int) -> E1['a] -> int
//│         = [Function: eval1]
//│ constrain calls  : 43
//│ annoying  calls  : 38
//│ subtyping calls  : 452
// :ds


:stats
rec def pretty1 k e = case e of {
  | Lit -> intToString e.val
  | Add -> concat (pretty1 k e.lhs) (pretty1 k e.rhs)
  | _ -> k e
  }
//│ pretty1: ('a -> string) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | 'a & ~add & ~lit as 'b) -> string
//│        = [Function: pretty1]
//│ constrain calls  : 50
//│ annoying  calls  : 0
//│ subtyping calls  : 403

// TODO find out why the `prettier` types are not simplified more

:stats
rec def prettier1 k ev e = case e of {
  | Lit -> intToString e.val
  | Add ->
      let tmp = pretty1 k e.lhs
      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
  | _ -> k e
  }
//│ prettier1: ('a -> string) -> ('b -> int) -> ((Add[?] with {lhs: (Add[?] with {lhs: 'c, rhs: 'c}) | Lit | 'a & ~add & ~lit as 'c, rhs: (Add[?] with {lhs: 'd, rhs: 'd}) | Lit | 'a & ~add & ~lit as 'd}) & 'b | Lit | 'a & ~add & ~lit) -> string
//│          = [Function: prettier1]
//│ constrain calls  : 88
//│ annoying  calls  : 0
//│ subtyping calls  : 921


// FIXME canon does haywire here – way too expensive
// FIXME reconstruction makes α110 polar! – some info is lost – Note: only happens without :NoProvs
:ds
:stats
prettier1
//│ ⬤ Typed as: α0
//│  where: 
//│ 		α0 :> (α1 -> (α9 -> (α27 -> (α30 | (α31 | α3)))))
//│ 		α1 <: (α2 -> α3) & α4 & (α7 -> α8)
//│ 		α4 <: (α5 -> α6)
//│ 		α6 <: string<> & string<>
//│ 		α8 <: string<> & string<>
//│ 		α9 <: (α10 -> α26)
//│ 		α10 <: {rhs: α11} & {lhs: α18}
//│ 		α11 <: α12
//│ 		α12 <: ((lit<> & α13) | (((add<> & α15) | (α5 & ~(add<>))) & ~(lit<>)))
//│ 		α13 <: {val: α14}
//│ 		α14 <: Int
//│ 		α15 <: {rhs: α16} & {lhs: α17}
//│ 		α16 <: α12
//│ 		α17 <: α12
//│ 		α18 <: ((lit<> & α19) | (((add<> & α21) | (α24 & ~(add<>))) & ~(lit<>)))
//│ 		α19 <: {val: α20}
//│ 		α20 <: Int
//│ 		α21 <: {rhs: α22} & {lhs: α25}
//│ 		α22 <: α23
//│ 		α23 <: ((lit<> & α19) | (((add<> & α21) | (α24 & ~(add<>))) & ~(lit<>)))
//│ 		α24 <: α7
//│ 		α25 <: α23
//│ 		α26 <: int<number>
//│ 		α27 <: ((lit<> & α28) | (((add<> & α10) | (α2 & ~(add<>))) & ~(lit<>)))
//│ 		α28 <: {val: α29}
//│ 		α29 <: Int
//│ 		α30 :> String
//│ 		α31 :> (α32 | (α33 | α34)) | string<>
//│ 		α32 :> String <: string<>
//│ 		α33 :> string<> <: string<>
//│ 		α34 :> α8 <: string<>
//│ Pols TreeMap(α0 -> Some(true), α1 -> Some(false), α2 -> None, α3 -> None, α4 -> Some(false), α5 -> None, α6 -> Some(false), α7 -> None, α8 -> None, α9 -> Some(false), α10 -> None, α11 -> Some(false), α12 -> Some(false), α13 -> Some(false), α14 -> Some(false), α15 -> Some(false), α16 -> Some(false), α17 -> Some(false), α18 -> Some(false), α19 -> Some(false), α20 -> Some(false), α21 -> Some(false), α22 -> Some(false), α23 -> Some(false), α24 -> Some(false), α25 -> Some(false), α26 -> Some(false), α27 -> Some(false), α28 -> Some(false), α29 -> Some(false), α30 -> Some(true), α31 -> Some(true), α32 -> Some(true), α33 -> Some(true), α34 -> Some(true))
//│ Renewed α0 ~> α35
//│ Renewed α1 ~> α36
//│ Renewed α2 ~> α37
//│ Renewed α3 ~> α38
//│ Renewed α4 ~> α39
//│ Renewed α5 ~> α40
//│ Renewed α6 ~> α41
//│ Renewed α7 ~> α42
//│ Renewed α8 ~> α43
//│ Renewed α9 ~> α44
//│ Renewed α10 ~> α45
//│ Renewed α11 ~> α46
//│ Renewed α12 ~> α47
//│ Renewed α13 ~> α48
//│ Renewed α14 ~> α49
//│ Renewed α15 ~> α50
//│ Renewed α16 ~> α51
//│ Renewed α17 ~> α52
//│ Renewed α18 ~> α53
//│ Renewed α19 ~> α54
//│ Renewed α20 ~> α55
//│ Renewed α21 ~> α56
//│ Renewed α22 ~> α57
//│ Renewed α23 ~> α58
//│ Renewed α24 ~> α59
//│ Renewed α25 ~> α60
//│ Renewed α26 ~> α61
//│ Renewed α27 ~> α62
//│ Renewed α28 ~> α63
//│ Renewed α29 ~> α64
//│ Renewed α30 ~> α65
//│ Renewed α31 ~> α66
//│ Renewed α32 ~> α67
//│ Renewed α33 ~> α68
//│ Renewed α34 ~> α69
//│ ⬤ Cleaned up: α35
//│  where: 
//│ 		α35 :> (α36 -> (α44 -> (α62 -> (α65 | (α66 | α38)))))
//│ 		α36 <: (α37 -> α38) & α39 & (α42 -> α43)
//│ 		α39 <: (α40 -> α41)
//│ 		α41 <: string<> & string<>
//│ 		α43 <: string<> & string<>
//│ 		α44 <: (α45 -> α61)
//│ 		α45 <: {rhs: α46} & {lhs: α53}
//│ 		α46 <: α47
//│ 		α47 <: ((lit<> & α48) | (((add<> & α50) | (α40 & ~(add<>))) & ~(lit<>)))
//│ 		α48 <: {val: α49}
//│ 		α49 <: Int
//│ 		α50 <: {rhs: α51} & {lhs: α52}
//│ 		α51 <: α47
//│ 		α52 <: α47
//│ 		α53 <: ((lit<> & α54) | (((add<> & α56) | (α59 & ~(add<>))) & ~(lit<>)))
//│ 		α54 <: {val: α55}
//│ 		α55 <: Int
//│ 		α56 <: {rhs: α57} & {lhs: α60}
//│ 		α57 <: α58
//│ 		α58 <: ((lit<> & α54) | (((add<> & α56) | (α59 & ~(add<>))) & ~(lit<>)))
//│ 		α59 <: α42
//│ 		α60 <: α58
//│ 		α61 <: int<number>
//│ 		α62 <: ((lit<> & α63) | (((add<> & α45) | (α37 & ~(add<>))) & ~(lit<>)))
//│ 		α63 <: {val: α64}
//│ 		α64 <: Int
//│ 		α65 :> String
//│ 		α66 :> (α67 | (α68 | α69)) | string<>
//│ 		α67 :> String
//│ 		α68 :> string<>
//│ 		α69 :> α43
//│ ty[+] α35
//│ | isBadlyRecursive(α35) = None None
//│ -> Right(DNF(α35 | (α36 -> (α44 -> (α62 -> (α65 | (α66 | α38))))){}))
//│ DNF[+] DNF(α35 | (α36 -> (α44 -> (α62 -> (α65 | (α66 | α38))))){})
//│ | Renewed α35 ~> α70
//│ | ty[-] (α36,)
//│ | -> Right(DNF((α36,){}))
//│ | DNF[-] DNF((α36,){})
//│ | | ty[-] α36
//│ | | | isBadlyRecursive(α36) = None None
//│ | | | isBadlyRecursive(α39) = None None
//│ | | -> Right(DNF((((α37 | α42) | α40) -> ((α38 & α43) & α41)){}∧α36∧α39))
//│ | | DNF[-] DNF((((α37 | α42) | α40) -> ((α38 & α43) & α41)){}∧α36∧α39)
//│ | | | ty[+] (((α37 | α42) | α40),)
//│ | | | -> Right(DNF((((α37 | α42) | α40),){}))
//│ | | | DNF[+] DNF((((α37 | α42) | α40),){})
//│ | | | | ty[+] ((α37 | α42) | α40)
//│ | | | | | isBadlyRecursive(α37) = None None
//│ | | | | | isBadlyRecursive(α42) = None None
//│ | | | | | isBadlyRecursive(α40) = None None
//│ | | | | -> Right(DNF(α37 | α42 | α40))
//│ | | | | DNF[+] DNF(α37 | α42 | α40)
//│ | | | | | Renewed α37 ~> α71
//│ | | | | | Renewed α42 ~> α72
//│ | | | | | Renewed α40 ~> α73
//│ | | | | ~> (α71 | (α72 | α73))
//│ | | | ~> ((α71 | (α72 | α73)),)
//│ | | | ty[-] ((α38 & α43) & α41)
//│ | | | | isBadlyRecursive(α38) = None None
//│ | | | | isBadlyRecursive(α41) = None None
//│ | | | | isBadlyRecursive(α43) = None None
//│ | | | -> Right(DNF(string<>{}∧α38∧α41∧α43))
//│ | | | DNF[-] DNF(string<>{}∧α38∧α41∧α43)
//│ | | | | Renewed α38 ~> α74
//│ | | | | Renewed α41 ~> α75
//│ | | | | Renewed α43 ~> α76
//│ | | | ~> (((string<> & α74) & α75) & α76)
//│ | | | Renewed α36 ~> α77
//│ | | | Renewed α39 ~> α78
//│ | | ~> ((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78)
//│ | ~> (((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78),)
//│ | ty[+] (α44 -> (α62 -> (α65 | (α66 | α38))))
//│ | -> Right(DNF((α44 -> (α62 -> (α65 | (α66 | α38)))){}))
//│ | DNF[+] DNF((α44 -> (α62 -> (α65 | (α66 | α38)))){})
//│ | | ty[-] (α44,)
//│ | | -> Right(DNF((α44,){}))
//│ | | DNF[-] DNF((α44,){})
//│ | | | ty[-] α44
//│ | | | | isBadlyRecursive(α44) = None None
//│ | | | -> Right(DNF((α45 -> α61){}∧α44))
//│ | | | DNF[-] DNF((α45 -> α61){}∧α44)
//│ | | | | ty[+] (α45,)
//│ | | | | -> Right(DNF((α45,){}))
//│ | | | | DNF[+] DNF((α45,){})
//│ | | | | | ty[+] α45
//│ | | | | | | isBadlyRecursive(α45) = None None
//│ | | | | | -> Right(DNF(α45))
//│ | | | | | DNF[+] DNF(α45)
//│ | | | | | | Renewed α45 ~> α79
//│ | | | | | ~> α79
//│ | | | | ~> (α79,)
//│ | | | | ty[-] α61
//│ | | | | | isBadlyRecursive(α61) = None None
//│ | | | | -> Right(DNF(int<number>{}∧α61))
//│ | | | | DNF[-] DNF(int<number>{}∧α61)
//│ | | | | | Renewed α61 ~> α80
//│ | | | | ~> (int<number> & α80)
//│ | | | | Renewed α44 ~> α81
//│ | | | ~> ((α79 -> (int<number> & α80)) & α81)
//│ | | ~> (((α79 -> (int<number> & α80)) & α81),)
//│ | | ty[+] (α62 -> (α65 | (α66 | α38)))
//│ | | -> Right(DNF((α62 -> (α65 | (α66 | α38))){}))
//│ | | DNF[+] DNF((α62 -> (α65 | (α66 | α38))){})
//│ | | | ty[-] (α62,)
//│ | | | -> Right(DNF((α62,){}))
//│ | | | DNF[-] DNF((α62,){})
//│ | | | | ty[-] α62
//│ | | | | | isBadlyRecursive(α62) = None None
//│ | | | | | isBadlyRecursive(α63) = None None
//│ | | | | -> Right(DNF(lit<>{val: α64}∧α62∧α63 | add<>{lhs: α53, rhs: α46}∧α45∧α62 | α37∧α62∧~lit<>|add<>|None))
//│ | | | | DNF[-] DNF(lit<>{val: α64}∧α62∧α63 | add<>{lhs: α53, rhs: α46}∧α45∧α62 | α37∧α62∧~lit<>|add<>|None)
//│ | | | | | ty[-] α64
//│ | | | | | | isBadlyRecursive(α64) = None None
//│ | | | | | -> Right(DNF(int<number>{}∧α64))
//│ | | | | | DNF[-] DNF(int<number>{}∧α64)
//│ | | | | | | Renewed α64 ~> α82
//│ | | | | | ~> (int<number> & α82)
//│ | | | | | Renewed α62 ~> α83
//│ | | | | | Renewed α63 ~> α84
//│ | | | | | ty[-] α53
//│ | | | | | | isBadlyRecursive(α53) = None None
//│ | | | | | | isBadlyRecursive(α54) = None None
//│ | | | | | | isBadlyRecursive(α56) = None Some(Some(false))
//│ | | | | | | isBadlyRecursive(α59) = None None
//│ | | | | | -> Right(DNF(lit<>{val: α55}∧α53∧α54 | add<>{lhs: α60, rhs: α57}∧α53∧α56 | α42∧α53∧α59∧~lit<>|add<>|None))
//│ | | | | | DNF[-] DNF(lit<>{val: α55}∧α53∧α54 | add<>{lhs: α60, rhs: α57}∧α53∧α56 | α42∧α53∧α59∧~lit<>|add<>|None)
//│ | | | | | | ty[-] α55
//│ | | | | | | | isBadlyRecursive(α55) = None None
//│ | | | | | | -> Right(DNF(int<number>{}∧α55))
//│ | | | | | | DNF[-] DNF(int<number>{}∧α55)
//│ | | | | | | | Renewed α55 ~> α85
//│ | | | | | | ~> (int<number> & α85)
//│ | | | | | | Renewed α53 ~> α86
//│ | | | | | | Renewed α54 ~> α87
//│ | | | | | | ty[-] α60
//│ | | | | | | | isBadlyRecursive(α60) = None Some(Some(false))
//│ | | | | | | | isBadlyRecursive(α58) = None Some(Some(false))
//│ | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None))
//│ | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None)
//│ | | | | | | | ty[-] α55
//│ | | | | | | | -> Right(DNF(int<number>{}∧α55))
//│ | | | | | | | DNF[-] DNF(int<number>{}∧α55)
//│ | | | | | | | ~> (int<number> & α85)
//│ | | | | | | | Renewed α58 ~> α88
//│ | | | | | | | Renewed α60 ~> α89
//│ | | | | | | | ty[-] α60
//│ | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None)
//│ | | | | | | | | Fresh rec (DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None),Some(false)) ~> α90
//│ | | | | | | | ~> α90
//│ | | | | | | | ty[-] α57
//│ | | | | | | | | isBadlyRecursive(α57) = None Some(Some(false))
//│ | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None)
//│ | | | | | | | | ty[-] α55
//│ | | | | | | | | -> Right(DNF(int<number>{}∧α55))
//│ | | | | | | | | DNF[-] DNF(int<number>{}∧α55)
//│ | | | | | | | | ~> (int<number> & α85)
//│ | | | | | | | | Renewed α57 ~> α91
//│ | | | | | | | | ty[-] α60
//│ | | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α90
//│ | | | | | | | | ty[-] α57
//│ | | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None)
//│ | | | | | | | | | Fresh rec (DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None),Some(false)) ~> α92
//│ | | | | | | | | ~> α92
//│ | | | | | | | | Renewed α56 ~> α93
//│ | | | | | | | | Renewed α59 ~> α94
//│ | | | | | | | | !!!
//│ | | | | | | | ~> α92
//│ | | | | | | | !!!
//│ | | | | | | ~> α90
//│ | | | | | | ty[-] α57
//│ | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None))
//│ | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None)
//│ | | | | | | | ty[-] α55
//│ | | | | | | | -> Right(DNF(int<number>{}∧α55))
//│ | | | | | | | DNF[-] DNF(int<number>{}∧α55)
//│ | | | | | | | ~> (int<number> & α85)
//│ | | | | | | | ty[-] α60
//│ | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None)
//│ | | | | | | | | ty[-] α55
//│ | | | | | | | | -> Right(DNF(int<number>{}∧α55))
//│ | | | | | | | | DNF[-] DNF(int<number>{}∧α55)
//│ | | | | | | | | ~> (int<number> & α85)
//│ | | | | | | | | ty[-] α60
//│ | | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α58∧α60 | add<>{lhs: α60, rhs: α57}∧α56∧α58∧α60 | α42∧α58∧α59∧α60∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α90
//│ | | | | | | | | ty[-] α57
//│ | | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α92
//│ | | | | | | | | !!!
//│ | | | | | | | ~> α90
//│ | | | | | | | ty[-] α57
//│ | | | | | | | -> Right(DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α55}∧α54∧α57∧α58 | add<>{lhs: α60, rhs: α57}∧α56∧α57∧α58 | α42∧α57∧α58∧α59∧~add<>|lit<>|None)
//│ | | | | | | | ~> α92
//│ | | | | | | | !!!
//│ | | | | | | ~> α92
//│ | | | | | ~> ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>)))))
//│ | | | | | ty[-] α46
//│ | | | | | | isBadlyRecursive(α46) = None None
//│ | | | | | | isBadlyRecursive(α47) = None Some(Some(false))
//│ | | | | | | isBadlyRecursive(α48) = None None
//│ | | | | | | isBadlyRecursive(α50) = None Some(Some(false))
//│ | | | | | -> Right(DNF(lit<>{val: α49}∧α46∧α47∧α48 | add<>{lhs: α52, rhs: α51}∧α46∧α47∧α50 | α40∧α46∧α47∧~add<>|lit<>|None))
//│ | | | | | DNF[-] DNF(lit<>{val: α49}∧α46∧α47∧α48 | add<>{lhs: α52, rhs: α51}∧α46∧α47∧α50 | α40∧α46∧α47∧~add<>|lit<>|None)
//│ | | | | | | ty[-] α49
//│ | | | | | | | isBadlyRecursive(α49) = None None
//│ | | | | | | -> Right(DNF(int<number>{}∧α49))
//│ | | | | | | DNF[-] DNF(int<number>{}∧α49)
//│ | | | | | | | Renewed α49 ~> α95
//│ | | | | | | ~> (int<number> & α95)
//│ | | | | | | Renewed α46 ~> α96
//│ | | | | | | Renewed α47 ~> α97
//│ | | | | | | Renewed α48 ~> α98
//│ | | | | | | ty[-] α52
//│ | | | | | | | isBadlyRecursive(α52) = None Some(Some(false))
//│ | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None))
//│ | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None)
//│ | | | | | | | ty[-] α49
//│ | | | | | | | -> Right(DNF(int<number>{}∧α49))
//│ | | | | | | | DNF[-] DNF(int<number>{}∧α49)
//│ | | | | | | | ~> (int<number> & α95)
//│ | | | | | | | Renewed α52 ~> α99
//│ | | | | | | | ty[-] α52
//│ | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None)
//│ | | | | | | | | Fresh rec (DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None),Some(false)) ~> α100
//│ | | | | | | | ~> α100
//│ | | | | | | | ty[-] α51
//│ | | | | | | | | isBadlyRecursive(α51) = None Some(Some(false))
//│ | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None)
//│ | | | | | | | | ty[-] α49
//│ | | | | | | | | -> Right(DNF(int<number>{}∧α49))
//│ | | | | | | | | DNF[-] DNF(int<number>{}∧α49)
//│ | | | | | | | | ~> (int<number> & α95)
//│ | | | | | | | | Renewed α51 ~> α101
//│ | | | | | | | | ty[-] α52
//│ | | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α100
//│ | | | | | | | | ty[-] α51
//│ | | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None)
//│ | | | | | | | | | Fresh rec (DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None),Some(false)) ~> α102
//│ | | | | | | | | ~> α102
//│ | | | | | | | | Renewed α50 ~> α103
//│ | | | | | | | | !!!
//│ | | | | | | | ~> α102
//│ | | | | | | | !!!
//│ | | | | | | ~> α100
//│ | | | | | | ty[-] α51
//│ | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None))
//│ | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None)
//│ | | | | | | | ty[-] α49
//│ | | | | | | | -> Right(DNF(int<number>{}∧α49))
//│ | | | | | | | DNF[-] DNF(int<number>{}∧α49)
//│ | | | | | | | ~> (int<number> & α95)
//│ | | | | | | | ty[-] α52
//│ | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None)
//│ | | | | | | | | ty[-] α49
//│ | | | | | | | | -> Right(DNF(int<number>{}∧α49))
//│ | | | | | | | | DNF[-] DNF(int<number>{}∧α49)
//│ | | | | | | | | ~> (int<number> & α95)
//│ | | | | | | | | ty[-] α52
//│ | | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α52 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α52 | α40∧α47∧α52∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α100
//│ | | | | | | | | ty[-] α51
//│ | | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None))
//│ | | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None)
//│ | | | | | | | | ~> α102
//│ | | | | | | | | !!!
//│ | | | | | | | ~> α100
//│ | | | | | | | ty[-] α51
//│ | | | | | | | -> Right(DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None))
//│ | | | | | | | DNF[-] DNF(lit<>{val: α49}∧α47∧α48∧α51 | add<>{lhs: α52, rhs: α51}∧α47∧α50∧α51 | α40∧α47∧α51∧~add<>|lit<>|None)
//│ | | | | | | | ~> α102
//│ | | | | | | | !!!
//│ | | | | | | ~> α102
//│ | | | | | ~> (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))
//│ | | | | ~> ((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>)))))
//│ | | | ~> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))),)
//│ | | | ty[+] (α65 | (α66 | α38))
//│ | | | | isBadlyRecursive(α65) = None None
//│ | | | | isBadlyRecursive(α66) = None None
//│ | | | | isBadlyRecursive(α67) = None None
//│ | | | | isBadlyRecursive(α68) = None None
//│ | | | | isBadlyRecursive(α69) = None None
//│ | | | -> Right(DNF(α65 | string<>{} | α66 | α67 | α68 | α69 | α43 | α38))
//│ | | | DNF[+] DNF(α65 | string<>{} | α66 | α67 | α68 | α69 | α43 | α38)
//│ | | | | Renewed α65 ~> α104
//│ | | | | Renewed α66 ~> α105
//│ | | | | Renewed α67 ~> α106
//│ | | | | Renewed α68 ~> α107
//│ | | | | Renewed α69 ~> α108
//│ | | | ~> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))
//│ | | ~> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76))))))))
//│ | ~> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))
//│ ~> ((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))) | α70)
//│ ⬤ Canon: ((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))) | α70)
//│  where: 
//│ 		α90 <: (((((add<> & {lhs: α90, rhs: α92}) & α88) & α89) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89) | ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>)))))
//│ 		α92 <: (((((add<> & {lhs: α90, rhs: α92}) & α88) & α91) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91) | ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>)))))
//│ 		α100 <: (((((add<> & {lhs: α100, rhs: α102}) & α97) & α99) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99) | (((α73 & α97) & α99) & (~(add<>) & ~(lit<>)))))
//│ 		α102 <: (((((add<> & {lhs: α100, rhs: α102}) & α97) & α101) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101) | (((α73 & α97) & α101) & (~(add<>) & ~(lit<>)))))
//│ analyze[+] ((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))) | α70)
//│ | go ((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))) | α70)   ()
//│ | | go (((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76))))))))))   ()
//│ | | | analyze[+] (((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76))))))))))
//│ | | | | analyze[-] (((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78),)
//│ | | | | | analyze[-] ((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78)
//│ | | | | | | go ((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78)   ()
//│ | | | | | | | go (((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77)   ()
//│ | | | | | | | | go ((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76))   ()
//│ | | | | | | | | | analyze[-] ((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76))
//│ | | | | | | | | | | analyze[+] ((α71 | (α72 | α73)),)
//│ | | | | | | | | | | | analyze[+] (α71 | (α72 | α73))
//│ | | | | | | | | | | | | go (α71 | (α72 | α73))   ()
//│ | | | | | | | | | | | | | go α71   ()
//│ | | | | | | | | | | | | | go (α72 | α73)   (α71)
//│ | | | | | | | | | | | | | | go α72   (α71)
//│ | | | | | | | | | | | | | | go α73   (α71, α72)
//│ | | | | | | | | | | | | >>>> α71 HashSet(α71, α72, α73) None
//│ | | | | | | | | | | | | >>>> α72 HashSet(α71, α72, α73) None
//│ | | | | | | | | | | | | >>>> α73 HashSet(α71, α72, α73) None
//│ | | | | | | | | | | analyze[-] (((string<> & α74) & α75) & α76)
//│ | | | | | | | | | | | go (((string<> & α74) & α75) & α76)   ()
//│ | | | | | | | | | | | | go ((string<> & α74) & α75)   ()
//│ | | | | | | | | | | | | | go (string<> & α74)   ()
//│ | | | | | | | | | | | | | | go string<>   ()
//│ | | | | | | | | | | | | | | | analyze[-] string<>
//│ | | | | | | | | | | | | | | go α74   (string<>)
//│ | | | | | | | | | | | | | go α75   (string<>, α74)
//│ | | | | | | | | | | | | go α76   (string<>, α74, α75)
//│ | | | | | | | | | | | >>>> α74 HashSet(string<>, α74, α75, α76) None
//│ | | | | | | | | | | | >>>> α75 HashSet(string<>, α74, α75, α76) None
//│ | | | | | | | | | | | >>>> α76 HashSet(string<>, α74, α75, α76) None
//│ | | | | | | | | go α77   (((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)))
//│ | | | | | | | go α78   (((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)), α77)
//│ | | | | | | >>>> α77 HashSet(((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)), α77, α78) None
//│ | | | | | | >>>> α78 HashSet(((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)), α77, α78) None
//│ | | | | analyze[+] (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))
//│ | | | | | analyze[-] (((α79 -> (int<number> & α80)) & α81),)
//│ | | | | | | analyze[-] ((α79 -> (int<number> & α80)) & α81)
//│ | | | | | | | go ((α79 -> (int<number> & α80)) & α81)   ()
//│ | | | | | | | | go (α79 -> (int<number> & α80))   ()
//│ | | | | | | | | | analyze[-] (α79 -> (int<number> & α80))
//│ | | | | | | | | | | analyze[+] (α79,)
//│ | | | | | | | | | | | analyze[+] α79
//│ | | | | | | | | | | | | go α79   ()
//│ | | | | | | | | | | | | >>>> α79 HashSet(α79) None
//│ | | | | | | | | | | analyze[-] (int<number> & α80)
//│ | | | | | | | | | | | go (int<number> & α80)   ()
//│ | | | | | | | | | | | | go int<number>   ()
//│ | | | | | | | | | | | | | analyze[-] int<number>
//│ | | | | | | | | | | | | go α80   (int<number>)
//│ | | | | | | | | | | | >>>> α80 HashSet(α80, int<number>) None
//│ | | | | | | | | go α81   ((α79 -> (int<number> & α80)))
//│ | | | | | | | >>>> α81 HashSet(α81, (α79 -> (int<number> & α80))) None
//│ | | | | | analyze[+] (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76))))))))
//│ | | | | | | analyze[-] (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))),)
//│ | | | | | | | analyze[-] ((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>)))))
//│ | | | | | | | | go ((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>)))))   ()
//│ | | | | | | | | | analyze[-] (((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83)
//│ | | | | | | | | | | go (((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83)   ()
//│ | | | | | | | | | | | go ((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79)   ()
//│ | | | | | | | | | | | | go (add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))})   ()
//│ | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | go {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}   (add<>)
//│ | | | | | | | | | | | | | | analyze[-] {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}
//│ | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>)))))
//│ | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>)))))   ()
//│ | | | | | | | | | | | | | | | | | analyze[-] (((add<> & {lhs: α90, rhs: α92}) & α86) & α93)
//│ | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α90, rhs: α92}) & α86) & α93)   ()
//│ | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α90, rhs: α92}) & α86)   ()
//│ | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α90, rhs: α92})   ()
//│ | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | go {lhs: α90, rhs: α92}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α90, rhs: α92}
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] α90
//│ | | | | | | | | | | | | | | | | | | | | | | | | go α90   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | go (((((add<> & {lhs: α90, rhs: α92}) & α88) & α89) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89) | ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>)))))   (α90)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α90, rhs: α92}) & α88) & α89) & α93)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α90, rhs: α92}) & α88) & α89) & α93)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α90, rhs: α92}) & α88) & α89)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α90, rhs: α92}) & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α90, rhs: α92})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {lhs: α90, rhs: α92}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α90, rhs: α92}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α89   (α88, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α93   (α88, α89, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(α88, α89, add<>, α93) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α89 HashSet(α88, α89, add<>, α93) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α93 HashSet(α88, α89, add<>, α93) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89) | ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89) | ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α85)}) & α87) & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α85)}) & α87)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α85)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α85)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α85)}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (int<number> & α85)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (int<number> & α85)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go int<number>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] int<number>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α85   (int<number>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α85 HashSet(α85, int<number>) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α87   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (lit<>, α87)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α89   (lit<>, α87, α88)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α87 HashSet(lit<>, α87, α88, α89) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(lit<>, α87, α88, α89) Some(HashSet(α88, α89, add<>, α93))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α89 HashSet(lit<>, α87, α88, α89) Some(HashSet(α88, α89, add<>, α93))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((α72 & α88) & α89) & α94)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((α72 & α88) & α89)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (α72 & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α72   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (α72)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α89   (α72, α88)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α94   (α72, α88, α89)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α72, α88, α89, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α72, α88, α89, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[+] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α72, α88, α89, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[+] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α72 HashSet(α72, α88, α89, α94) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(α72, α88, α89, α94) Some(HashSet(α88, α89))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α89 HashSet(α72, α88, α89, α94) Some(HashSet(α88, α89))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α94 HashSet(α72, α88, α89, α94) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | >>>> α90 HashSet(α90) None
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] α92
//│ | | | | | | | | | | | | | | | | | | | | | | | | go α92   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | go (((((add<> & {lhs: α90, rhs: α92}) & α88) & α91) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91) | ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>)))))   (α92)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α90, rhs: α92}) & α88) & α91) & α93)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α90, rhs: α92}) & α88) & α91) & α93)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α90, rhs: α92}) & α88) & α91)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α90, rhs: α92}) & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α90, rhs: α92})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {lhs: α90, rhs: α92}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α90, rhs: α92}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α91   (α88, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α93   (α88, add<>, α91)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(α88, add<>, α91, α93) Some(HashSet(α88, α89))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α91 HashSet(α88, add<>, α91, α93) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α93 HashSet(α88, add<>, α91, α93) Some(HashSet(α88, α89, add<>, α93))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91) | ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91) | ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α85)}) & α87) & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α85)}) & α87)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α85)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α85)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α85)}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α87   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (lit<>, α87)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α91   (lit<>, α87, α88)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α87 HashSet(lit<>, α87, α88, α91) Some(HashSet(lit<>, α87, α88, α89))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(lit<>, α87, α88, α91) Some(HashSet(α88))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α91 HashSet(lit<>, α87, α88, α91) Some(HashSet(α88, add<>, α91, α93))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((α72 & α88) & α91) & α94)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((α72 & α88) & α91)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (α72 & α88)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α72   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α88   (α72)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α91   (α72, α88)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α94   (α72, α88, α91)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α72, α88, α91, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α72, α88, α91, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α72, α88, α91, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α72 HashSet(α72, α88, α91, α94) Some(HashSet(α72, α88, α89, α94))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α88 HashSet(α72, α88, α91, α94) Some(HashSet(α88))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α91 HashSet(α72, α88, α91, α94) Some(HashSet(α88, α91))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α94 HashSet(α72, α88, α91, α94) Some(HashSet(α72, α88, α89, α94))
//│ | | | | | | | | | | | | | | | | | | | | | | | | >>>> α92 HashSet(α92) None
//│ | | | | | | | | | | | | | | | | | | | | go α86   (add<>)
//│ | | | | | | | | | | | | | | | | | | | go α93   (α86, add<>)
//│ | | | | | | | | | | | | | | | | | | >>>> α86 HashSet(α86, add<>, α93) None
//│ | | | | | | | | | | | | | | | | | | >>>> α93 HashSet(α86, add<>, α93) Some(HashSet(α88, add<>, α93))
//│ | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | analyze[-] (((lit<> & {val: (int<number> & α85)}) & α86) & α87)
//│ | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α85)}) & α86) & α87)   ()
//│ | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α85)}) & α86)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α85)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α85)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α85)}
//│ | | | | | | | | | | | | | | | | | | | | | | go α86   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | go α87   (lit<>, α86)
//│ | | | | | | | | | | | | | | | | | | | | >>>> α86 HashSet(lit<>, α86, α87) Some(HashSet(α86, add<>, α93))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α87 HashSet(lit<>, α86, α87) Some(HashSet(lit<>, α87, α88))
//│ | | | | | | | | | | | | | | | | | | | analyze[-] (((α72 & α86) & α94) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | go (((α72 & α86) & α94) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | go ((α72 & α86) & α94)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | go (α72 & α86)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go α72   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go α86   (α72)
//│ | | | | | | | | | | | | | | | | | | | | | | go α94   (α86, α72)
//│ | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α86, α72, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α86, α72, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α86, α72, α94)
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | >>>> α86 HashSet(α86, α72, α94) Some(HashSet(α86))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α72 HashSet(α86, α72, α94) Some(HashSet(α72, α88, α94))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α94 HashSet(α86, α72, α94) Some(HashSet(α72, α88, α94))
//│ | | | | | | | | | | | | | | | analyze[-] (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))
//│ | | | | | | | | | | | | | | | | go (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))   ()
//│ | | | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103)
//│ | | | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103)   ()
//│ | | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α100, rhs: α102}) & α96) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α100, rhs: α102}) & α96)   ()
//│ | | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α100, rhs: α102})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | go {lhs: α100, rhs: α102}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α100, rhs: α102}
//│ | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] α100
//│ | | | | | | | | | | | | | | | | | | | | | | | | | go α100   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((add<> & {lhs: α100, rhs: α102}) & α97) & α99) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99) | (((α73 & α97) & α99) & (~(add<>) & ~(lit<>)))))   (α100)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α100, rhs: α102}) & α97) & α99) & α103)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α100, rhs: α102}) & α97) & α99) & α103)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α100, rhs: α102}) & α97) & α99)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α100, rhs: α102}) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α100, rhs: α102})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {lhs: α100, rhs: α102}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α100, rhs: α102}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α99   (α97, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α103   (α97, α99, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α97, α99, α103, add<>) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α99 HashSet(α97, α99, α103, add<>) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α103 HashSet(α97, α99, α103, add<>) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99) | (((α73 & α97) & α99) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99) | (((α73 & α97) & α99) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α95)}) & α97) & α98)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α95)}) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α95)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α95)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α95)}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (int<number> & α95)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (int<number> & α95)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go int<number>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] int<number>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α95   (int<number>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α95 HashSet(int<number>, α95) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α98   (lit<>, α97)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α99   (lit<>, α97, α98)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(lit<>, α97, α98, α99) Some(HashSet(α97, α99, α103, add<>))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α98 HashSet(lit<>, α97, α98, α99) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α99 HashSet(lit<>, α97, α98, α99) Some(HashSet(α97, α99, α103, add<>))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((α73 & α97) & α99) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((α73 & α97) & α99) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((α73 & α97) & α99)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (α73 & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α73   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α99   (α97, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α97, α99, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α97, α99, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α97, α99, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α97, α99, α73) Some(HashSet(α97, α99))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α99 HashSet(α97, α99, α73) Some(HashSet(α97, α99))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α73 HashSet(α97, α99, α73) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α100 HashSet(α100) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] α102
//│ | | | | | | | | | | | | | | | | | | | | | | | | | go α102   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((add<> & {lhs: α100, rhs: α102}) & α97) & α101) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101) | (((α73 & α97) & α101) & (~(add<>) & ~(lit<>)))))   (α102)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((add<> & {lhs: α100, rhs: α102}) & α97) & α101) & α103)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((add<> & {lhs: α100, rhs: α102}) & α97) & α101) & α103)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((add<> & {lhs: α100, rhs: α102}) & α97) & α101)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((add<> & {lhs: α100, rhs: α102}) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (add<> & {lhs: α100, rhs: α102})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go add<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] add<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {lhs: α100, rhs: α102}   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {lhs: α100, rhs: α102}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α101   (α97, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α103   (α97, α101, add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α97, α101, α103, add<>) Some(HashSet(α97, α99))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α101 HashSet(α97, α101, α103, add<>) None
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α103 HashSet(α97, α101, α103, add<>) Some(HashSet(α97, α99, α103, add<>))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101) | (((α73 & α97) & α101) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101) | (((α73 & α97) & α101) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α95)}) & α97) & α98)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α95)}) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α95)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α95)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α95)}
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α98   (lit<>, α97)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α101   (lit<>, α97, α98)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(lit<>, α97, α98, α101) Some(HashSet(α97))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α98 HashSet(lit<>, α97, α98, α101) Some(HashSet(lit<>, α97, α98, α99))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α101 HashSet(lit<>, α97, α98, α101) Some(HashSet(α97, α101, α103, add<>))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] (((α73 & α97) & α101) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (((α73 & α97) & α101) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ((α73 & α97) & α101)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (α73 & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α73   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α97   (α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go α101   (α97, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α97, α101, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α97, α101, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α97, α101, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α97, α101, α73) Some(HashSet(α97))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α101 HashSet(α97, α101, α73) Some(HashSet(α97, α101))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α73 HashSet(α97, α101, α73) Some(HashSet(α97, α99, α73))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | >>>> α102 HashSet(α102) None
//│ | | | | | | | | | | | | | | | | | | | | | go α96   (add<>)
//│ | | | | | | | | | | | | | | | | | | | | go α97   (α96, add<>)
//│ | | | | | | | | | | | | | | | | | | | go α103   (α96, α97, add<>)
//│ | | | | | | | | | | | | | | | | | | >>>> α96 HashSet(α96, α97, α103, add<>) None
//│ | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α96, α97, α103, add<>) Some(HashSet(α97))
//│ | | | | | | | | | | | | | | | | | | >>>> α103 HashSet(α96, α97, α103, add<>) Some(HashSet(α97, α103, add<>))
//│ | | | | | | | | | | | | | | | | | analyze[-] (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | | | | | | | | | go (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98)
//│ | | | | | | | | | | | | | | | | | | | | go ((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98)   ()
//│ | | | | | | | | | | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α95)}) & α96) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α95)}) & α96)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α95)})   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | | | | | | | | | | go {val: (int<number> & α95)}   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α95)}
//│ | | | | | | | | | | | | | | | | | | | | | | | go α96   (lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | | go α97   (α96, lit<>)
//│ | | | | | | | | | | | | | | | | | | | | | go α98   (α96, lit<>, α97)
//│ | | | | | | | | | | | | | | | | | | | | >>>> α96 HashSet(α96, lit<>, α97, α98) Some(HashSet(α96, α97, α103, add<>))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α96, lit<>, α97, α98) Some(HashSet(α97))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α98 HashSet(α96, lit<>, α97, α98) Some(HashSet(lit<>, α97, α98))
//│ | | | | | | | | | | | | | | | | | | | analyze[-] (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | | | | | | | | | go (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | | | | | | | | | go ((α73 & α96) & α97)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | go (α73 & α96)   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go α73   ()
//│ | | | | | | | | | | | | | | | | | | | | | | | go α96   (α73)
//│ | | | | | | | | | | | | | | | | | | | | | | go α97   (α96, α73)
//│ | | | | | | | | | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α96, α97, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | go ~(add<>)   (α96, α97, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | | | | | | | | | go ~(lit<>)   (α96, α97, α73)
//│ | | | | | | | | | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | | | | | | | | | >>>> α96 HashSet(α96, α97, α73) Some(HashSet(α96, α97))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α97 HashSet(α96, α97, α73) Some(HashSet(α97))
//│ | | | | | | | | | | | | | | | | | | | | >>>> α73 HashSet(α96, α97, α73) Some(HashSet(α97, α73))
//│ | | | | | | | | | | | | go α79   (add<>)
//│ | | | | | | | | | | | go α83   (add<>, α79)
//│ | | | | | | | | | | >>>> α83 HashSet(α83, add<>, α79) None
//│ | | | | | | | | | | >>>> α79 HashSet(α83, add<>, α79) None
//│ | | | | | | | | | analyze[-] ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))
//│ | | | | | | | | | | go ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))   ()
//│ | | | | | | | | | | | analyze[-] (((lit<> & {val: (int<number> & α82)}) & α83) & α84)
//│ | | | | | | | | | | | | go (((lit<> & {val: (int<number> & α82)}) & α83) & α84)   ()
//│ | | | | | | | | | | | | | go ((lit<> & {val: (int<number> & α82)}) & α83)   ()
//│ | | | | | | | | | | | | | | go (lit<> & {val: (int<number> & α82)})   ()
//│ | | | | | | | | | | | | | | | go lit<>   ()
//│ | | | | | | | | | | | | | | | | analyze[-] lit<>
//│ | | | | | | | | | | | | | | | go {val: (int<number> & α82)}   (lit<>)
//│ | | | | | | | | | | | | | | | | analyze[-] {val: (int<number> & α82)}
//│ | | | | | | | | | | | | | | | | | analyze[-] (int<number> & α82)
//│ | | | | | | | | | | | | | | | | | | go (int<number> & α82)   ()
//│ | | | | | | | | | | | | | | | | | | | go int<number>   ()
//│ | | | | | | | | | | | | | | | | | | | | analyze[-] int<number>
//│ | | | | | | | | | | | | | | | | | | | go α82   (int<number>)
//│ | | | | | | | | | | | | | | | | | | >>>> α82 HashSet(α82, int<number>) None
//│ | | | | | | | | | | | | | | go α83   (lit<>)
//│ | | | | | | | | | | | | | go α84   (lit<>, α83)
//│ | | | | | | | | | | | | >>>> α83 HashSet(lit<>, α83, α84) Some(HashSet(α83, add<>, α79))
//│ | | | | | | | | | | | | >>>> α84 HashSet(lit<>, α83, α84) None
//│ | | | | | | | | | | | analyze[-] ((α71 & α83) & (~(add<>) & ~(lit<>)))
//│ | | | | | | | | | | | | go ((α71 & α83) & (~(add<>) & ~(lit<>)))   ()
//│ | | | | | | | | | | | | | go (α71 & α83)   ()
//│ | | | | | | | | | | | | | | go α71   ()
//│ | | | | | | | | | | | | | | go α83   (α71)
//│ | | | | | | | | | | | | | go (~(add<>) & ~(lit<>))   (α83, α71)
//│ | | | | | | | | | | | | | | go ~(add<>)   (α83, α71)
//│ | | | | | | | | | | | | | | | analyze[-] ~(add<>)
//│ | | | | | | | | | | | | | | go ~(lit<>)   (α83, α71)
//│ | | | | | | | | | | | | | | | analyze[-] ~(lit<>)
//│ | | | | | | | | | | | | >>>> α83 HashSet(α83, α71) Some(HashSet(α83))
//│ | | | | | | | | | | | | >>>> α71 HashSet(α83, α71) None
//│ | | | | | | analyze[+] (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))
//│ | | | | | | | go (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))   ()
//│ | | | | | | | | go string<>   ()
//│ | | | | | | | | | analyze[+] string<>
//│ | | | | | | | | go (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76))))))   (string<>)
//│ | | | | | | | | | go α104   (string<>)
//│ | | | | | | | | | go (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))   (string<>, α104)
//│ | | | | | | | | | | go α105   (string<>, α104)
//│ | | | | | | | | | | go (α106 | (α107 | (α108 | (α74 | α76))))   (string<>, α104, α105)
//│ | | | | | | | | | | | go α106   (string<>, α104, α105)
//│ | | | | | | | | | | | go (α107 | (α108 | (α74 | α76)))   (string<>, α104, α105, α106)
//│ | | | | | | | | | | | | go α107   (string<>, α104, α105, α106)
//│ | | | | | | | | | | | | go (α108 | (α74 | α76))   (string<>, α104, α105, α106, α107)
//│ | | | | | | | | | | | | | go α108   (string<>, α104, α105, α106, α107)
//│ | | | | | | | | | | | | | go (α74 | α76)   (string<>, α104, α105, α106, α107, α108)
//│ | | | | | | | | | | | | | | go α74   (string<>, α104, α105, α106, α107, α108)
//│ | | | | | | | | | | | | | | go α76   (string<>, α104, α105, α74, α106, α107, α108)
//│ | | | | | | | >>>> α104 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α105 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α74 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α106 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α107 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α76 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | | | | | | >>>> α108 HashSet(string<>, α104, α105, α74, α106, α107, α76, α108) None
//│ | | go α70   ((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))))
//│ | >>>> α70 HashSet((((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))), α70) None
//│ [occs] +α71 {α71,α72,α73} ; +α72 {α71,α72,α73} ; +α73 {α71,α72,α73} ; -α74 {string<>,α74,α75,α76} ; -α75 {string<>,α74,α75,α76} ; -α76 {string<>,α74,α75,α76} ; -α77 {((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)),α77,α78} ; -α78 {((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)),α77,α78} ; +α79 {α79} ; -α80 {α80,int<number>} ; -α81 {α81,(α79 -> (int<number> & α80))} ; -α88 {α88} ; -α89 {α88,α89} ; -α93 {add<>,α93} ; -α85 {α85,int<number>} ; -α87 {lit<>,α87} ; -α72 {α72,α94} ; -α94 {α72,α94} ; -α90 {α90} ; -α91 {α88,α91} ; -α92 {α92} ; -α86 {α86} ; -α97 {α97} ; -α99 {α97,α99} ; -α103 {α97,α103,add<>} ; -α95 {int<number>,α95} ; -α98 {lit<>,α97,α98} ; -α73 {α97,α73} ; -α100 {α100} ; -α101 {α97,α101} ; -α102 {α102} ; -α96 {α96,α97} ; -α83 {α83} ; -α79 {α83,add<>,α79} ; -α82 {α82,int<number>} ; -α84 {lit<>,α83,α84} ; -α71 {α83,α71} ; +α104 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α105 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α74 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α106 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α107 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α76 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α108 {string<>,α104,α105,α74,α106,α107,α76,α108} ; +α70 {(((((α71 | (α72 | α73)) -> (((string<> & α74) & α75) & α76)) & α77) & α78) -> (((α79 -> (int<number> & α80)) & α81) -> (((((add<> & {lhs: ((((add<> & {lhs: α90, rhs: α92}) & α86) & α93) | ((((lit<> & {val: (int<number> & α85)}) & α86) & α87) | (((α72 & α86) & α94) & (~(add<>) & ~(lit<>))))), rhs: (((((add<> & {lhs: α100, rhs: α102}) & α96) & α97) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α96) & α97) & α98) | (((α73 & α96) & α97) & (~(add<>) & ~(lit<>)))))}) & α79) & α83) | ((((lit<> & {val: (int<number> & α82)}) & α83) & α84) | ((α71 & α83) & (~(add<>) & ~(lit<>))))) -> (string<> | (α104 | (α105 | (α106 | (α107 | (α108 | (α74 | α76)))))))))),α70}
//│ isBadlyRecursive(α70) = None None
//│ isBadlyRecursive(α71) = None None
//│ isBadlyRecursive(α72) = None None
//│ isBadlyRecursive(α73) = None None
//│ isBadlyRecursive(α74) = None None
//│ isBadlyRecursive(α75) = None None
//│ isBadlyRecursive(α76) = None None
//│ isBadlyRecursive(α77) = None None
//│ isBadlyRecursive(α78) = None None
//│ isBadlyRecursive(α79) = None None
//│ isBadlyRecursive(α80) = None None
//│ isBadlyRecursive(α81) = None None
//│ isBadlyRecursive(α82) = None None
//│ isBadlyRecursive(α83) = None None
//│ isBadlyRecursive(α84) = None None
//│ isBadlyRecursive(α85) = None None
//│ isBadlyRecursive(α86) = None None
//│ isBadlyRecursive(α87) = None None
//│ isBadlyRecursive(α88) = None None
//│ isBadlyRecursive(α89) = None None
//│ isBadlyRecursive(α90) = None Some(Some(false))
//│ isBadlyRecursive(α91) = None None
//│ isBadlyRecursive(α92) = None Some(Some(false))
//│ isBadlyRecursive(α93) = None None
//│ isBadlyRecursive(α94) = None None
//│ isBadlyRecursive(α95) = None None
//│ isBadlyRecursive(α96) = None None
//│ isBadlyRecursive(α97) = None None
//│ isBadlyRecursive(α98) = None None
//│ isBadlyRecursive(α99) = None None
//│ isBadlyRecursive(α100) = None Some(Some(false))
//│ isBadlyRecursive(α101) = None None
//│ isBadlyRecursive(α102) = None Some(Some(false))
//│ isBadlyRecursive(α103) = None None
//│ isBadlyRecursive(α104) = None None
//│ isBadlyRecursive(α105) = None None
//│ isBadlyRecursive(α106) = None None
//│ isBadlyRecursive(α107) = None None
//│ isBadlyRecursive(α108) = None None
//│ [vars] TreeSet(α70, α71, α72, α73, α74, α75, α76, α77, α78, α79, α80, α81, α82, α83, α84, α85, α86, α87, α88, α89, α90, α91, α92, α93, α94, α95, α96, α97, α98, α99, α100, α101, α102, α103, α104, α105, α106, α107, α108)
//│ [bounds] 
//│ 		α90 <: (((((add<> & {lhs: α90, rhs: α92}) & α88) & α89) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α89) | ((((α72 & α88) & α89) & α94) & (~(add<>) & ~(lit<>)))))
//│ 		α92 <: (((((add<> & {lhs: α90, rhs: α92}) & α88) & α91) & α93) | (((((lit<> & {val: (int<number> & α85)}) & α87) & α88) & α91) | ((((α72 & α88) & α91) & α94) & (~(add<>) & ~(lit<>)))))
//│ 		α100 <: (((((add<> & {lhs: α100, rhs: α102}) & α97) & α99) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α99) | (((α73 & α97) & α99) & (~(add<>) & ~(lit<>)))))
//│ 		α102 <: (((((add<> & {lhs: α100, rhs: α102}) & α97) & α101) & α103) | (((((lit<> & {val: (int<number> & α95)}) & α97) & α98) & α101) | (((α73 & α97) & α101) & (~(add<>) & ~(lit<>)))))
//│ [rec] HashSet(α100, α102, α90, α92)
//│ [!] α70
//│ [!] α75
//│ [!] α77
//│ [!] α78
//│ [!] α80
//│ [!] α81
//│ [!] α82
//│ [!] α83
//│ [!] α84
//│ [!] α85
//│ [!] α86
//│ [!] α87
//│ [!] α88
//│ [!] α89
//│ [!] α91
//│ [!] α93
//│ [!] α94
//│ [!] α95
//│ [!] α96
//│ [!] α97
//│ [!] α98
//│ [!] α99
//│ [!] α101
//│ [!] α103
//│ [!] α104
//│ [!] α105
//│ [!] α106
//│ [!] α107
//│ [!] α108
//│ [v] α71 Some(HashSet(α71, α72, α73)) Some(HashSet(α83, α71))
//│ [w] α72 Some(HashSet(α71, α72, α73))
//│ [U] α72 := α71
//│ [w] α73 Some(HashSet(α71, α72, α73))
//│ [U] α73 := α71
//│ [v] α74 Some(HashSet(string<>, α104, α105, α74, α106, α107, α76, α108)) Some(HashSet(string<>, α74, α75, α76))
//│ [..] α74 string<>
//│ [w] α76 Some(HashSet(string<>, α104, α105, α74, α106, α107, α76, α108))
//│ [U] α76 := α74
//│ [..] α74 string<>
//│ [v] α79 Some(HashSet(α79)) Some(HashSet(α83, add<>, α79))
//│ [v] α90 None Some(HashSet(α90))
//│ [v] α92 None Some(HashSet(α92))
//│ [v] α100 None Some(HashSet(α100))
//│ [v] α102 None Some(HashSet(α102))
//│ [sub] α70 -> None, α72 -> Some(α71), α73 -> Some(α71), α74 -> None, α75 -> None, α76 -> Some(α74), α77 -> None, α78 -> None, α80 -> None, α81 -> None, α82 -> None, α83 -> None, α84 -> None, α85 -> None, α86 -> None, α87 -> None, α88 -> None, α89 -> None, α91 -> None, α93 -> None, α94 -> None, α95 -> None, α96 -> None, α97 -> None, α98 -> None, α99 -> None, α101 -> None, α103 -> None, α104 -> None, α105 -> None, α106 -> None, α107 -> None, α108 -> None
//│ Renewed α71 ~> α109
//│ Renewed α79 ~> α110
//│ Renewed α90 ~> α111
//│ Renewed α92 ~> α112
//│ Renewed α100 ~> α113
//│ Renewed α102 ~> α114
//│ ⬤ Type after simplification: ((α109 -> string<>) -> ((α110 -> int<number>) -> ((((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))) -> string<>)))
//│  where: 
//│ 		α111 <: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))
//│ 		α112 <: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))
//│ 		α113 <: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))
//│ 		α114 <: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))
//│ allVarPols: =α109, =α110, -α111, -α112, -α113, -α114
//│ recons[+] ((α109 -> string<>) -> ((α110 -> int<number>) -> ((((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))) -> string<>)))  (FunctionType)
//│ | recons[-] ((α109 -> string<>),)  (TupleType)
//│ | | recons[-] (α109 -> string<>)  (FunctionType)
//│ | | | recons[+] (α109,)  (TupleType)
//│ | | | | recons[+] α109  (TypeVariable)
//│ | | | | => α109
//│ | | | => (α109,)
//│ | | | recons[-] string<>  (ClassTag)
//│ | | | | DNF: DNF(string<>{})
//│ | | | => string<>
//│ | | => (α109 -> string<>)
//│ | => ((α109 -> string<>),)
//│ | recons[+] ((α110 -> int<number>) -> ((((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))) -> string<>))  (FunctionType)
//│ | | recons[-] ((α110 -> int<number>),)  (TupleType)
//│ | | | recons[-] (α110 -> int<number>)  (FunctionType)
//│ | | | | recons[+] (α110,)  (TupleType)
//│ | | | | | recons[+] α110  (TypeVariable)
//│ | | | | | => α110
//│ | | | | => (α110,)
//│ | | | | recons[-] int<number>  (ClassTag)
//│ | | | | | DNF: DNF(int<number>{})
//│ | | | | => int<number>
//│ | | | => (α110 -> int<number>)
//│ | | => ((α110 -> int<number>),)
//│ | | recons[+] ((((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))) -> string<>)  (FunctionType)
//│ | | | recons[-] ((((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))),)  (TupleType)
//│ | | | | recons[-] (((add<> & {lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}) & α110) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | DNF: DNF(add<>{lhs: ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>))))), rhs: ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))}∧α110 | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | => ⊥
//│ | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | => ⊤
//│ | | | | | recons[-] ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | DNF: DNF(add<>{lhs: α111, rhs: α112} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | => ⊥
//│ | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | => ⊤
//│ | | | | | | recons[-] α111  (TypeVariable)
//│ | | | | | | | recons[-] ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | | | DNF: DNF(add<>{lhs: α111, rhs: α112} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | | | => ⊥
//│ | | | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | | | => ⊤
//│ | | | | | | | | recons[-] α111  (TypeVariable)
//│ | | | | | | | | => α115
//│ | | | | | | | | recons[-] α112  (TypeVariable)
//│ | | | | | | | | | recons[-] ((add<> & {lhs: α111, rhs: α112}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | | | | | DNF: DNF(add<>{lhs: α111, rhs: α112} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | | | | | => ⊥
//│ | | | | | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | | | | | => ⊤
//│ | | | | | | | | | | recons[-] α111  (TypeVariable)
//│ | | | | | | | | | | => α115
//│ | | | | | | | | | | recons[-] α112  (TypeVariable)
//│ | | | | | | | | | | => α116
//│ | | | | | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | | | | | Factors α109 -> 1
//│ | | | | | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | | => α116
//│ | | | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | | | Factors α109 -> 1
//│ | | | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | => α115
//│ | | | | | | recons[-] α112  (TypeVariable)
//│ | | | | | | => α116
//│ | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | Factors α109 -> 1
//│ | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | recons[-] ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | DNF: DNF(add<>{lhs: α113, rhs: α114} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | => ⊥
//│ | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | => ⊤
//│ | | | | | | recons[-] α113  (TypeVariable)
//│ | | | | | | | recons[-] ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | | | DNF: DNF(add<>{lhs: α113, rhs: α114} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | | | => ⊥
//│ | | | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | | | => ⊤
//│ | | | | | | | | recons[-] α113  (TypeVariable)
//│ | | | | | | | | => α117
//│ | | | | | | | | recons[-] α114  (TypeVariable)
//│ | | | | | | | | | recons[-] ((add<> & {lhs: α113, rhs: α114}) | ((lit<> & {val: int<number>}) | (α109 & (~(add<>) & ~(lit<>)))))  (ComposedType)
//│ | | | | | | | | | | DNF: DNF(add<>{lhs: α113, rhs: α114} | lit<>{val: int<number>} | α109∧~add<>|lit<>|None)
//│ | | | | | | | | | | recons[-] ⊥  (ExtrType)
//│ | | | | | | | | | | => ⊥
//│ | | | | | | | | | | recons[+] ⊤  (ExtrType)
//│ | | | | | | | | | | => ⊤
//│ | | | | | | | | | | recons[-] α113  (TypeVariable)
//│ | | | | | | | | | | => α117
//│ | | | | | | | | | | recons[-] α114  (TypeVariable)
//│ | | | | | | | | | | => α118
//│ | | | | | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | | | | | Factors α109 -> 1
//│ | | | | | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | | => α118
//│ | | | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | | | Factors α109 -> 1
//│ | | | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | | => α117
//│ | | | | | | recons[-] α114  (TypeVariable)
//│ | | | | | | => α118
//│ | | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | | Factors α109 -> 1
//│ | | | | | | yes: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | => (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | | factorize? [(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110 | Lit | α109 & ~(add<>) & ~(lit<>)
//│ | | | | | | Factors α109 -> 1, α110 -> 1
//│ | | | | | yes: ((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | | => ((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ | | | => (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))),)
//│ | | | recons[+] string<>  (ClassTag)
//│ | | | | DNF: DNF(string<>{})
//│ | | | => string<>
//│ | | => (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>)
//│ | => ((α110 -> int<number>) -> (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>))
//│ => ((α109 -> string<>) -> ((α110 -> int<number>) -> (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>)))
//│ ⬤ Recons: ((α109 -> string<>) -> ((α110 -> int<number>) -> (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>)))
//│  where: 
//│ 		α115 <: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ 		α116 <: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ 		α117 <: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ 		α118 <: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))
//│ allVarPols: =α109, =α110, -α115, -α116, -α117, -α118
//│ expand[+] ((α109 -> string<>) -> ((α110 -> int<number>) -> (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>)))  —  
//│ | expand[-] ((α109 -> string<>),)  —  
//│ | | expand[-] (α109 -> string<>)  —  
//│ | | | expand[+] (α109,)  —  
//│ | | | | expand[+] α109  —  
//│ | | | | | isBadlyRecursive(α109) = None None
//│ | | | | | (>>>>>>,α109)
//│ | | | | | (>>>>>>,Set(),false)
//│ | | | | => α109
//│ | | | => Tuple(List((None,Field(None,α109))))
//│ | | | expand[-] string<>  —  
//│ | | | => TypeName(string)
//│ | | => Function(Tuple(List((None,Field(None,α109)))),TypeName(string))
//│ | => Tuple(List((None,Field(None,Function(Tuple(List((None,Field(None,α109)))),TypeName(string))))))
//│ | expand[+] ((α110 -> int<number>) -> (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>))  —  
//│ | | expand[-] ((α110 -> int<number>),)  —  
//│ | | | expand[-] (α110 -> int<number>)  —  
//│ | | | | expand[+] (α110,)  —  
//│ | | | | | expand[+] α110  —  
//│ | | | | | | isBadlyRecursive(α110) = None None
//│ | | | | | | (>>>>>>,α110)
//│ | | | | | | (>>>>>>,Set(),false)
//│ | | | | | => α110
//│ | | | | => Tuple(List((None,Field(None,α110))))
//│ | | | | expand[-] int<number>  —  
//│ | | | | => TypeName(int)
//│ | | | => Function(Tuple(List((None,Field(None,α110)))),TypeName(int))
//│ | | => Tuple(List((None,Field(None,Function(Tuple(List((None,Field(None,α110)))),TypeName(int))))))
//│ | | expand[+] (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))) -> string<>)  —  
//│ | | | expand[-] (((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>))),)  —  
//│ | | | | expand[-] ((([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  
//│ | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110) | Lit)  —  
//│ | | | | | | expand[-] ([(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})] & α110)  —  
//│ | | | | | | | expand[-] [(Add[⊥..⊤]\lhs-rhs & {lhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>))), rhs: (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))})]  —  
//│ | | | | | | | | expand[-] Add[⊥..⊤]  —  
//│ | | | | | | | | | expand[+] ⊥..⊤  —  
//│ | | | | | | | | | | expand[+] ⊥  —  
//│ | | | | | | | | | | => Bot
//│ | | | | | | | | | => Bot
//│ | | | | | | | | | expand[-] ⊥..⊤  —  
//│ | | | | | | | | | | expand[-] ⊤  —  
//│ | | | | | | | | | | => Top
//│ | | | | | | | | | => Top
//│ | | | | | | | | => AppliedType(TypeName(Add),List(Bounds(Bot,Top)))
//│ | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  
//│ | | | | | | | | | expand[-] ([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit)  —  
//│ | | | | | | | | | | expand[-] [(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})]  —  
//│ | | | | | | | | | | | expand[-] Add[⊥..⊤]  —  
//│ | | | | | | | | | | | | expand[+] ⊥..⊤  —  
//│ | | | | | | | | | | | | | expand[+] ⊥  —  
//│ | | | | | | | | | | | | | => Bot
//│ | | | | | | | | | | | | => Bot
//│ | | | | | | | | | | | | expand[-] ⊥..⊤  —  
//│ | | | | | | | | | | | | | expand[-] ⊤  —  
//│ | | | | | | | | | | | | | => Top
//│ | | | | | | | | | | | | => Top
//│ | | | | | | | | | | | => AppliedType(TypeName(Add),List(Bounds(Bot,Top)))
//│ | | | | | | | | | | | expand[-] α115  —  
//│ | | | | | | | | | | | | isBadlyRecursive(α115) = None Some(Some(false))
//│ | | | | | | | | | | | | (>>>>>>,α115)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  α115
//│ | | | | | | | | | | | | => α119
//│ | | | | | | | | | | | => α119
//│ | | | | | | | | | | | expand[-] α116  —  
//│ | | | | | | | | | | | | isBadlyRecursive(α116) = None Some(Some(false))
//│ | | | | | | | | | | | | (>>>>>>,α116)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α115, rhs: α116})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  α116
//│ | | | | | | | | | | | | => α119
//│ | | | | | | | | | | | => α119
//│ | | | | | | | | | | => WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119)))))
//│ | | | | | | | | | | expand[-] Lit  —  
//│ | | | | | | | | | | => TypeName(Lit)
//│ | | | | | | | | | => Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit))
//│ | | | | | | | | | expand[-] ((α109 & ~(add<>)) & ~(lit<>))  —  
//│ | | | | | | | | | | expand[-] (α109 & ~(add<>))  —  
//│ | | | | | | | | | | | expand[-] α109  —  
//│ | | | | | | | | | | | | (>>>>>>,α109)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | => α109
//│ | | | | | | | | | | | expand[-] ~(add<>)  —  
//│ | | | | | | | | | | | | expand[+] add<>  —  
//│ | | | | | | | | | | | | => TypeName(add)
//│ | | | | | | | | | | | => Neg(TypeName(add))
//│ | | | | | | | | | | => Inter(α109,Neg(TypeName(add)))
//│ | | | | | | | | | | expand[-] ~(lit<>)  —  
//│ | | | | | | | | | | | expand[+] lit<>  —  
//│ | | | | | | | | | | | => TypeName(lit)
//│ | | | | | | | | | | => Neg(TypeName(lit))
//│ | | | | | | | | | => Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))
//│ | | | | | | | | => Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))
//│ | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  
//│ | | | | | | | | | expand[-] ([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit)  —  
//│ | | | | | | | | | | expand[-] [(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})]  —  
//│ | | | | | | | | | | | expand[-] Add[⊥..⊤]  —  
//│ | | | | | | | | | | | | expand[+] ⊥..⊤  —  
//│ | | | | | | | | | | | | | expand[+] ⊥  —  
//│ | | | | | | | | | | | | | => Bot
//│ | | | | | | | | | | | | => Bot
//│ | | | | | | | | | | | | expand[-] ⊥..⊤  —  
//│ | | | | | | | | | | | | | expand[-] ⊤  —  
//│ | | | | | | | | | | | | | => Top
//│ | | | | | | | | | | | | => Top
//│ | | | | | | | | | | | => AppliedType(TypeName(Add),List(Bounds(Bot,Top)))
//│ | | | | | | | | | | | expand[-] α117  —  
//│ | | | | | | | | | | | | isBadlyRecursive(α117) = None Some(Some(false))
//│ | | | | | | | | | | | | (>>>>>>,α117)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  α117
//│ | | | | | | | | | | | | => α120
//│ | | | | | | | | | | | => α120
//│ | | | | | | | | | | | expand[-] α118  —  
//│ | | | | | | | | | | | | isBadlyRecursive(α118) = None Some(Some(false))
//│ | | | | | | | | | | | | (>>>>>>,α118)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | | expand[-] (([(Add[⊥..⊤]\lhs-rhs & {lhs: α117, rhs: α118})] | Lit) | ((α109 & ~(add<>)) & ~(lit<>)))  —  α118
//│ | | | | | | | | | | | | => α120
//│ | | | | | | | | | | | => α120
//│ | | | | | | | | | | => WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120)))))
//│ | | | | | | | | | | expand[-] Lit  —  
//│ | | | | | | | | | | => TypeName(Lit)
//│ | | | | | | | | | => Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit))
//│ | | | | | | | | | expand[-] ((α109 & ~(add<>)) & ~(lit<>))  —  
//│ | | | | | | | | | | expand[-] (α109 & ~(add<>))  —  
//│ | | | | | | | | | | | expand[-] α109  —  
//│ | | | | | | | | | | | | (>>>>>>,α109)
//│ | | | | | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | | | | | => α109
//│ | | | | | | | | | | | expand[-] ~(add<>)  —  
//│ | | | | | | | | | | | | expand[+] add<>  —  
//│ | | | | | | | | | | | | => TypeName(add)
//│ | | | | | | | | | | | => Neg(TypeName(add))
//│ | | | | | | | | | | => Inter(α109,Neg(TypeName(add)))
//│ | | | | | | | | | | expand[-] ~(lit<>)  —  
//│ | | | | | | | | | | | expand[+] lit<>  —  
//│ | | | | | | | | | | | => TypeName(lit)
//│ | | | | | | | | | | => Neg(TypeName(lit))
//│ | | | | | | | | | => Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))
//│ | | | | | | | | => Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))
//│ | | | | | | | => WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))))))
//│ | | | | | | | expand[-] α110  —  
//│ | | | | | | | | (>>>>>>,α110)
//│ | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | => α110
//│ | | | | | | => Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110)
//│ | | | | | | expand[-] Lit  —  
//│ | | | | | | => TypeName(Lit)
//│ | | | | | => Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit))
//│ | | | | | expand[-] ((α109 & ~(add<>)) & ~(lit<>))  —  
//│ | | | | | | expand[-] (α109 & ~(add<>))  —  
//│ | | | | | | | expand[-] α109  —  
//│ | | | | | | | | (>>>>>>,α109)
//│ | | | | | | | | (>>>>>>,Set(),false)
//│ | | | | | | | => α109
//│ | | | | | | | expand[-] ~(add<>)  —  
//│ | | | | | | | | expand[+] add<>  —  
//│ | | | | | | | | => TypeName(add)
//│ | | | | | | | => Neg(TypeName(add))
//│ | | | | | | => Inter(α109,Neg(TypeName(add)))
//│ | | | | | | expand[-] ~(lit<>)  —  
//│ | | | | | | | expand[+] lit<>  —  
//│ | | | | | | | => TypeName(lit)
//│ | | | | | | => Neg(TypeName(lit))
//│ | | | | | => Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))
//│ | | | | => Union(Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))
//│ | | | => Tuple(List((None,Field(None,Union(Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))))
//│ | | | expand[+] string<>  —  
//│ | | | => TypeName(string)
//│ | | => Function(Tuple(List((None,Field(None,Union(Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))),TypeName(string))
//│ | => Function(Tuple(List((None,Field(None,Function(Tuple(List((None,Field(None,α110)))),TypeName(int)))))),Function(Tuple(List((None,Field(None,Union(Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))),TypeName(string)))
//│ => Function(Tuple(List((None,Field(None,Function(Tuple(List((None,Field(None,α109)))),TypeName(string)))))),Function(Tuple(List((None,Field(None,Function(Tuple(List((None,Field(None,α110)))),TypeName(int)))))),Function(Tuple(List((None,Field(None,Union(Union(Inter(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,Recursive(α119,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α119)), (rhs,Field(None,α119))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit))))))), (rhs,Field(None,Recursive(α120,Union(Union(WithExtension(AppliedType(TypeName(Add),List(Bounds(Bot,Top))),Record(List((lhs,Field(None,α120)), (rhs,Field(None,α120))))),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))))),α110),TypeName(Lit)),Inter(Inter(α109,Neg(TypeName(add))),Neg(TypeName(lit)))))))),TypeName(string))))
//│ res: ('a -> string) -> ('b -> int) -> ((Add[?] with {lhs: (Add[?] with {lhs: 'c, rhs: 'c}) | Lit | 'a & ~add & ~lit as 'c, rhs: (Add[?] with {lhs: 'd, rhs: 'd}) | Lit | 'a & ~add & ~lit as 'd}) & 'b | Lit | 'a & ~add & ~lit) -> string
//│    = [Function: prettier1]
//│ constrain calls  : 0
//│ annoying  calls  : 0
//│ subtyping calls  : 921

:stats
e1 = Add{lhs = Lit {val = 1}; rhs = Add{lhs = Lit {val = 2}; rhs = Lit {val = 3}}}
eval1 done e1
pretty1 done e1
prettier1 done (eval1 done) e1
//│ e1: Add['E] with {lhs: Lit & {val: 1}, rhs: Add['E0] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}}
//│   where
//│     'E :> (Add['E0] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}) | Lit & {val: 1}
//│     'E0 :> Lit & {val: 2} | Lit & {val: 3}
//│   = Add {
//│       lhs: Lit { val: 1 },
//│       rhs: Add { lhs: Lit { val: 2 }, rhs: Lit { val: 3 } }
//│     }
//│ res: int
//│    = 6
//│ res: string
//│    = '123'
//│ res: string
//│    = '123'
//│ constrain calls  : 281
//│ annoying  calls  : 240
//│ subtyping calls  : 606


e1 = add (lit 1) (add (lit 2) (lit 3))
eval1 done e1
pretty1 done e1
prettier1 done (eval1 done) e1
//│ e1: Add['E] with {lhs: Lit & {val: 1}, rhs: Add['E0] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}}
//│   where
//│     'E :> (Add['E0] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}) | Lit & {val: 1}
//│     'E0 :> Lit & {val: 2} | Lit & {val: 3}
//│   = Add {
//│       lhs: Lit { val: 1 },
//│       rhs: Add { lhs: Lit { val: 2 }, rhs: Lit { val: 3 } }
//│     }
//│ res: int
//│    = 6
//│ res: string
//│    = '123'
//│ res: string
//│    = '123'



class Nega[E]: { arg: E }
def nega arg = Nega { arg }
//│ Defined class Nega
//│ nega: ('arg & 'E) -> (Nega['E] with {arg: 'arg})
//│     = [Function: nega]



rec def eval2 k = eval1 (fun x -> case x of {
  | Nega -> 0 - (eval2 k x.arg)
  | _ -> k x
  })
//│ eval2: ('a -> int) -> ((Add[?] with {lhs: 'b, rhs: 'b}) | Lit | (Nega[?] with {arg: 'b}) | 'a & ~add & ~lit & ~nega as 'b) -> int
//│      = [Function: eval2]


// FIXME particularly egregious type!
// :ds
:stats
rec def prettier2 k ev = prettier1 (fun x -> case x of {
  | Nega -> concat "-" (prettier2 k ev x.arg)
  | _ -> k x
  }) ev
//│ prettier2: ('a -> string) -> ('b -> int) -> ((Add[?] with {lhs: (Add[?] with {lhs: 'd, rhs: 'd}) | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'd, rhs: (Add[?] with {lhs: 'e, rhs: 'e}) | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'e}) & 'b | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'c) -> string
//│          = [Function: prettier2]
//│ constrain calls  : 86
//│ annoying  calls  : 0
//│ subtyping calls  : 11727

// :ds
:stats
prettier2
//│ res: ('a -> string) -> ('b -> int) -> ((Add[?] with {lhs: (Add[?] with {lhs: 'd, rhs: 'd}) | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'd, rhs: (Add[?] with {lhs: 'e, rhs: 'e}) | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'e}) & 'b | Lit | (Nega[?] with {arg: 'c}) | 'a & ~add & ~lit & ~nega as 'c) -> string
//│    = [Function: prettier2]
//│ constrain calls  : 0
//│ annoying  calls  : 0
//│ subtyping calls  : 11727



:stats
eval2 done e1
//│ res: int
//│    = 6
//│ constrain calls  : 57
//│ annoying  calls  : 60
//│ subtyping calls  : 131

e2 = add (lit 1) (nega e1)
//│ e2: Add['E] with {lhs: Lit & {val: 1}, rhs: Nega['E0] with {arg: Add['E1] with {lhs: Lit & {val: 1}, rhs: Add['E2] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}}}}
//│   where
//│     'E :> Lit & {val: 1} | (Nega['E0] with {arg: Add['E1] with {lhs: Lit & {val: 1}, rhs: Add['E2] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}}})
//│     'E0 :> Add['E1] with {lhs: Lit & {val: 1}, rhs: Add['E2] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}}
//│     'E1 :> (Add['E2] with {lhs: Lit & {val: 2}, rhs: Lit & {val: 3}}) | Lit & {val: 1}
//│     'E2 :> Lit & {val: 2} | Lit & {val: 3}
//│   = Add {
//│       lhs: Lit { val: 1 },
//│       rhs: Nega { arg: Add { lhs: [Lit], rhs: [Add] } }
//│     }

:stats
eval2 done e2
//│ res: int
//│    = -5
//│ constrain calls  : 81
//│ annoying  calls  : 103
//│ subtyping calls  : 178

d2 = nega (add (lit 1) (nega (lit 1)))
//│ d2: Nega['E] with {arg: Add['E0] with {lhs: Lit & {val: 1}, rhs: Nega['E1] with {arg: Lit & {val: 1}}}}
//│   where
//│     'E :> Add['E0] with {lhs: Lit & {val: 1}, rhs: Nega['E1] with {arg: Lit & {val: 1}}}
//│     'E0 :> Lit & {val: 1} | (Nega['E1] with {arg: Lit & {val: 1}})
//│     'E1 :> Lit & {val: 1}
//│   = Nega { arg: Add { lhs: Lit { val: 1 }, rhs: Nega { arg: [Lit] } } }

:stats
eval2 done d2
//│ res: int
//│    = 0
//│ constrain calls  : 56
//│ annoying  calls  : 71
//│ subtyping calls  : 92


prettier2 done
//│ res: ('a -> int) -> ((Add[?] with {lhs: (Add[?] with {lhs: 'c, rhs: 'c}) | Lit | (Nega[?] with {arg: 'b}) as 'c, rhs: (Add[?] with {lhs: 'd, rhs: 'd}) | Lit | (Nega[?] with {arg: 'b}) as 'd}) & 'a | Lit | (Nega[?] with {arg: 'b}) as 'b) -> string
//│    = [Function (anonymous)]

:stats
prettier2 done (eval1 done)
//│ res: ((Add[?] with {lhs: (Add[?] with {lhs: 'b, rhs: 'b}) | Lit as 'b, rhs: (Add[?] with {lhs: 'c, rhs: 'c}) | Lit as 'c}) | Lit | (Nega[?] with {arg: 'a}) as 'a) -> string
//│    = [Function (anonymous)]
//│ constrain calls  : 36
//│ annoying  calls  : 0
//│ subtyping calls  : 3702

:stats
prettier2 done (eval2 done)
prettier2 done (eval2 done) e2
prettier2 done (eval2 done) d2
//│ res: (((Add[?] with {lhs: (Add[?] with {lhs: 'c, rhs: 'c}) | Lit | ((Nega[?] with {arg: 'b | 'd}) as 'd) as 'c, rhs: (Add[?] with {lhs: 'e, rhs: 'e}) | Lit | ((Nega[?] with {arg: 'b | 'd}) as 'd) as 'e}) | Lit as 'b) | (Nega[?] with {arg: 'a}) as 'a) -> string
//│    = [Function (anonymous)]
//│ res: string
//│    = '1-123'
//│ res: string
//│    = '-1'
//│ constrain calls  : 343
//│ annoying  calls  : 335
//│ subtyping calls  : 44623




// === === === ERROR CASES === === === //


:ShowRelativeLineNums


:e
eval1 done e2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	eval1 done e2
//│ ║        	^^^^^^^^^^^^^
//│ ╟── expression of type `Nega[?E] with {arg: ?arg}` does not match type `nothing`
//│ ╟── Note: constraint arises from wildcard pattern:
//│ ║  l.63: 	  | _ -> k e
//│ ║        	         ^^^
//│ ╟── from field selection:
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ╙──      	                                   ^^^^^
//│ res: error | int
//│ Runtime error:
//│   Error: non-exhaustive case expression


:e
prettier2 done eval1 e1
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval1 e1
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval1 e1
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Add[?E] with {lhs: ?lhs, rhs: ?rhs}` is not a function
//│ ║  l.1511: 	e1 = add (lit 1) (add (lit 2) (lit 3))
//│ ║          	     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.63: 	  | _ -> k e
//│ ║        	         ^^^
//│ ╟── from refined scrutinee:
//│ ║  l.221: 	rec def prettier1 k ev e = case e of {
//│ ╙──       	                                ^
//│ res: error | string
//│    = '123'


:e
:stats
prettier2 done (eval1 done) e2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done (eval1 done) e2
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── expression of type `Nega[?E] with {arg: ?arg}` does not match type `nothing`
//│ ╟── Note: constraint arises from wildcard pattern:
//│ ║  l.63: 	  | _ -> k e
//│ ║        	         ^^^
//│ ╟── from field selection:
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ╙──      	                                   ^^^^^
//│ res: error | string
//│ Runtime error:
//│   Error: non-exhaustive case expression
//│ constrain calls  : 168
//│ annoying  calls  : 198
//│ subtyping calls  : 442

:e
:stats
prettier2 done eval2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ res: (Lit | (Nega[?] with {arg: 'a}) as 'a) -> string | error
//│    = [Function (anonymous)]
//│ constrain calls  : 24
//│ annoying  calls  : 0
//│ subtyping calls  : 218

:e
:stats
prettier2 done eval2 e1
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 e1
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 e1
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Add[?E] with {lhs: ?lhs, rhs: ?rhs}` is not a function
//│ ║  l.1511: 	e1 = add (lit 1) (add (lit 2) (lit 3))
//│ ║          	     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.1542: 	  | _ -> k x
//│ ║          	         ^^^
//│ ╟── from refined scrutinee:
//│ ║  l.221: 	rec def prettier1 k ev e = case e of {
//│ ╙──       	                                ^
//│ res: error | string
//│    = '123'
//│ constrain calls  : 76
//│ annoying  calls  : 62
//│ subtyping calls  : 229

:e
:stats
prettier2 done eval2 e2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 e2
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 e2
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Add[?E] with {lhs: ?lhs, rhs: ?rhs}` is not a function
//│ ║  l.1580: 	e2 = add (lit 1) (nega e1)
//│ ║          	     ^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.1542: 	  | _ -> k x
//│ ║          	         ^^^
//│ ╟── from refined scrutinee:
//│ ║  l.221: 	rec def prettier1 k ev e = case e of {
//│ ╙──       	                                ^
//│ res: error | string
//│    = '1-123'
//│ constrain calls  : 101
//│ annoying  calls  : 107
//│ subtyping calls  : 390

:e
:stats
prettier2 done eval2 d2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 d2
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval2 d2
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── expression of type `Add[?E] with {lhs: ?lhs, rhs: ?rhs}` is not a function
//│ ╟── Note: constraint arises from application:
//│ ║  l.1542: 	  | _ -> k x
//│ ║          	         ^^^
//│ ╟── from field selection:
//│ ║  l.1552: 	  | Nega -> concat "-" (prettier2 k ev x.arg)
//│ ╙──        	                                       ^^^^^
//│ res: error | string
//│    = '-1-1'
//│ constrain calls  : 76
//│ annoying  calls  : 73
//│ subtyping calls  : 208

:e
:stats
prettier2 done eval1 e2
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval1 e2
//│ ║        	^^^^^^^^^^^^^^^^^^^^
//│ ╟── function of type `?a -> (?b | ?c | ?d)` does not match type `int`
//│ ║  l.60: 	rec def eval1 k e = case e of {
//│ ║        	                ^^^^^^^^^^^^^^^
//│ ║  l.61: 	  | Lit -> e.val
//│ ║        	^^^^^^^^^^^^^^^^
//│ ║  l.62: 	  | Add -> eval1 k e.lhs + eval1 k e.rhs
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.63: 	  | _ -> k e
//│ ║        	^^^^^^^^^^^^
//│ ║  l.64: 	  }
//│ ║        	^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.225: 	      in if ev e == 0 then tmp else concat tmp (pretty1 k e.rhs)
//│ ╙──       	            ^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	prettier2 done eval1 e2
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Add[?E] with {lhs: ?lhs, rhs: ?rhs}` is not a function
//│ ║  l.1580: 	e2 = add (lit 1) (nega e1)
//│ ║          	     ^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.63: 	  | _ -> k e
//│ ║        	         ^^^
//│ ╟── from refined scrutinee:
//│ ║  l.221: 	rec def prettier1 k ev e = case e of {
//│ ╙──       	                                ^
//│ res: error | string
//│    = '1-123'
//│ constrain calls  : 100
//│ annoying  calls  : 107
//│ subtyping calls  : 386

