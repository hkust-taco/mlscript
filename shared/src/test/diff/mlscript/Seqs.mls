
class Seq[A]: { size: int }
//│ Defined class Seq

class ListBase[A]: Seq[A]
//│ Defined class ListBase

class Nil: ListBase[nothing] & {}
class Cons[A]: ListBase[A] & { head: A; tail: List[A] }
type List[A] = Nil | Cons[A]
//│ Defined class Nil
//│ Defined class Cons
//│ Defined type List

:e
Nil{}
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.16: 	Nil{}
//│ ║        	^^^^^
//│ ╟── expression of type `anything` does not match type `listBase`
//│ ║  l.16: 	Nil{}
//│ ║        	   ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.8: 	class Nil: ListBase[nothing] & {}
//│ ╙──     	           ^^^^^^^^^^^^^^^^^
//│ res: (nil & ListBase[nothing]) | error

def Nil = Nil (ListBase (Seq { size = 0 }))
//│ Nil: nil & ListBase[nothing]

def Cons head tail =
  Cons (ListBase (Seq { size = succ tail.size }) with { head; tail })
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:244)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$5(ConstraintSolver.scala:158)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:128)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:125)

Nil: ListBase[anything]
//│ res: ListBase[anything]

def c = Cons 1 Nil
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.48: 	def c = Cons 1 Nil
//│ ║        	        ^^^^^^
//│ ╟── expression of type `1` does not match type `listBase`
//│ ║  l.48: 	def c = Cons 1 Nil
//│ ║        	             ^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.9: 	class Cons[A]: ListBase[A] & { head: A; tail: List[A] }
//│ ╙──     	               ^^^^^^^^^^^
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$ProxyType.toString(TyperDatatypes.scala:112)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$ProxyType.toString(TyperDatatypes.scala:112)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$FunctionType.toString(TyperDatatypes.scala:46)
//│ 	at: java.lang.String.valueOf(String.java:2994)

c: ListBase[int]
//│ ╔══[ERROR] identifier not found: c
//│ ║  l.70: 	c: ListBase[int]
//│ ╙──      	^
//│ res: ListBase[int]

c.head
//│ ╔══[ERROR] identifier not found: c
//│ ║  l.76: 	c.head
//│ ╙──      	^
//│ res: error

c.tail
//│ ╔══[ERROR] identifier not found: c
//│ ║  l.82: 	c.tail
//│ ╙──      	^
//│ res: error

c.size
//│ ╔══[ERROR] identifier not found: c
//│ ║  l.88: 	c.size
//│ ╙──      	^
//│ res: error

def d = Cons 2 c
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.94: 	def d = Cons 2 c
//│ ║        	        ^^^^^^
//│ ╟── expression of type `2` does not match type `listBase`
//│ ║  l.94: 	def d = Cons 2 c
//│ ║        	             ^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.9: 	class Cons[A]: ListBase[A] & { head: A; tail: List[A] }
//│ ╙──     	               ^^^^^^^^^^^
//│ ╔══[ERROR] identifier not found: c
//│ ║  l.94: 	def d = Cons 2 c
//│ ╙──      	               ^
//│ /!!!\ Uncaught error: java.lang.StackOverflowError
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$ProxyType.toString(TyperDatatypes.scala:112)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$ProxyType.toString(TyperDatatypes.scala:112)
//│ 	at: java.lang.String.valueOf(String.java:2994)
//│ 	at: java.lang.StringBuilder.append(StringBuilder.java:131)
//│ 	at: mlscript.TyperDatatypes$FunctionType.toString(TyperDatatypes.scala:46)
//│ 	at: java.lang.String.valueOf(String.java:2994)

d.head
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.119: 	d.head
//│ ╙──       	^
//│ res: error

d.size
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.125: 	d.size
//│ ╙──       	^
//│ res: error

d.tail
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.131: 	d.tail
//│ ╙──       	^
//│ res: error

d.tail.size
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.137: 	d.tail.size
//│ ╙──       	^
//│ res: error

:e
d.tail.head
d.tail.tail
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.144: 	d.tail.head
//│ ╙──       	^
//│ res: error
//│ ╔══[ERROR] identifier not found: d
//│ ║  l.145: 	d.tail.tail
//│ ╙──       	^
//│ res: error

