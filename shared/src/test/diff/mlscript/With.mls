
def rcd = { x = 1 }
//│ rcd: {x: 1}

rcd.x
//│ res: 1

rcd with { y = 2 }
//│ res: {x: 1} with {y: 2}

add res.x res.y
//│ res: int

rcd with { x = "oops" }
//│ res: {x: 1} with {x: "oops"}

res.x
//│ res: "oops"

id rcd with { x = "oops" }
//│ res: {x: 1} with {x: "oops"}

res.x
//│ res: "oops"


def rcd = { }
//│ rcd: anything

id rcd with { x = "oops" }
//│ res: anything with {x: "oops"}

res.x
//│ res: "oops"


def f r = r with { x = "oops" }
//│ f: 'a -> ('a with {x: "oops"})

f rcd
//│ res: anything with {x: "oops"}

f (rcd with { y = 2 })
//│ res: anything with {y: 2} with {x: "oops"}


def f a b = if true then a else b
//│ f: 'a -> 'a -> 'a

def f a b = (if true then a else b) with { x = "oops" }
//│ f: 'a -> 'a -> ('a with {x: "oops"})

def f a b = let tmp = a.x in (if true then a else b) with { x = "oops" }
//│ f: 'a & {x: anything} -> 'a -> ('a with {x: "oops"})


({ name = "Bob" } with { age = 123 }).age
//│ res: 123

({ name = "Bob" } with { age = 123 }).name
//│ res: "Bob"

({ name = "Bob" } with { name = 123 }).name
//│ res: 123

