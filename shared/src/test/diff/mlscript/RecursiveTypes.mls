
// From Simple-sub tests:
let rec l = fun a -> fun a -> fun a -> l in let rec r = fun a -> fun a -> r in if true then l else r
//â”‚ res: (anything -> anything -> anything -> 'a) as 'a | (anything -> anything -> 'b) as 'b

rec def l a a a = l
//â”‚ l: (anything -> anything -> anything -> 'a) as 'a

rec def r a a = l
//â”‚ r: (anything -> anything -> anything -> 'a) as 'a

if true then l else r
//â”‚ res: (anything -> anything -> anything -> 'a) as 'a | (anything -> (anything -> anything -> anything -> 'b) as 'b)


