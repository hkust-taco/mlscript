:NoJS

:w
class Option[A]
class Some[A]: Option[A] & { payload: A }
class None[A]: Option[A]
//│ Defined class Option[±A]
//│ Defined class Some[+A]
//│ Defined class None[±A]
//│ ╔══[WARNING] Type definition None has bivariant type parameters:
//│ ║  l.6: 	class None[A]: Option[A]
//│ ║       	      ^^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.6: 	class None[A]: Option[A]
//│ ╙──     	           ^
//│ ╔══[WARNING] Type definition Option has bivariant type parameters:
//│ ║  l.4: 	class Option[A]
//│ ║       	      ^^^^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.4: 	class Option[A]
//│ ╙──     	             ^


:w
class List[A]
    method HeadOption: Option[A]
//│ Defined class List[±A]
//│ Declared List.HeadOption: List['A] -> Option['A]
//│ ╔══[WARNING] Type definition List has bivariant type parameters:
//│ ║  l.25: 	class List[A]
//│ ║        	      ^^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.25: 	class List[A]
//│ ╙──      	           ^

:w
class Nil[A]: List[A]
    method HeadOption = None {}
//│ Defined class Nil[±A]
//│ Defined Nil.HeadOption: Nil['A] -> None['A0]
//│ ╔══[WARNING] Type definition Nil has bivariant type parameters:
//│ ║  l.37: 	class Nil[A]: List[A]
//│ ║        	      ^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.37: 	class Nil[A]: List[A]
//│ ╙──      	          ^

// class Cons[A]: List[A] & { head: A; tail: Nil[A] }
// class Cons[A]: List[A] & { head: A; tail: list }
// class Cons[A]: List[A] & { head: A; tail: anything }
class Cons[A]: List[A] & { head: A; tail: List[A] }
    method HeadOption = Some { payload = error: A }
//│ Defined class Cons[+A]
//│ Defined Cons.HeadOption: Cons['A] -> (Some['a] with {payload: 'A})
//│   where
//│     'a :> 'A

// l0 = Cons { tail = Cons { tail = Cons { tail = Nil {} } } }

l0 = Cons { head = 1; tail = Nil {} }
//│ l0: Cons['A] with {head: 1, tail: Nil['A]}
//│   where
//│     'A :> 1

// :d
:stats
Cons.HeadOption l0
//│ res: Some['a] & {payload: 1}
//│   where
//│     'a :> 1
//│ constrain calls  : 75
//│ annoying  calls  : 27
//│ subtyping calls  : 92


